{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = require(\"dotenv\");\n\nvar _dotenv2 = _interopRequireDefault(_dotenv);\n\nvar _express = require(\"express\");\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _http = require(\"http\");\n\nvar _cors = require(\"cors\");\n\nvar _cors2 = _interopRequireDefault(_cors);\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _models = require(\"./src/models\");\n\nvar _models2 = _interopRequireDefault(_models);\n\nvar _schema = require(\"./src/schema\");\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nvar _resolvers = require(\"./src/resolvers\");\n\nvar _resolvers2 = _interopRequireDefault(_resolvers);\n\nvar _apolloServer = require(\"./src/utils/apollo-server\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_dotenv2.default.config(); // initializing api\n\n\nconst app = (0, _express2.default)(); // connected to the mongoDB cluster\n\n_mongoose2.default.connect(\"mongodb+srv://adhrit:NXsF3Vd3Regnw6a@cluster0.jsest.mongodb.net/api?retryWrites=true&w=majority\", {\n  useCreateIndex: true,\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useUnifiedTopology: true\n}).then(() => console.log('ðŸš€ DB connected')).catch(error => console.log(error)); // Enable CORS\n\n\nconst corsOptions = {\n  origin: process.env.FRONTEND_URL,\n  credentials: true\n};\napp.use((0, _cors2.default)(corsOptions)); // Create a apollo server \n\nconst server = (0, _apolloServer.createApolloServer)(_schema2.default, _resolvers2.default, _models2.default);\nserver.applyMiddleware({\n  app,\n  path: '/graphql'\n}); // Create http server and subscriptions for it\n\nconst httpServer = (0, _http.createServer)(app);\nserver.installSubscriptionHandlers(httpServer); //Listen to HTTP and WebSocket server\n\nconst PORT = process.env.PORT;\nhttpServer.listen({\n  port: PORT\n}, () => {\n  console.log(`server ready at http://localhost:${PORT}${server.graphqlPath}`);\n  console.log(`Subscriptions ready at ws://localhost:${PORT}${server.subscriptionsPath}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsImFwcCIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZUNyZWF0ZUluZGV4IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlRmluZEFuZE1vZGlmeSIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImNvcnNPcHRpb25zIiwib3JpZ2luIiwicHJvY2VzcyIsImVudiIsIkZST05URU5EX1VSTCIsImNyZWRlbnRpYWxzIiwidXNlIiwic2VydmVyIiwic2NoZW1hIiwicmVzb2x2ZXJzIiwibW9kZWxzIiwiYXBwbHlNaWRkbGV3YXJlIiwicGF0aCIsImh0dHBTZXJ2ZXIiLCJpbnN0YWxsU3Vic2NyaXB0aW9uSGFuZGxlcnMiLCJQT1JUIiwibGlzdGVuIiwicG9ydCIsImdyYXBocWxQYXRoIiwic3Vic2NyaXB0aW9uc1BhdGgiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBQSxpQkFBT0MsTUFBUCxHLENBQ0E7OztBQUNBLE1BQU1DLEdBQUcsR0FBRyx3QkFBWixDLENBRUE7O0FBQ0FDLG1CQUNJQyxPQURKLENBQ1ksaUdBRFosRUFDK0c7QUFDeEdDLEVBQUFBLGNBQWMsRUFBRSxJQUR3RjtBQUV4R0MsRUFBQUEsZUFBZSxFQUFFLElBRnVGO0FBR3hHQyxFQUFBQSxnQkFBZ0IsRUFBRSxLQUhzRjtBQUl4R0MsRUFBQUEsa0JBQWtCLEVBQUU7QUFKb0YsQ0FEL0csRUFPSUMsSUFQSixDQU9TLE1BQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaLENBUGYsRUFRSUMsS0FSSixDQVFXQyxLQUFELElBQVdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxLQUFaLENBUnJCLEUsQ0FVQTs7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHO0FBQ2hCQyxFQUFBQSxNQUFNLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxZQURKO0FBRWhCQyxFQUFBQSxXQUFXLEVBQUU7QUFGRyxDQUFwQjtBQUlBakIsR0FBRyxDQUFDa0IsR0FBSixDQUFRLG9CQUFLTixXQUFMLENBQVIsRSxDQUVBOztBQUNBLE1BQU1PLE1BQU0sR0FBRyxzQ0FBbUJDLGdCQUFuQixFQUEyQkMsbUJBQTNCLEVBQXNDQyxnQkFBdEMsQ0FBZjtBQUNBSCxNQUFNLENBQUNJLGVBQVAsQ0FBdUI7QUFBQ3ZCLEVBQUFBLEdBQUQ7QUFBT3dCLEVBQUFBLElBQUksRUFBRTtBQUFiLENBQXZCLEUsQ0FFQTs7QUFDQSxNQUFNQyxVQUFVLEdBQUcsd0JBQWF6QixHQUFiLENBQW5CO0FBQ0FtQixNQUFNLENBQUNPLDJCQUFQLENBQW1DRCxVQUFuQyxFLENBRUE7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHYixPQUFPLENBQUNDLEdBQVIsQ0FBWVksSUFBekI7QUFDQUYsVUFBVSxDQUFDRyxNQUFYLENBQWtCO0FBQUVDLEVBQUFBLElBQUksRUFBRUY7QUFBUixDQUFsQixFQUFrQyxNQUFNO0FBQ3BDbkIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsb0NBQW1Da0IsSUFBSyxHQUFFUixNQUFNLENBQUNXLFdBQVksRUFBMUU7QUFDQXRCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHlDQUF3Q2tCLElBQUssR0FBRVIsTUFBTSxDQUFDWSxpQkFBa0IsRUFBckY7QUFDSCxDQUhEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XHJcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVNlcnZlciB9IGZyb20gXCJodHRwXCI7XHJcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XHJcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCBtb2RlbHMgZnJvbSBcIi4vc3JjL21vZGVsc1wiO1xyXG5pbXBvcnQgc2NoZW1hIGZyb20gXCIuL3NyYy9zY2hlbWFcIjtcclxuaW1wb3J0IHJlc29sdmVycyBmcm9tIFwiLi9zcmMvcmVzb2x2ZXJzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUFwb2xsb1NlcnZlciB9IGZyb20gXCIuL3NyYy91dGlscy9hcG9sbG8tc2VydmVyXCI7XHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcbi8vIGluaXRpYWxpemluZyBhcGlcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy8gY29ubmVjdGVkIHRvIHRoZSBtb25nb0RCIGNsdXN0ZXJcclxubW9uZ29vc2VcclxuICAgLmNvbm5lY3QoXCJtb25nb2RiK3NydjovL2FkaHJpdDpOWHNGM1ZkM1JlZ253NmFAY2x1c3RlcjAuanNlc3QubW9uZ29kYi5uZXQvYXBpP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiLCB7XHJcbiAgICAgICB1c2VDcmVhdGVJbmRleDogdHJ1ZSxcclxuICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgICAgIHVzZUZpbmRBbmRNb2RpZnk6IGZhbHNlLFxyXG4gICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxyXG4gICB9KVxyXG4gICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygn8J+agCBEQiBjb25uZWN0ZWQnKSlcclxuICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcclxuXHJcbi8vIEVuYWJsZSBDT1JTXHJcbmNvbnN0IGNvcnNPcHRpb25zID0ge1xyXG4gICAgb3JpZ2luOiBwcm9jZXNzLmVudi5GUk9OVEVORF9VUkwsXHJcbiAgICBjcmVkZW50aWFsczogdHJ1ZSAsXHJcbn07XHJcbmFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpO1xyXG5cclxuLy8gQ3JlYXRlIGEgYXBvbGxvIHNlcnZlciBcclxuY29uc3Qgc2VydmVyID0gY3JlYXRlQXBvbGxvU2VydmVyKHNjaGVtYSwgcmVzb2x2ZXJzLCBtb2RlbHMpO1xyXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHthcHAgLCBwYXRoOiAnL2dyYXBocWwnfSk7XHJcblxyXG4vLyBDcmVhdGUgaHR0cCBzZXJ2ZXIgYW5kIHN1YnNjcmlwdGlvbnMgZm9yIGl0XHJcbmNvbnN0IGh0dHBTZXJ2ZXIgPSBjcmVhdGVTZXJ2ZXIoYXBwKTtcclxuc2VydmVyLmluc3RhbGxTdWJzY3JpcHRpb25IYW5kbGVycyhodHRwU2VydmVyKTtcclxuXHJcbi8vTGlzdGVuIHRvIEhUVFAgYW5kIFdlYlNvY2tldCBzZXJ2ZXJcclxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlRcclxuaHR0cFNlcnZlci5saXN0ZW4oeyBwb3J0OiBQT1JUIH0sICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBzZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDoke1BPUlR9JHtzZXJ2ZXIuZ3JhcGhxbFBhdGh9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgU3Vic2NyaXB0aW9ucyByZWFkeSBhdCB3czovL2xvY2FsaG9zdDoke1BPUlR9JHtzZXJ2ZXIuc3Vic2NyaXB0aW9uc1BhdGh9YClcclxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "mongoose",
        "connect",
        "useCreateIndex",
        "useNewUrlParser",
        "useFindAndModify",
        "useUnifiedTopology",
        "then",
        "console",
        "log",
        "catch",
        "error",
        "corsOptions",
        "origin",
        "process",
        "env",
        "FRONTEND_URL",
        "credentials",
        "use",
        "server",
        "schema",
        "resolvers",
        "models",
        "applyMiddleware",
        "path",
        "httpServer",
        "installSubscriptionHandlers",
        "PORT",
        "listen",
        "port",
        "graphqlPath",
        "subscriptionsPath"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,iBAAOC,MAAP,G,CACA;;;AACA,MAAMC,GAAG,GAAG,wBAAZ,C,CAEA;;AACAC,mBACIC,OADJ,CACY,iGADZ,EAC+G;AACxGC,EAAAA,cAAc,EAAE,IADwF;AAExGC,EAAAA,eAAe,EAAE,IAFuF;AAGxGC,EAAAA,gBAAgB,EAAE,KAHsF;AAIxGC,EAAAA,kBAAkB,EAAE;AAJoF,CAD/G,EAOIC,IAPJ,CAOS,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAPf,EAQIC,KARJ,CAQWC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CARrB,E,CAUA;;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,YADJ;AAEhBC,EAAAA,WAAW,EAAE;AAFG,CAApB;AAIAjB,GAAG,CAACkB,GAAJ,CAAQ,oBAAKN,WAAL,CAAR,E,CAEA;;AACA,MAAMO,MAAM,GAAG,sCAAmBC,gBAAnB,EAA2BC,mBAA3B,EAAsCC,gBAAtC,CAAf;AACAH,MAAM,CAACI,eAAP,CAAuB;AAACvB,EAAAA,GAAD;AAAOwB,EAAAA,IAAI,EAAE;AAAb,CAAvB,E,CAEA;;AACA,MAAMC,UAAU,GAAG,wBAAazB,GAAb,CAAnB;AACAmB,MAAM,CAACO,2BAAP,CAAmCD,UAAnC,E,CAEA;;AACA,MAAME,IAAI,GAAGb,OAAO,CAACC,GAAR,CAAYY,IAAzB;AACAF,UAAU,CAACG,MAAX,CAAkB;AAAEC,EAAAA,IAAI,EAAEF;AAAR,CAAlB,EAAkC,MAAM;AACpCnB,EAAAA,OAAO,CAACC,GAAR,CAAa,oCAAmCkB,IAAK,GAAER,MAAM,CAACW,WAAY,EAA1E;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAa,yCAAwCkB,IAAK,GAAER,MAAM,CAACY,iBAAkB,EAArF;AACH,CAHD",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\",
      "sourcesContent": [
        "import dotenv from 'dotenv';\r\nimport express from \"express\";\r\nimport { createServer } from \"http\";\r\nimport cors from \"cors\";\r\nimport mongoose from 'mongoose';\r\nimport models from \"./src/models\";\r\nimport schema from \"./src/schema\";\r\nimport resolvers from \"./src/resolvers\";\r\nimport { createApolloServer } from \"./src/utils/apollo-server\";\r\n\r\ndotenv.config();\r\n// initializing api\r\nconst app = express();\r\n\r\n// connected to the mongoDB cluster\r\nmongoose\r\n   .connect(\"mongodb+srv://adhrit:NXsF3Vd3Regnw6a@cluster0.jsest.mongodb.net/api?retryWrites=true&w=majority\", {\r\n       useCreateIndex: true,\r\n       useNewUrlParser: true,\r\n       useFindAndModify: false,\r\n       useUnifiedTopology: true,\r\n   })\r\n   .then(() => console.log('ðŸš€ DB connected'))\r\n   .catch((error) => console.log(error));\r\n\r\n// Enable CORS\r\nconst corsOptions = {\r\n    origin: process.env.FRONTEND_URL,\r\n    credentials: true ,\r\n};\r\napp.use(cors(corsOptions));\r\n\r\n// Create a apollo server \r\nconst server = createApolloServer(schema, resolvers, models);\r\nserver.applyMiddleware({app , path: '/graphql'});\r\n\r\n// Create http server and subscriptions for it\r\nconst httpServer = createServer(app);\r\nserver.installSubscriptionHandlers(httpServer);\r\n\r\n//Listen to HTTP and WebSocket server\r\nconst PORT = process.env.PORT\r\nhttpServer.listen({ port: PORT }, () => {\r\n    console.log(`server ready at http://localhost:${PORT}${server.graphqlPath}`);\r\n    console.log(`Subscriptions ready at ws://localhost:${PORT}${server.subscriptionsPath}`)\r\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1626092593774
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _User = require(\"./User\");\n\nvar _User2 = _interopRequireDefault(_User);\n\nvar _Post = require(\"./Post\");\n\nvar _Post2 = _interopRequireDefault(_Post);\n\nvar _Clap = require(\"./Clap\");\n\nvar _Clap2 = _interopRequireDefault(_Clap);\n\nvar _Comment = require(\"./Comment\");\n\nvar _Comment2 = _interopRequireDefault(_Comment);\n\nvar _Notification = require(\"./Notification\");\n\nvar _Notification2 = _interopRequireDefault(_Notification);\n\nvar _Message = require(\"./Message\");\n\nvar _Message2 = _interopRequireDefault(_Message);\n\nvar _Bookmark = require(\"./Bookmark\");\n\nvar _Bookmark2 = _interopRequireDefault(_Bookmark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  User: _User2.default,\n  Post: _Post2.default,\n  Clap: _Clap2.default,\n  Comment: _Comment2.default,\n  Bookmark: _Bookmark2.default,\n  Notification: _Notification2.default,\n  Message: _Message2.default\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJQb3N0IiwiQ2xhcCIsIkNvbW1lbnQiLCJCb29rbWFyayIsIk5vdGlmaWNhdGlvbiIsIk1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7a0JBRWU7QUFDWEEsRUFBQUEsSUFBSSxFQUFKQSxjQURXO0FBRVhDLEVBQUFBLElBQUksRUFBSkEsY0FGVztBQUdYQyxFQUFBQSxJQUFJLEVBQUpBLGNBSFc7QUFJWEMsRUFBQUEsT0FBTyxFQUFQQSxpQkFKVztBQUtYQyxFQUFBQSxRQUFRLEVBQVJBLGtCQUxXO0FBTVhDLEVBQUFBLFlBQVksRUFBWkEsc0JBTlc7QUFPWEMsRUFBQUEsT0FBTyxFQUFQQTtBQVBXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXNlciBmcm9tIFwiLi9Vc2VyXCI7XHJcbmltcG9ydCBQb3N0IGZyb20gJy4vUG9zdCc7XHJcbmltcG9ydCBDbGFwIGZyb20gXCIuL0NsYXBcIjtcclxuaW1wb3J0IENvbW1lbnQgZnJvbSBcIi4vQ29tbWVudFwiO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gXCIuL05vdGlmaWNhdGlvblwiO1xyXG5pbXBvcnQgTWVzc2FnZSBmcm9tIFwiLi9NZXNzYWdlXCI7XHJcbmltcG9ydCBCb29rbWFyayBmcm9tIFwiLi9Cb29rbWFya1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgVXNlciwgXHJcbiAgICBQb3N0LCBcclxuICAgIENsYXAsXHJcbiAgICBDb21tZW50LFxyXG4gICAgQm9va21hcmssXHJcbiAgICBOb3RpZmljYXRpb24sXHJcbiAgICBNZXNzYWdlXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "User",
        "Post",
        "Clap",
        "Comment",
        "Bookmark",
        "Notification",
        "Message"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACXA,EAAAA,IAAI,EAAJA,cADW;AAEXC,EAAAA,IAAI,EAAJA,cAFW;AAGXC,EAAAA,IAAI,EAAJA,cAHW;AAIXC,EAAAA,OAAO,EAAPA,iBAJW;AAKXC,EAAAA,QAAQ,EAARA,kBALW;AAMXC,EAAAA,YAAY,EAAZA,sBANW;AAOXC,EAAAA,OAAO,EAAPA;AAPW,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import User from \"./User\";\r\nimport Post from './Post';\r\nimport Clap from \"./Clap\";\r\nimport Comment from \"./Comment\";\r\nimport Notification from \"./Notification\";\r\nimport Message from \"./Message\";\r\nimport Bookmark from \"./Bookmark\";\r\n\r\nexport default {\r\n    User, \r\n    Post, \r\n    Clap,\r\n    Comment,\r\n    Bookmark,\r\n    Notification,\r\n    Message\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1626086395718
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\User.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\User.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\User.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _bcryptjs = require(\"bcryptjs\");\n\nvar _bcryptjs2 = _interopRequireDefault(_bcryptjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * User Schema that  has link to Vote, Post, Comment, Notifications\r\n */\n\nconst userSchema = new Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: false\n  },\n  email: {\n    type: String,\n    required: true,\n    lowercase: true,\n    trim: true,\n    unique: true\n  },\n  passwordResetToken: String,\n  passwordResetTokenExpiry: Date,\n  password: {\n    type: String,\n    required: true\n  },\n  image: String,\n  imagePublicId: String,\n  isOnline: {\n    type: Boolean,\n    default: false\n  },\n  posts: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Post'\n  }],\n  claps: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Clap'\n  }],\n  comments: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Comment'\n  }],\n  notifications: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Notification'\n  }],\n  messages: [{\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  bookmarks: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Bookmark'\n  }]\n}, {\n  timestamps: true\n});\n/**Hashes the users password while saving it to Database */\n\nuserSchema.pre('save', function (next) {\n  if (!this.isModified('password')) {\n    return next();\n  }\n\n  _bcryptjs2.default.genSalt(10, (e, salt) => {\n    if (e) return next(e);\n\n    _bcryptjs2.default.hash(this.password, salt, (e, hash) => {\n      if (e) return next(e);\n      this.password = hash;\n      next();\n    });\n  });\n});\nexports.default = _mongoose2.default.model('User', userSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ1c2VyU2NoZW1hIiwidXNlcm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJlbWFpbCIsImxvd2VyY2FzZSIsInRyaW0iLCJwYXNzd29yZFJlc2V0VG9rZW4iLCJwYXNzd29yZFJlc2V0VG9rZW5FeHBpcnkiLCJEYXRlIiwicGFzc3dvcmQiLCJpbWFnZSIsImltYWdlUHVibGljSWQiLCJpc09ubGluZSIsIkJvb2xlYW4iLCJkZWZhdWx0IiwicG9zdHMiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiY2xhcHMiLCJjb21tZW50cyIsIm5vdGlmaWNhdGlvbnMiLCJtZXNzYWdlcyIsImJvb2ttYXJrcyIsInRpbWVzdGFtcHMiLCJwcmUiLCJuZXh0IiwiaXNNb2RpZmllZCIsImJjcnlwdCIsImdlblNhbHQiLCJlIiwic2FsdCIsImhhc2giLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHQyxtQkFBU0QsTUFBeEI7QUFFQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUUsVUFBVSxHQUFHLElBQUlGLE1BQUosQ0FDZjtBQUNJRyxFQUFBQSxRQUFRLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxNQURDO0FBRVBDLElBQUFBLFFBQVEsRUFBRSxJQUZIO0FBR1BDLElBQUFBLE1BQU0sRUFBRTtBQUhELEdBRGQ7QUFNSUMsRUFBQUEsS0FBSyxFQUFFO0FBQ0hKLElBQUFBLElBQUksRUFBRUMsTUFESDtBQUVIQyxJQUFBQSxRQUFRLEVBQUUsSUFGUDtBQUdIRyxJQUFBQSxTQUFTLEVBQUUsSUFIUjtBQUlIQyxJQUFBQSxJQUFJLEVBQUUsSUFKSDtBQUtISCxJQUFBQSxNQUFNLEVBQUU7QUFMTCxHQU5YO0FBYUlJLEVBQUFBLGtCQUFrQixFQUFFTixNQWJ4QjtBQWNJTyxFQUFBQSx3QkFBd0IsRUFBRUMsSUFkOUI7QUFlSUMsRUFBQUEsUUFBUSxFQUFFO0FBQ05WLElBQUFBLElBQUksRUFBRUMsTUFEQTtBQUVOQyxJQUFBQSxRQUFRLEVBQUU7QUFGSixHQWZkO0FBbUJJUyxFQUFBQSxLQUFLLEVBQUVWLE1BbkJYO0FBb0JJVyxFQUFBQSxhQUFhLEVBQUVYLE1BcEJuQjtBQXFCSVksRUFBQUEsUUFBUSxFQUFFO0FBQ05iLElBQUFBLElBQUksRUFBRWMsT0FEQTtBQUVOQyxJQUFBQSxPQUFPLEVBQUU7QUFGSCxHQXJCZDtBQXlCSUMsRUFBQUEsS0FBSyxFQUFFLENBQ0g7QUFDRWhCLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDcUIsS0FBUCxDQUFhQyxRQURyQjtBQUVFQyxJQUFBQSxHQUFHLEVBQUU7QUFGUCxHQURHLENBekJYO0FBK0JJQyxFQUFBQSxLQUFLLEVBQUUsQ0FDSDtBQUNJcEIsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNxQixLQUFQLENBQWFDLFFBRHZCO0FBRUlDLElBQUFBLEdBQUcsRUFBRTtBQUZULEdBREcsQ0EvQlg7QUFxQ0lFLEVBQUFBLFFBQVEsRUFBRSxDQUNOO0FBQ0lyQixJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ3FCLEtBQVAsQ0FBYUMsUUFEdkI7QUFFSUMsSUFBQUEsR0FBRyxFQUFFO0FBRlQsR0FETSxDQXJDZDtBQTJDSUcsRUFBQUEsYUFBYSxFQUFFLENBQ1g7QUFDSXRCLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDcUIsS0FBUCxDQUFhQyxRQUR2QjtBQUVJQyxJQUFBQSxHQUFHLEVBQUU7QUFGVCxHQURXLENBM0NuQjtBQWlESUksRUFBQUEsUUFBUSxFQUFFLENBQ047QUFDSXZCLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDcUIsS0FBUCxDQUFhQyxRQUR2QjtBQUVJQyxJQUFBQSxHQUFHLEVBQUU7QUFGVCxHQURNLENBakRkO0FBdURJSyxFQUFBQSxTQUFTLEVBQUUsQ0FDUDtBQUNJeEIsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNxQixLQUFQLENBQWFDLFFBRHZCO0FBRUlDLElBQUFBLEdBQUcsRUFBRztBQUZWLEdBRE87QUF2RGYsQ0FEZSxFQStEZjtBQUNJTSxFQUFBQSxVQUFVLEVBQUU7QUFEaEIsQ0EvRGUsQ0FBbkI7QUFvRUE7O0FBQ0EzQixVQUFVLENBQUM0QixHQUFYLENBQWUsTUFBZixFQUF1QixVQUFTQyxJQUFULEVBQWM7QUFDakMsTUFBSSxDQUFDLEtBQUtDLFVBQUwsQ0FBZ0IsVUFBaEIsQ0FBTCxFQUFpQztBQUM3QixXQUFPRCxJQUFJLEVBQVg7QUFDSDs7QUFFREUscUJBQU9DLE9BQVAsQ0FBZSxFQUFmLEVBQW1CLENBQUNDLENBQUQsRUFBSUMsSUFBSixLQUFhO0FBQzVCLFFBQUlELENBQUosRUFBTyxPQUFPSixJQUFJLENBQUNJLENBQUQsQ0FBWDs7QUFFUEYsdUJBQU9JLElBQVAsQ0FBWSxLQUFLdkIsUUFBakIsRUFBMkJzQixJQUEzQixFQUFpQyxDQUFDRCxDQUFELEVBQUlFLElBQUosS0FBYTtBQUMxQyxVQUFJRixDQUFKLEVBQU8sT0FBT0osSUFBSSxDQUFDSSxDQUFELENBQVg7QUFFUCxXQUFLckIsUUFBTCxHQUFnQnVCLElBQWhCO0FBQ0FOLE1BQUFBLElBQUk7QUFDUCxLQUxEO0FBTUgsR0FURDtBQVVILENBZkQ7a0JBaUJlOUIsbUJBQVNxQyxLQUFULENBQWUsTUFBZixFQUF1QnBDLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJ1xyXG5cclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuLyoqXHJcbiAqIFVzZXIgU2NoZW1hIHRoYXQgIGhhcyBsaW5rIHRvIFZvdGUsIFBvc3QsIENvbW1lbnQsIE5vdGlmaWNhdGlvbnNcclxuICovXHJcbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKFxyXG4gICAge1xyXG4gICAgICAgIHVzZXJuYW1lOiB7XHJcbiAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgIHVuaXF1ZTogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVtYWlsOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgIGxvd2VyY2FzZTogdHJ1ZSxcclxuICAgICAgICAgICAgdHJpbTogdHJ1ZSxcclxuICAgICAgICAgICAgdW5pcXVlOiB0cnVlLCBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBhc3N3b3JkUmVzZXRUb2tlbjogU3RyaW5nLFxyXG4gICAgICAgIHBhc3N3b3JkUmVzZXRUb2tlbkV4cGlyeTogRGF0ZSxcclxuICAgICAgICBwYXNzd29yZDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaW1hZ2U6IFN0cmluZyxcclxuICAgICAgICBpbWFnZVB1YmxpY0lkOiBTdHJpbmcsXHJcbiAgICAgICAgaXNPbmxpbmU6IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwb3N0czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICAgIHJlZjogJ1Bvc3QnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBjbGFwczogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgICAgICByZWY6ICdDbGFwJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBjb21tZW50czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgICAgICByZWY6ICdDb21tZW50JyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIG5vdGlmaWNhdGlvbnM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICAgICAgcmVmOiAnTm90aWZpY2F0aW9uJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIG1lc3NhZ2VzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgICAgIHJlZjogJ1VzZXInLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0gLFxyXG4gICAgICAgIGJvb2ttYXJrczogWyBcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICAgICAgcmVmIDogJ0Jvb2ttYXJrJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSBcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZSxcclxuICAgIH1cclxuKTtcclxuXHJcbi8qKkhhc2hlcyB0aGUgdXNlcnMgcGFzc3dvcmQgd2hpbGUgc2F2aW5nIGl0IHRvIERhdGFiYXNlICovXHJcbnVzZXJTY2hlbWEucHJlKCdzYXZlJywgZnVuY3Rpb24obmV4dCl7XHJcbiAgICBpZiAoIXRoaXMuaXNNb2RpZmllZCgncGFzc3dvcmQnKSl7XHJcbiAgICAgICAgcmV0dXJuIG5leHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBiY3J5cHQuZ2VuU2FsdCgxMCwgKGUsIHNhbHQpID0+IHtcclxuICAgICAgICBpZiAoZSkgcmV0dXJuIG5leHQoZSk7XHJcblxyXG4gICAgICAgIGJjcnlwdC5oYXNoKHRoaXMucGFzc3dvcmQsIHNhbHQsIChlLCBoYXNoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlKSByZXR1cm4gbmV4dChlKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFzc3dvcmQgPSBoYXNoO1xyXG4gICAgICAgICAgICBuZXh0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnVXNlcicsIHVzZXJTY2hlbWEpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "userSchema",
        "username",
        "type",
        "String",
        "required",
        "unique",
        "email",
        "lowercase",
        "trim",
        "passwordResetToken",
        "passwordResetTokenExpiry",
        "Date",
        "password",
        "image",
        "imagePublicId",
        "isOnline",
        "Boolean",
        "default",
        "posts",
        "Types",
        "ObjectId",
        "ref",
        "claps",
        "comments",
        "notifications",
        "messages",
        "bookmarks",
        "timestamps",
        "pre",
        "next",
        "isModified",
        "bcrypt",
        "genSalt",
        "e",
        "salt",
        "hash",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;;AACA,MAAME,UAAU,GAAG,IAAIF,MAAJ,CACf;AACIG,EAAAA,QAAQ,EAAE;AACPC,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,MAAM,EAAE;AAHD,GADd;AAMIC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHG,IAAAA,SAAS,EAAE,IAHR;AAIHC,IAAAA,IAAI,EAAE,IAJH;AAKHH,IAAAA,MAAM,EAAE;AALL,GANX;AAaII,EAAAA,kBAAkB,EAAEN,MAbxB;AAcIO,EAAAA,wBAAwB,EAAEC,IAd9B;AAeIC,EAAAA,QAAQ,EAAE;AACNV,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAfd;AAmBIS,EAAAA,KAAK,EAAEV,MAnBX;AAoBIW,EAAAA,aAAa,EAAEX,MApBnB;AAqBIY,EAAAA,QAAQ,EAAE;AACNb,IAAAA,IAAI,EAAEc,OADA;AAENC,IAAAA,OAAO,EAAE;AAFH,GArBd;AAyBIC,EAAAA,KAAK,EAAE,CACH;AACEhB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADrB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADG,CAzBX;AA+BIC,EAAAA,KAAK,EAAE,CACH;AACIpB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADG,CA/BX;AAqCIE,EAAAA,QAAQ,EAAE,CACN;AACIrB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADM,CArCd;AA2CIG,EAAAA,aAAa,EAAE,CACX;AACItB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADW,CA3CnB;AAiDII,EAAAA,QAAQ,EAAE,CACN;AACIvB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADM,CAjDd;AAuDIK,EAAAA,SAAS,EAAE,CACP;AACIxB,IAAAA,IAAI,EAAEJ,MAAM,CAACqB,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAG;AAFV,GADO;AAvDf,CADe,EA+Df;AACIM,EAAAA,UAAU,EAAE;AADhB,CA/De,CAAnB;AAoEA;;AACA3B,UAAU,CAAC4B,GAAX,CAAe,MAAf,EAAuB,UAASC,IAAT,EAAc;AACjC,MAAI,CAAC,KAAKC,UAAL,CAAgB,UAAhB,CAAL,EAAiC;AAC7B,WAAOD,IAAI,EAAX;AACH;;AAEDE,qBAAOC,OAAP,CAAe,EAAf,EAAmB,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC5B,QAAID,CAAJ,EAAO,OAAOJ,IAAI,CAACI,CAAD,CAAX;;AAEPF,uBAAOI,IAAP,CAAY,KAAKvB,QAAjB,EAA2BsB,IAA3B,EAAiC,CAACD,CAAD,EAAIE,IAAJ,KAAa;AAC1C,UAAIF,CAAJ,EAAO,OAAOJ,IAAI,CAACI,CAAD,CAAX;AAEP,WAAKrB,QAAL,GAAgBuB,IAAhB;AACAN,MAAAA,IAAI;AACP,KALD;AAMH,GATD;AAUH,CAfD;kBAiBe9B,mBAASqC,KAAT,CAAe,MAAf,EAAuBpC,UAAvB,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * User Schema that  has link to Vote, Post, Comment, Notifications\r\n */\r\nconst userSchema = new Schema(\r\n    {\r\n        username: {\r\n           type: String,\r\n           required: true,\r\n           unique: false\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: true,\r\n            lowercase: true,\r\n            trim: true,\r\n            unique: true, \r\n        },\r\n        passwordResetToken: String,\r\n        passwordResetTokenExpiry: Date,\r\n        password: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        image: String,\r\n        imagePublicId: String,\r\n        isOnline: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        posts: [\r\n            {\r\n              type: Schema.Types.ObjectId,\r\n              ref: 'Post'\r\n            },\r\n        ],\r\n        claps: [\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'Clap'\r\n            }\r\n        ],\r\n        comments: [\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'Comment',\r\n            },\r\n        ],\r\n        notifications: [\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'Notification',\r\n            },\r\n        ],\r\n        messages: [\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'User',\r\n            },\r\n        ] ,\r\n        bookmarks: [ \r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref : 'Bookmark'\r\n            }\r\n        ] \r\n    },\r\n    {\r\n        timestamps: true,\r\n    }\r\n);\r\n\r\n/**Hashes the users password while saving it to Database */\r\nuserSchema.pre('save', function(next){\r\n    if (!this.isModified('password')){\r\n        return next();\r\n    }\r\n\r\n    bcrypt.genSalt(10, (e, salt) => {\r\n        if (e) return next(e);\r\n\r\n        bcrypt.hash(this.password, salt, (e, hash) => {\r\n            if (e) return next(e);\r\n\r\n            this.password = hash;\r\n            next();\r\n        });\r\n    });\r\n});\r\n\r\nexport default mongoose.model('User', userSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1626080367666
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Post.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Post.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Post.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Post.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * Post Schema that has refrences to User, Vote, Comment Schemas\r\n */\n\nconst postSchema = Schema({\n  title: String,\n  description: String,\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  claps: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Clap'\n  }],\n  comments: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Comment'\n  }]\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Post', postSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvc3QuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJwb3N0U2NoZW1hIiwidGl0bGUiLCJTdHJpbmciLCJkZXNjcmlwdGlvbiIsImF1dGhvciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiY2xhcHMiLCJjb21tZW50cyIsInRpbWVzdGFtcHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUNBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQVNELE1BQXhCO0FBRUE7QUFDQTtBQUNBOztBQUNBLE1BQU1FLFVBQVUsR0FBR0YsTUFBTSxDQUNyQjtBQUNJRyxFQUFBQSxLQUFLLEVBQUVDLE1BRFg7QUFFSUMsRUFBQUEsV0FBVyxFQUFFRCxNQUZqQjtBQUdJRSxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFUCxNQUFNLENBQUNRLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxJQUFBQSxHQUFHLEVBQUU7QUFGRCxHQUhaO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxDQUNIO0FBQ0lKLElBQUFBLElBQUksRUFBRVAsTUFBTSxDQUFDUSxLQUFQLENBQWFDLFFBRHZCO0FBRUlDLElBQUFBLEdBQUcsRUFBRTtBQUZULEdBREcsQ0FQWDtBQWFJRSxFQUFBQSxRQUFRLEVBQUMsQ0FDTDtBQUNJTCxJQUFBQSxJQUFJLEVBQUVQLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhQyxRQUR2QjtBQUVJQyxJQUFBQSxHQUFHLEVBQUU7QUFGVCxHQURLO0FBYmIsQ0FEcUIsRUFxQnJCO0FBQ0lHLEVBQUFBLFVBQVUsRUFBRTtBQURoQixDQXJCcUIsQ0FBekI7a0JBeUJlWixtQkFBU2EsS0FBVCxDQUFlLE1BQWYsRUFBdUJaLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG4vKipcclxuICogUG9zdCBTY2hlbWEgdGhhdCBoYXMgcmVmcmVuY2VzIHRvIFVzZXIsIFZvdGUsIENvbW1lbnQgU2NoZW1hc1xyXG4gKi9cclxuY29uc3QgcG9zdFNjaGVtYSA9IFNjaGVtYShcclxuICAgIHtcclxuICAgICAgICB0aXRsZTogU3RyaW5nLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsXHJcbiAgICAgICAgYXV0aG9yOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnVXNlcicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjbGFwczogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgICAgICByZWY6ICdDbGFwJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBjb21tZW50czpbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgICAgIHJlZjogJ0NvbW1lbnQnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHRpbWVzdGFtcHM6IHRydWUsXHJcbiAgICB9XHJcbik7XHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdQb3N0JywgcG9zdFNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Post.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "postSchema",
        "title",
        "String",
        "description",
        "author",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "claps",
        "comments",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AACA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;;AACA,MAAME,UAAU,GAAGF,MAAM,CACrB;AACIG,EAAAA,KAAK,EAAEC,MADX;AAEIC,EAAAA,WAAW,EAAED,MAFjB;AAGIE,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEP,MAAM,CAACQ,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GAHZ;AAOIC,EAAAA,KAAK,EAAE,CACH;AACIJ,IAAAA,IAAI,EAAEP,MAAM,CAACQ,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADG,CAPX;AAaIE,EAAAA,QAAQ,EAAC,CACL;AACIL,IAAAA,IAAI,EAAEP,MAAM,CAACQ,KAAP,CAAaC,QADvB;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADK;AAbb,CADqB,EAqBrB;AACIG,EAAAA,UAAU,EAAE;AADhB,CArBqB,CAAzB;kBAyBeZ,mBAASa,KAAT,CAAe,MAAf,EAAuBZ,UAAvB,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * Post Schema that has refrences to User, Vote, Comment Schemas\r\n */\r\nconst postSchema = Schema(\r\n    {\r\n        title: String,\r\n        description: String,\r\n        author: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        claps: [\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'Clap'\r\n            }\r\n        ],\r\n        comments:[\r\n            {\r\n                type: Schema.Types.ObjectId,\r\n                ref: 'Comment',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        timestamps: true,\r\n    }\r\n);\r\nexport default mongoose.model('Post', postSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1626012744240
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Vote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Vote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Vote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Vote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Vote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * Vote Schema refrences to DownVote and UpVote\r\n */\n\nconst voteSchema = Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  post: {\n    type: Schema.Types.ObjectId,\n    ref: 'Post'\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Vote', voteSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZvdGUuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ2b3RlU2NoZW1hIiwidXNlciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicG9zdCIsInRpbWVzdGFtcHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQVNELE1BQXhCO0FBRUE7QUFDQTtBQUNBOztBQUNBLE1BQU1FLFVBQVUsR0FBR0YsTUFBTSxDQUNyQjtBQUNJRyxFQUFBQSxJQUFJLEVBQUc7QUFDSEMsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkYsR0FEWDtBQUtJQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEosSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkY7QUFMWCxDQURxQixFQVdyQjtBQUNJRSxFQUFBQSxVQUFVLEVBQUU7QUFEaEIsQ0FYcUIsQ0FBekI7a0JBZWVSLG1CQUFTUyxLQUFULENBQWUsTUFBZixFQUF1QlIsVUFBdkIsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG4vKipcclxuICogVm90ZSBTY2hlbWEgcmVmcmVuY2VzIHRvIERvd25Wb3RlIGFuZCBVcFZvdGVcclxuICovXHJcbmNvbnN0IHZvdGVTY2hlbWEgPSBTY2hlbWEoXHJcbiAgICB7XHJcbiAgICAgICAgdXNlciA6IHtcclxuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvc3QgOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnUG9zdCcsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZVxyXG4gICAgfVxyXG4pO1xyXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnVm90ZScsIHZvdGVTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Vote.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "voteSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "post",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;;AACA,MAAME,UAAU,GAAGF,MAAM,CACrB;AACIG,EAAAA,IAAI,EAAG;AACHC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GADX;AAKIC,EAAAA,IAAI,EAAG;AACHJ,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF;AALX,CADqB,EAWrB;AACIE,EAAAA,UAAU,EAAE;AADhB,CAXqB,CAAzB;kBAeeR,mBAASS,KAAT,CAAe,MAAf,EAAuBR,UAAvB,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * Vote Schema refrences to DownVote and UpVote\r\n */\r\nconst voteSchema = Schema(\r\n    {\r\n        user : {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        post : {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Post',\r\n        },\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n);\r\nexport default mongoose.model('Vote', voteSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1625947087144
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Comment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Comment.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Comment.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\nconst commentSchema = Schema({\n  comment: {\n    type: String,\n    required: true\n  },\n  post: {\n    type: Schema.Types.ObjectId,\n    ref: 'Post'\n  },\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  comments: {\n    type: Schema.Types.ObjectId,\n    ref: 'Comment'\n  },\n  claps: {\n    type: Schema.Types.ObjectId,\n    ref: 'Clap'\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Comment', commentSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJjb21tZW50U2NoZW1hIiwiY29tbWVudCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInBvc3QiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiYXV0aG9yIiwiY29tbWVudHMiLCJjbGFwcyIsInRpbWVzdGFtcHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQVNELE1BQXhCO0FBRUEsTUFBTUUsYUFBYSxHQUFHRixNQUFNLENBQ3hCO0FBQ0lHLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FEYjtBQUtJQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkgsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNRLEtBQVAsQ0FBYUMsUUFEakI7QUFFRkMsSUFBQUEsR0FBRyxFQUFFO0FBRkgsR0FMVjtBQVNJQyxFQUFBQSxNQUFNLEVBQUM7QUFDSFAsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNRLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkYsR0FUWDtBQWFJRSxFQUFBQSxRQUFRLEVBQUU7QUFDTlIsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNRLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxJQUFBQSxHQUFHLEVBQUU7QUFGQyxHQWJkO0FBaUJJRyxFQUFBQSxLQUFLLEVBQUU7QUFDSFQsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNRLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkY7QUFqQlgsQ0FEd0IsRUF1QnhCO0FBQ0lJLEVBQUFBLFVBQVUsRUFBRTtBQURoQixDQXZCd0IsQ0FBNUI7a0JBNEJlYixtQkFBU2MsS0FBVCxDQUFlLFNBQWYsRUFBMkJiLGFBQTNCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgY29tbWVudFNjaGVtYSA9IFNjaGVtYShcclxuICAgIHtcclxuICAgICAgICBjb21tZW50OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwb3N0OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnUG9zdCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIGF1dGhvcjp7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnVXNlcidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbW1lbnRzOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnQ29tbWVudCcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjbGFwczoge1xyXG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgIHJlZjogJ0NsYXAnLFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZVxyXG4gICAgfVxyXG4pOyBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdDb21tZW50JyAsIGNvbW1lbnRTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "commentSchema",
        "comment",
        "type",
        "String",
        "required",
        "post",
        "Types",
        "ObjectId",
        "ref",
        "author",
        "comments",
        "claps",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA,MAAME,aAAa,GAAGF,MAAM,CACxB;AACIG,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADb;AAKIC,EAAAA,IAAI,EAAE;AACFH,IAAAA,IAAI,EAAEJ,MAAM,CAACQ,KAAP,CAAaC,QADjB;AAEFC,IAAAA,GAAG,EAAE;AAFH,GALV;AASIC,EAAAA,MAAM,EAAC;AACHP,IAAAA,IAAI,EAAEJ,MAAM,CAACQ,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GATX;AAaIE,EAAAA,QAAQ,EAAE;AACNR,IAAAA,IAAI,EAAEJ,MAAM,CAACQ,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE;AAFC,GAbd;AAiBIG,EAAAA,KAAK,EAAE;AACHT,IAAAA,IAAI,EAAEJ,MAAM,CAACQ,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF;AAjBX,CADwB,EAuBxB;AACII,EAAAA,UAAU,EAAE;AADhB,CAvBwB,CAA5B;kBA4Beb,mBAASc,KAAT,CAAe,SAAf,EAA2Bb,aAA3B,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nconst commentSchema = Schema(\r\n    {\r\n        comment: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        post: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Post'\r\n        },\r\n        author:{\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User'\r\n        },\r\n        comments: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Comment',\r\n        },\r\n        claps: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Clap',\r\n        }\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n); \r\n\r\nexport default mongoose.model('Comment' , commentSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1626082418489
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Notification.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Notification.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Notification.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Notification.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Notification.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * Notification schema that has refrence to User, Vote and Comment and MESSAGE schema\r\n * \r\n */\n\nconst notificationSchema = Schema({\n  author: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  post: Schema.Types.ObjectId,\n  clap: {\n    type: Schema.Types.ObjectId,\n    ref: 'Clap'\n  },\n  comment: {\n    type: Schema.Types.ObjectId,\n    ref: 'Comment'\n  },\n  seen: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Notification', notificationSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vdGlmaWNhdGlvbi5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm5vdGlmaWNhdGlvblNjaGVtYSIsImF1dGhvciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwidXNlciIsInBvc3QiLCJjbGFwIiwiY29tbWVudCIsInNlZW4iLCJCb29sZWFuIiwiZGVmYXVsdCIsInRpbWVzdGFtcHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQVNELE1BQXhCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUUsa0JBQWtCLEdBQUdGLE1BQU0sQ0FDN0I7QUFDSUcsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUosTUFBTSxDQUFDSyxLQUFQLENBQWFDLFFBRGY7QUFFSkMsSUFBQUEsR0FBRyxFQUFFO0FBRkQsR0FEWjtBQUtJQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkosSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEakI7QUFFRkMsSUFBQUEsR0FBRyxFQUFFO0FBRkgsR0FMVjtBQVNJRSxFQUFBQSxJQUFJLEVBQUVULE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQVR2QjtBQVdJSSxFQUFBQSxJQUFJLEVBQUU7QUFDRk4sSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEakI7QUFFRkMsSUFBQUEsR0FBRyxFQUFFO0FBRkgsR0FYVjtBQWVJSSxFQUFBQSxPQUFPLEVBQUU7QUFDTFAsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEZDtBQUVMQyxJQUFBQSxHQUFHLEVBQUM7QUFGQyxHQWZiO0FBbUJJSyxFQUFBQSxJQUFJLEVBQUU7QUFDRlIsSUFBQUEsSUFBSSxFQUFFUyxPQURKO0FBRUZDLElBQUFBLE9BQU8sRUFBRTtBQUZQO0FBbkJWLENBRDZCLEVBMEI3QjtBQUNJQyxFQUFBQSxVQUFVLEVBQUU7QUFEaEIsQ0ExQjZCLENBQWpDO2tCQStCZWQsbUJBQVNlLEtBQVQsQ0FBZSxjQUFmLEVBQStCZCxrQkFBL0IsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG4vKipcclxuICogTm90aWZpY2F0aW9uIHNjaGVtYSB0aGF0IGhhcyByZWZyZW5jZSB0byBVc2VyLCBWb3RlIGFuZCBDb21tZW50IGFuZCBNRVNTQUdFIHNjaGVtYVxyXG4gKiBcclxuICovXHJcbmNvbnN0IG5vdGlmaWNhdGlvblNjaGVtYSA9IFNjaGVtYShcclxuICAgIHtcclxuICAgICAgICBhdXRob3I6IHtcclxuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVzZXI6IHtcclxuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvc3Q6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICBcclxuICAgICAgICBjbGFwOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnQ2xhcCcsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb21tZW50OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOidDb21tZW50J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2Vlbjoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0aW1lc3RhbXBzOiB0cnVlXHJcbiAgICB9XHJcbik7IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ05vdGlmaWNhdGlvbicsIG5vdGlmaWNhdGlvblNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Notification.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "notificationSchema",
        "author",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "user",
        "post",
        "clap",
        "comment",
        "seen",
        "Boolean",
        "default",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;AACA;;AACA,MAAME,kBAAkB,GAAGF,MAAM,CAC7B;AACIG,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GADZ;AAKIC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADjB;AAEFC,IAAAA,GAAG,EAAE;AAFH,GALV;AASIE,EAAAA,IAAI,EAAET,MAAM,CAACK,KAAP,CAAaC,QATvB;AAWII,EAAAA,IAAI,EAAE;AACFN,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADjB;AAEFC,IAAAA,GAAG,EAAE;AAFH,GAXV;AAeII,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADd;AAELC,IAAAA,GAAG,EAAC;AAFC,GAfb;AAmBIK,EAAAA,IAAI,EAAE;AACFR,IAAAA,IAAI,EAAES,OADJ;AAEFC,IAAAA,OAAO,EAAE;AAFP;AAnBV,CAD6B,EA0B7B;AACIC,EAAAA,UAAU,EAAE;AADhB,CA1B6B,CAAjC;kBA+Bed,mBAASe,KAAT,CAAe,cAAf,EAA+Bd,kBAA/B,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * Notification schema that has refrence to User, Vote and Comment and MESSAGE schema\r\n * \r\n */\r\nconst notificationSchema = Schema(\r\n    {\r\n        author: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        user: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        post: Schema.Types.ObjectId,\r\n        \r\n        clap: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Clap',\r\n        },\r\n        comment: {\r\n            type: Schema.Types.ObjectId,\r\n            ref:'Comment'\r\n        },\r\n        seen: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n); \r\n\r\nexport default mongoose.model('Notification', notificationSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1626012617011
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Message.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Message.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Message.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n *  Message Schema reference with User Schema \r\n * \r\n */\n\nconst messageSchema = Schema({\n  sender: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  receiver: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  message: String,\n  seen: {\n    type: Boolean,\n    default: false\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Message', messageSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lc3NhZ2UuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJtZXNzYWdlU2NoZW1hIiwic2VuZGVyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJyZWNlaXZlciIsIm1lc3NhZ2UiLCJTdHJpbmciLCJzZWVuIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJ0aW1lc3RhbXBzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLG1CQUFTRCxNQUF4QjtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQU1FLGFBQWEsR0FBR0YsTUFBTSxDQUN4QjtBQUNJRyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEZjtBQUVKQyxJQUFBQSxHQUFHLEVBQUU7QUFGRCxHQURaO0FBS0lDLEVBQUFBLFFBQVEsRUFBRTtBQUNOSixJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURiO0FBRU5DLElBQUFBLEdBQUcsRUFBRTtBQUZDLEdBTGQ7QUFTSUUsRUFBQUEsT0FBTyxFQUFFQyxNQVRiO0FBVUlDLEVBQUFBLElBQUksRUFBRTtBQUNGUCxJQUFBQSxJQUFJLEVBQUVRLE9BREo7QUFFRkMsSUFBQUEsT0FBTyxFQUFFO0FBRlA7QUFWVixDQUR3QixFQWdCeEI7QUFDSUMsRUFBQUEsVUFBVSxFQUFFO0FBRGhCLENBaEJ3QixDQUE1QjtrQkFxQmViLG1CQUFTYyxLQUFULENBQWUsU0FBZixFQUEwQmIsYUFBMUIsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG4vKipcclxuICogIE1lc3NhZ2UgU2NoZW1hIHJlZmVyZW5jZSB3aXRoIFVzZXIgU2NoZW1hIFxyXG4gKiBcclxuICovXHJcbmNvbnN0IG1lc3NhZ2VTY2hlbWEgPSBTY2hlbWEoXHJcbiAgICB7XHJcbiAgICAgICAgc2VuZGVyOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnVXNlcicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICByZWNlaXZlcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgIHJlZjogJ1VzZXInLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWVzc2FnZTogU3RyaW5nLFxyXG4gICAgICAgIHNlZW46IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZVxyXG4gICAgfVxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ01lc3NhZ2UnLCBtZXNzYWdlU2NoZW1hKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Message.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "messageSchema",
        "sender",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "receiver",
        "message",
        "String",
        "seen",
        "Boolean",
        "default",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;AACA;;AACA,MAAME,aAAa,GAAGF,MAAM,CACxB;AACIG,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE;AAFD,GADZ;AAKIC,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE;AAFC,GALd;AASIE,EAAAA,OAAO,EAAEC,MATb;AAUIC,EAAAA,IAAI,EAAE;AACFP,IAAAA,IAAI,EAAEQ,OADJ;AAEFC,IAAAA,OAAO,EAAE;AAFP;AAVV,CADwB,EAgBxB;AACIC,EAAAA,UAAU,EAAE;AADhB,CAhBwB,CAA5B;kBAqBeb,mBAASc,KAAT,CAAe,SAAf,EAA0Bb,aAA1B,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n *  Message Schema reference with User Schema \r\n * \r\n */\r\nconst messageSchema = Schema(\r\n    {\r\n        sender: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        receiver: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        message: String,\r\n        seen: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n);\r\n\r\nexport default mongoose.model('Message', messageSchema);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1625683708368
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _schema = require(\"./schema\");\n\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _interopRequireDefault(_schema).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzJDQUFTQSxPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCIuL3NjaGVtYVwiOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "default"
      ],
      "mappings": ";;;;;;;;;;;2CAASA,O",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "export { default } from \"./schema\";"
      ]
    },
    "sourceType": "module",
    "mtime": 1625687593808
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\schema.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\schema.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\schema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _User = require(\"./User\");\n\nvar _User2 = _interopRequireDefault(_User);\n\nvar _Post = require(\"./Post\");\n\nvar _Post2 = _interopRequireDefault(_Post);\n\nvar _Notification = require(\"./Notification\");\n\nvar _Notification2 = _interopRequireDefault(_Notification);\n\nvar _Bookmark = require(\"./Bookmark\");\n\nvar _Bookmark2 = _interopRequireDefault(_Bookmark);\n\nvar _Clap = require(\"./Clap\");\n\nvar _Clap2 = _interopRequireDefault(_Clap);\n\nvar _Comment = require(\"./Comment\");\n\nvar _Comment2 = _interopRequireDefault(_Comment);\n\nvar _Message = require(\"./Message\");\n\nvar _Message2 = _interopRequireDefault(_Message);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import UpVoteSchema from \"./UpVote\";\n//import DownVoteSchema from \"./DownVote\"\nconst schema = _apolloServerExpress.gql`\n    type Query {\n       _empty: String\n    }\n\n    type Mutation {\n        _empty: String\n    }\n\n    type Subscription {\n        _empty: String\n    }\n\n    ${_User2.default}\n    ${_Post2.default}\n    ${_Clap2.default}\n    ${_Bookmark2.default}\n    ${_Notification2.default}\n    ${_Comment2.default}\n    ${_Message2.default}\n\n`;\nexports.default = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJzY2hlbWEiLCJncWwiLCJVc2VyU2NoZW1hIiwiUG9zdFNjaGVtYSIsIkNsYXBTY2hlbWEiLCJCb29rbWFya1NjaGVtYSIsIk5vdGlmaWNhdGlvblNjaGVtYSIsIkNvbW1lbnRTY2hlbWEiLCJNZXNzYWdlU2NoZW1hIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFHQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBTEE7QUFDQTtBQU1BLE1BQU1BLE1BQU0sR0FBR0Msd0JBQUk7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsY0FBVztBQUNqQixNQUFNQyxjQUFXO0FBQ2pCLE1BQU1DLGNBQVc7QUFDakIsTUFBTUMsa0JBQWU7QUFDckIsTUFBTUMsc0JBQW1CO0FBQ3pCLE1BQU1DLGlCQUFjO0FBQ3BCLE1BQU1DLGlCQUFjO0FBQ3BCO0FBQ0EsQ0FyQkE7a0JBc0JlUixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtncWx9IGZyb20gXCJhcG9sbG8tc2VydmVyLWV4cHJlc3NcIjtcclxuXHJcbmltcG9ydCBVc2VyU2NoZW1hIGZyb20gXCIuL1VzZXJcIjtcclxuaW1wb3J0IFBvc3RTY2hlbWEgZnJvbSBcIi4vUG9zdFwiO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uU2NoZW1hIGZyb20gXCIuL05vdGlmaWNhdGlvblwiO1xyXG4vL2ltcG9ydCBVcFZvdGVTY2hlbWEgZnJvbSBcIi4vVXBWb3RlXCI7XHJcbi8vaW1wb3J0IERvd25Wb3RlU2NoZW1hIGZyb20gXCIuL0Rvd25Wb3RlXCJcclxuaW1wb3J0IEJvb2ttYXJrU2NoZW1hIGZyb20gXCIuL0Jvb2ttYXJrXCI7XHJcbmltcG9ydCBDbGFwU2NoZW1hIGZyb20gXCIuL0NsYXBcIjtcclxuaW1wb3J0IENvbW1lbnRTY2hlbWEgZnJvbSBcIi4vQ29tbWVudFwiO1xyXG5pbXBvcnQgTWVzc2FnZVNjaGVtYSBmcm9tIFwiLi9NZXNzYWdlXCI7XHJcblxyXG5jb25zdCBzY2hlbWEgPSBncWxgXHJcbiAgICB0eXBlIFF1ZXJ5IHtcclxuICAgICAgIF9lbXB0eTogU3RyaW5nXHJcbiAgICB9XHJcblxyXG4gICAgdHlwZSBNdXRhdGlvbiB7XHJcbiAgICAgICAgX2VtcHR5OiBTdHJpbmdcclxuICAgIH1cclxuXHJcbiAgICB0eXBlIFN1YnNjcmlwdGlvbiB7XHJcbiAgICAgICAgX2VtcHR5OiBTdHJpbmdcclxuICAgIH1cclxuXHJcbiAgICAke1VzZXJTY2hlbWF9XHJcbiAgICAke1Bvc3RTY2hlbWF9XHJcbiAgICAke0NsYXBTY2hlbWF9XHJcbiAgICAke0Jvb2ttYXJrU2NoZW1hfVxyXG4gICAgJHtOb3RpZmljYXRpb25TY2hlbWF9XHJcbiAgICAke0NvbW1lbnRTY2hlbWF9XHJcbiAgICAke01lc3NhZ2VTY2hlbWF9XHJcblxyXG5gO1xyXG5leHBvcnQgZGVmYXVsdCBzY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "schema",
        "gql",
        "UserSchema",
        "PostSchema",
        "ClapSchema",
        "BookmarkSchema",
        "NotificationSchema",
        "CommentSchema",
        "MessageSchema"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;;;AALA;AACA;AAMA,MAAMA,MAAM,GAAGC,wBAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAW;AACjB,MAAMC,cAAW;AACjB,MAAMC,cAAW;AACjB,MAAMC,kBAAe;AACrB,MAAMC,sBAAmB;AACzB,MAAMC,iBAAc;AACpB,MAAMC,iBAAc;AACpB;AACA,CArBA;kBAsBeR,M",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\nimport UserSchema from \"./User\";\r\nimport PostSchema from \"./Post\";\r\nimport NotificationSchema from \"./Notification\";\r\n//import UpVoteSchema from \"./UpVote\";\r\n//import DownVoteSchema from \"./DownVote\"\r\nimport BookmarkSchema from \"./Bookmark\";\r\nimport ClapSchema from \"./Clap\";\r\nimport CommentSchema from \"./Comment\";\r\nimport MessageSchema from \"./Message\";\r\n\r\nconst schema = gql`\r\n    type Query {\r\n       _empty: String\r\n    }\r\n\r\n    type Mutation {\r\n        _empty: String\r\n    }\r\n\r\n    type Subscription {\r\n        _empty: String\r\n    }\r\n\r\n    ${UserSchema}\r\n    ${PostSchema}\r\n    ${ClapSchema}\r\n    ${BookmarkSchema}\r\n    ${NotificationSchema}\r\n    ${CommentSchema}\r\n    ${MessageSchema}\r\n\r\n`;\r\nexport default schema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626080223352
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\User.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\User.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\User.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * user schema\r\n */\nconst UserSchema = _apolloServerExpress.gql`\n    # --------------------------\n    # model objects\n    # --------------------------\n    \n    type User {\n    id: ID!\n    username: String!\n    email: String!\n    password: String!\n    resetToken: String\n    resetTokenExpiry: String\n    image: File\n    imagePublicId: String\n    isOnline: Boolean\n    posts: [PostPayload]\n    bookmarks: [Bookmark]\n    claps: [Clap]\n    comments: [Comment]\n    notifications: [NotificationPayload]\n    createdAt: String\n    updatedAt: String\n  }\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n  } \n\n  type Token {\n      token: String!\n  }\n  type SuccessMessage {\n      message: String!\n  }\n\n  #------------------------------------------\n  # Input Objects\n  #------------------------------------------\n  input SignInInput {\n      email: String!\n      password: String \n  }\n  input SignUpInput {\n      username: String!\n      email: String!\n      password: String!\n  }\n  input RequestPasswordResetInput {\n      email: String!\n  }\n  input ResetPasswordInput {\n      email: String!\n      token: String!\n      password: String!\n  }\n\n  input UploadUserPhotoInput {\n      id: ID!\n      image: Upload!\n      imagePublicId: String\n  }\n\n   #--------------------------------\n   # User Return Payloads\n   # ------------------------------\n   type UserPayload {\n       id: ID!\n       username: String\n       email: String\n       password: String\n       image: String\n       imagePublicId: String\n       isOnline: Boolean\n       posts: [PostPayload]\n       claps: [Clap]\n       notifications: [NotificationPayload]\n       newConversations: [ConversationsPayload]\n       newNotifications: [NotificationPayload]\n       useenMessage: Boolean\n       createdAt: String\n       updatedAt: String  \n   }\n   type UsersPayload {\n        users: [UserPayload]!\n        count: String!\n   }\n   type IsUserOnlinePayload {\n       userId: ID!\n       isOnline: Boolean\n   }\n\n  #---------------------------------------------\n  # Queries\n  #---------------------------------------------\n  extend type Query {\n    #Verfies reset password token\n    verifyResetPasswordToken(email: String, token: String!): SuccessMessage\n\n    # get current user\n    getAuthUser: UserPayload\n\n    # get user by username or by id\n    getUser(id: String): UserPayload\n\n    # get all users\n    getUsers(userId: String!, skip: Int, limit: Int): UserPayload\n  }\n\n  #--------------------------------------------\n  # Mutations\n  #--------------------------------------------\n  extend type Mutation {\n      #signIn user\n      signin(input: SignInInput!): Token\n\n      # signup user\n      signup(input: SignUpInput!): Token\n\n      # request reset password\n      requestPasswordReset(input: RequestPasswordResetInput!): SuccessMessage\n\n      # Resets user password\n      resetPassword(input: ResetPasswordInput!): Token \n\n  }\n\n  #------------------------------------\n  #- Subscriptions\n  #------------------------------------\n  extend type Subscription {\n      # Subscribes to its user online event\n      isUserOnline(authUserId: ID!, userId: ID!): IsUserOnlinePayload\n  }\n\n`;\nexports.default = UserSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVXNlclNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQXhJQTtrQkF5SWVELFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcc2NoZW1hXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dxbH0gZnJvbSBcImFwb2xsby1zZXJ2ZXItZXhwcmVzc1wiO1xyXG5cclxuLyoqXHJcbiAqIHVzZXIgc2NoZW1hXHJcbiAqL1xyXG5cclxuY29uc3QgVXNlclNjaGVtYSA9IGdxbGBcclxuICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICMgbW9kZWwgb2JqZWN0c1xyXG4gICAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgXHJcbiAgICB0eXBlIFVzZXIge1xyXG4gICAgaWQ6IElEIVxyXG4gICAgdXNlcm5hbWU6IFN0cmluZyFcclxuICAgIGVtYWlsOiBTdHJpbmchXHJcbiAgICBwYXNzd29yZDogU3RyaW5nIVxyXG4gICAgcmVzZXRUb2tlbjogU3RyaW5nXHJcbiAgICByZXNldFRva2VuRXhwaXJ5OiBTdHJpbmdcclxuICAgIGltYWdlOiBGaWxlXHJcbiAgICBpbWFnZVB1YmxpY0lkOiBTdHJpbmdcclxuICAgIGlzT25saW5lOiBCb29sZWFuXHJcbiAgICBwb3N0czogW1Bvc3RQYXlsb2FkXVxyXG4gICAgYm9va21hcmtzOiBbQm9va21hcmtdXHJcbiAgICBjbGFwczogW0NsYXBdXHJcbiAgICBjb21tZW50czogW0NvbW1lbnRdXHJcbiAgICBub3RpZmljYXRpb25zOiBbTm90aWZpY2F0aW9uUGF5bG9hZF1cclxuICAgIGNyZWF0ZWRBdDogU3RyaW5nXHJcbiAgICB1cGRhdGVkQXQ6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgdHlwZSBGaWxlIHtcclxuICAgIGZpbGVuYW1lOiBTdHJpbmchXHJcbiAgICBtaW1ldHlwZTogU3RyaW5nIVxyXG4gICAgZW5jb2Rpbmc6IFN0cmluZyFcclxuICB9IFxyXG5cclxuICB0eXBlIFRva2VuIHtcclxuICAgICAgdG9rZW46IFN0cmluZyFcclxuICB9XHJcbiAgdHlwZSBTdWNjZXNzTWVzc2FnZSB7XHJcbiAgICAgIG1lc3NhZ2U6IFN0cmluZyFcclxuICB9XHJcblxyXG4gICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIElucHV0IE9iamVjdHNcclxuICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgaW5wdXQgU2lnbkluSW5wdXQge1xyXG4gICAgICBlbWFpbDogU3RyaW5nIVxyXG4gICAgICBwYXNzd29yZDogU3RyaW5nIFxyXG4gIH1cclxuICBpbnB1dCBTaWduVXBJbnB1dCB7XHJcbiAgICAgIHVzZXJuYW1lOiBTdHJpbmchXHJcbiAgICAgIGVtYWlsOiBTdHJpbmchXHJcbiAgICAgIHBhc3N3b3JkOiBTdHJpbmchXHJcbiAgfVxyXG4gIGlucHV0IFJlcXVlc3RQYXNzd29yZFJlc2V0SW5wdXQge1xyXG4gICAgICBlbWFpbDogU3RyaW5nIVxyXG4gIH1cclxuICBpbnB1dCBSZXNldFBhc3N3b3JkSW5wdXQge1xyXG4gICAgICBlbWFpbDogU3RyaW5nIVxyXG4gICAgICB0b2tlbjogU3RyaW5nIVxyXG4gICAgICBwYXNzd29yZDogU3RyaW5nIVxyXG4gIH1cclxuXHJcbiAgaW5wdXQgVXBsb2FkVXNlclBob3RvSW5wdXQge1xyXG4gICAgICBpZDogSUQhXHJcbiAgICAgIGltYWdlOiBVcGxvYWQhXHJcbiAgICAgIGltYWdlUHVibGljSWQ6IFN0cmluZ1xyXG4gIH1cclxuXHJcbiAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAjIFVzZXIgUmV0dXJuIFBheWxvYWRzXHJcbiAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIHR5cGUgVXNlclBheWxvYWQge1xyXG4gICAgICAgaWQ6IElEIVxyXG4gICAgICAgdXNlcm5hbWU6IFN0cmluZ1xyXG4gICAgICAgZW1haWw6IFN0cmluZ1xyXG4gICAgICAgcGFzc3dvcmQ6IFN0cmluZ1xyXG4gICAgICAgaW1hZ2U6IFN0cmluZ1xyXG4gICAgICAgaW1hZ2VQdWJsaWNJZDogU3RyaW5nXHJcbiAgICAgICBpc09ubGluZTogQm9vbGVhblxyXG4gICAgICAgcG9zdHM6IFtQb3N0UGF5bG9hZF1cclxuICAgICAgIGNsYXBzOiBbQ2xhcF1cclxuICAgICAgIG5vdGlmaWNhdGlvbnM6IFtOb3RpZmljYXRpb25QYXlsb2FkXVxyXG4gICAgICAgbmV3Q29udmVyc2F0aW9uczogW0NvbnZlcnNhdGlvbnNQYXlsb2FkXVxyXG4gICAgICAgbmV3Tm90aWZpY2F0aW9uczogW05vdGlmaWNhdGlvblBheWxvYWRdXHJcbiAgICAgICB1c2Vlbk1lc3NhZ2U6IEJvb2xlYW5cclxuICAgICAgIGNyZWF0ZWRBdDogU3RyaW5nXHJcbiAgICAgICB1cGRhdGVkQXQ6IFN0cmluZyAgXHJcbiAgIH1cclxuICAgdHlwZSBVc2Vyc1BheWxvYWQge1xyXG4gICAgICAgIHVzZXJzOiBbVXNlclBheWxvYWRdIVxyXG4gICAgICAgIGNvdW50OiBTdHJpbmchXHJcbiAgIH1cclxuICAgdHlwZSBJc1VzZXJPbmxpbmVQYXlsb2FkIHtcclxuICAgICAgIHVzZXJJZDogSUQhXHJcbiAgICAgICBpc09ubGluZTogQm9vbGVhblxyXG4gICB9XHJcblxyXG4gICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIFF1ZXJpZXNcclxuICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgZXh0ZW5kIHR5cGUgUXVlcnkge1xyXG4gICAgI1ZlcmZpZXMgcmVzZXQgcGFzc3dvcmQgdG9rZW5cclxuICAgIHZlcmlmeVJlc2V0UGFzc3dvcmRUb2tlbihlbWFpbDogU3RyaW5nLCB0b2tlbjogU3RyaW5nISk6IFN1Y2Nlc3NNZXNzYWdlXHJcblxyXG4gICAgIyBnZXQgY3VycmVudCB1c2VyXHJcbiAgICBnZXRBdXRoVXNlcjogVXNlclBheWxvYWRcclxuXHJcbiAgICAjIGdldCB1c2VyIGJ5IHVzZXJuYW1lIG9yIGJ5IGlkXHJcbiAgICBnZXRVc2VyKGlkOiBTdHJpbmcpOiBVc2VyUGF5bG9hZFxyXG5cclxuICAgICMgZ2V0IGFsbCB1c2Vyc1xyXG4gICAgZ2V0VXNlcnModXNlcklkOiBTdHJpbmchLCBza2lwOiBJbnQsIGxpbWl0OiBJbnQpOiBVc2VyUGF5bG9hZFxyXG4gIH1cclxuXHJcbiAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBNdXRhdGlvbnNcclxuICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XHJcbiAgICAgICNzaWduSW4gdXNlclxyXG4gICAgICBzaWduaW4oaW5wdXQ6IFNpZ25JbklucHV0ISk6IFRva2VuXHJcblxyXG4gICAgICAjIHNpZ251cCB1c2VyXHJcbiAgICAgIHNpZ251cChpbnB1dDogU2lnblVwSW5wdXQhKTogVG9rZW5cclxuXHJcbiAgICAgICMgcmVxdWVzdCByZXNldCBwYXNzd29yZFxyXG4gICAgICByZXF1ZXN0UGFzc3dvcmRSZXNldChpbnB1dDogUmVxdWVzdFBhc3N3b3JkUmVzZXRJbnB1dCEpOiBTdWNjZXNzTWVzc2FnZVxyXG5cclxuICAgICAgIyBSZXNldHMgdXNlciBwYXNzd29yZFxyXG4gICAgICByZXNldFBhc3N3b3JkKGlucHV0OiBSZXNldFBhc3N3b3JkSW5wdXQhKTogVG9rZW4gXHJcblxyXG4gIH1cclxuXHJcbiAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMtIFN1YnNjcmlwdGlvbnNcclxuICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgZXh0ZW5kIHR5cGUgU3Vic2NyaXB0aW9uIHtcclxuICAgICAgIyBTdWJzY3JpYmVzIHRvIGl0cyB1c2VyIG9ubGluZSBldmVudFxyXG4gICAgICBpc1VzZXJPbmxpbmUoYXV0aFVzZXJJZDogSUQhLCB1c2VySWQ6IElEISk6IElzVXNlck9ubGluZVBheWxvYWRcclxuICB9XHJcblxyXG5gO1xyXG5leHBvcnQgZGVmYXVsdCBVc2VyU2NoZW1hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "UserSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,wBAAI;AACvxIA;kBAyIeD,U",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * user schema\r\n */\r\n\r\nconst UserSchema = gql`\r\n    # --------------------------\r\n    # model objects\r\n    # --------------------------\r\n    \r\n    type User {\r\n    id: ID!\r\n    username: String!\r\n    email: String!\r\n    password: String!\r\n    resetToken: String\r\n    resetTokenExpiry: String\r\n    image: File\r\n    imagePublicId: String\r\n    isOnline: Boolean\r\n    posts: [PostPayload]\r\n    bookmarks: [Bookmark]\r\n    claps: [Clap]\r\n    comments: [Comment]\r\n    notifications: [NotificationPayload]\r\n    createdAt: String\r\n    updatedAt: String\r\n  }\r\n\r\n  type File {\r\n    filename: String!\r\n    mimetype: String!\r\n    encoding: String!\r\n  } \r\n\r\n  type Token {\r\n      token: String!\r\n  }\r\n  type SuccessMessage {\r\n      message: String!\r\n  }\r\n\r\n  #------------------------------------------\r\n  # Input Objects\r\n  #------------------------------------------\r\n  input SignInInput {\r\n      email: String!\r\n      password: String \r\n  }\r\n  input SignUpInput {\r\n      username: String!\r\n      email: String!\r\n      password: String!\r\n  }\r\n  input RequestPasswordResetInput {\r\n      email: String!\r\n  }\r\n  input ResetPasswordInput {\r\n      email: String!\r\n      token: String!\r\n      password: String!\r\n  }\r\n\r\n  input UploadUserPhotoInput {\r\n      id: ID!\r\n      image: Upload!\r\n      imagePublicId: String\r\n  }\r\n\r\n   #--------------------------------\r\n   # User Return Payloads\r\n   # ------------------------------\r\n   type UserPayload {\r\n       id: ID!\r\n       username: String\r\n       email: String\r\n       password: String\r\n       image: String\r\n       imagePublicId: String\r\n       isOnline: Boolean\r\n       posts: [PostPayload]\r\n       claps: [Clap]\r\n       notifications: [NotificationPayload]\r\n       newConversations: [ConversationsPayload]\r\n       newNotifications: [NotificationPayload]\r\n       useenMessage: Boolean\r\n       createdAt: String\r\n       updatedAt: String  \r\n   }\r\n   type UsersPayload {\r\n        users: [UserPayload]!\r\n        count: String!\r\n   }\r\n   type IsUserOnlinePayload {\r\n       userId: ID!\r\n       isOnline: Boolean\r\n   }\r\n\r\n  #---------------------------------------------\r\n  # Queries\r\n  #---------------------------------------------\r\n  extend type Query {\r\n    #Verfies reset password token\r\n    verifyResetPasswordToken(email: String, token: String!): SuccessMessage\r\n\r\n    # get current user\r\n    getAuthUser: UserPayload\r\n\r\n    # get user by username or by id\r\n    getUser(id: String): UserPayload\r\n\r\n    # get all users\r\n    getUsers(userId: String!, skip: Int, limit: Int): UserPayload\r\n  }\r\n\r\n  #--------------------------------------------\r\n  # Mutations\r\n  #--------------------------------------------\r\n  extend type Mutation {\r\n      #signIn user\r\n      signin(input: SignInInput!): Token\r\n\r\n      # signup user\r\n      signup(input: SignUpInput!): Token\r\n\r\n      # request reset password\r\n      requestPasswordReset(input: RequestPasswordResetInput!): SuccessMessage\r\n\r\n      # Resets user password\r\n      resetPassword(input: ResetPasswordInput!): Token \r\n\r\n  }\r\n\r\n  #------------------------------------\r\n  #- Subscriptions\r\n  #------------------------------------\r\n  extend type Subscription {\r\n      # Subscribes to its user online event\r\n      isUserOnline(authUserId: ID!, userId: ID!): IsUserOnlinePayload\r\n  }\r\n\r\n`;\r\nexport default UserSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626085409172
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Post.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Post.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Post.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Post.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nconst PostSchema = _apolloServerExpress.gql`\n    #-------------------------------------\n    #   Model Objects\n    #-------------------------------------\n    type Post {\n        id: ID!\n        title: String\n        description: String\n        author: User!\n        claps: [Clap]\n        comments: [Comment]\n        createdAt: String\n        updatedAt: String\n    }\n\n    #--------------------------------------\n    #   Input Objects\n    #-------------------------------------\n    input CreatePostInput {\n        title: String\n        description: String\n        authorId: ID!\n    }\n    input DeletePostInput {\n        id: ID!\n    }\n\n    #-----------------------------------------------\n    #    Return Payloads\n    #------------------------------------------------\n    type UserPostsPayload {\n        posts: [PostPayload]!\n        count: String!\n    }\n\n    type PostPayload {\n        id:  ID!\n        title: String\n        description: String\n        author: UserPayload!\n        claps: [Clap]\n        comments: [CommentPayload]\n        createdAt: String\n        updatedAt: String   \n    }\n\n    type PostsPayload {\n        posts: [PostPayload]!\n        count: String!\n    }\n\n    #-------------------------------------\n    #    Queries\n    #-------------------------------------\n    extend type Query {\n        #get user posts by username\n        getUserPosts(username: String!, skip: Int, limit: Int): UserPostsPayload\n\n        #get all posts\n        getPosts(authUserId: ID!, skip: Int, limit: Int): PostsPayload\n    \n        # gets post by id\n        getPost(id: ID!): PostPayload\n    }\n    \n    #-------------------------------------------------\n    #   Mutations\n    #-------------------------------------------------\n    extend type Mutation {\n        # creates a new post\n        createPost(input: CreatePostInput!): PostPayload\n\n        # deletes a user post\n        deletePost(input: DeletePostInput!): PostPayload\n    }\n\n`;\nexports.default = PostSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvc3QuanMiXSwibmFtZXMiOlsiUG9zdFNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQTVFQTtrQkE4RWVELFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcc2NoZW1hXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dxbH0gZnJvbSBcImFwb2xsby1zZXJ2ZXItZXhwcmVzc1wiO1xyXG5cclxuY29uc3QgUG9zdFNjaGVtYSA9IGdxbGBcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjICAgTW9kZWwgT2JqZWN0c1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHR5cGUgUG9zdCB7XHJcbiAgICAgICAgaWQ6IElEIVxyXG4gICAgICAgIHRpdGxlOiBTdHJpbmdcclxuICAgICAgICBkZXNjcmlwdGlvbjogU3RyaW5nXHJcbiAgICAgICAgYXV0aG9yOiBVc2VyIVxyXG4gICAgICAgIGNsYXBzOiBbQ2xhcF1cclxuICAgICAgICBjb21tZW50czogW0NvbW1lbnRdXHJcbiAgICAgICAgY3JlYXRlZEF0OiBTdHJpbmdcclxuICAgICAgICB1cGRhdGVkQXQ6IFN0cmluZ1xyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyAgIElucHV0IE9iamVjdHNcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBpbnB1dCBDcmVhdGVQb3N0SW5wdXQge1xyXG4gICAgICAgIHRpdGxlOiBTdHJpbmdcclxuICAgICAgICBkZXNjcmlwdGlvbjogU3RyaW5nXHJcbiAgICAgICAgYXV0aG9ySWQ6IElEIVxyXG4gICAgfVxyXG4gICAgaW5wdXQgRGVsZXRlUG9zdElucHV0IHtcclxuICAgICAgICBpZDogSUQhXHJcbiAgICB9XHJcblxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjICAgIFJldHVybiBQYXlsb2Fkc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBVc2VyUG9zdHNQYXlsb2FkIHtcclxuICAgICAgICBwb3N0czogW1Bvc3RQYXlsb2FkXSFcclxuICAgICAgICBjb3VudDogU3RyaW5nIVxyXG4gICAgfVxyXG5cclxuICAgIHR5cGUgUG9zdFBheWxvYWQge1xyXG4gICAgICAgIGlkOiAgSUQhXHJcbiAgICAgICAgdGl0bGU6IFN0cmluZ1xyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBTdHJpbmdcclxuICAgICAgICBhdXRob3I6IFVzZXJQYXlsb2FkIVxyXG4gICAgICAgIGNsYXBzOiBbQ2xhcF1cclxuICAgICAgICBjb21tZW50czogW0NvbW1lbnRQYXlsb2FkXVxyXG4gICAgICAgIGNyZWF0ZWRBdDogU3RyaW5nXHJcbiAgICAgICAgdXBkYXRlZEF0OiBTdHJpbmcgICBcclxuICAgIH1cclxuXHJcbiAgICB0eXBlIFBvc3RzUGF5bG9hZCB7XHJcbiAgICAgICAgcG9zdHM6IFtQb3N0UGF5bG9hZF0hXHJcbiAgICAgICAgY291bnQ6IFN0cmluZyFcclxuICAgIH1cclxuXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyAgICBRdWVyaWVzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgZXh0ZW5kIHR5cGUgUXVlcnkge1xyXG4gICAgICAgICNnZXQgdXNlciBwb3N0cyBieSB1c2VybmFtZVxyXG4gICAgICAgIGdldFVzZXJQb3N0cyh1c2VybmFtZTogU3RyaW5nISwgc2tpcDogSW50LCBsaW1pdDogSW50KTogVXNlclBvc3RzUGF5bG9hZFxyXG5cclxuICAgICAgICAjZ2V0IGFsbCBwb3N0c1xyXG4gICAgICAgIGdldFBvc3RzKGF1dGhVc2VySWQ6IElEISwgc2tpcDogSW50LCBsaW1pdDogSW50KTogUG9zdHNQYXlsb2FkXHJcbiAgICBcclxuICAgICAgICAjIGdldHMgcG9zdCBieSBpZFxyXG4gICAgICAgIGdldFBvc3QoaWQ6IElEISk6IFBvc3RQYXlsb2FkXHJcbiAgICB9XHJcbiAgICBcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjICAgTXV0YXRpb25zXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgZXh0ZW5kIHR5cGUgTXV0YXRpb24ge1xyXG4gICAgICAgICMgY3JlYXRlcyBhIG5ldyBwb3N0XHJcbiAgICAgICAgY3JlYXRlUG9zdChpbnB1dDogQ3JlYXRlUG9zdElucHV0ISk6IFBvc3RQYXlsb2FkXHJcblxyXG4gICAgICAgICMgZGVsZXRlcyBhIHVzZXIgcG9zdFxyXG4gICAgICAgIGRlbGV0ZVBvc3QoaW5wdXQ6IERlbGV0ZVBvc3RJbnB1dCEpOiBQb3N0UGF5bG9hZFxyXG4gICAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvc3RTY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Post.js"
      ],
      "names": [
        "PostSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA,MAAMA,UAAU,GAAGC,wBAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EA;kBA8EeD,U",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\nconst PostSchema = gql`\r\n    #-------------------------------------\r\n    #   Model Objects\r\n    #-------------------------------------\r\n    type Post {\r\n        id: ID!\r\n        title: String\r\n        description: String\r\n        author: User!\r\n        claps: [Clap]\r\n        comments: [Comment]\r\n        createdAt: String\r\n        updatedAt: String\r\n    }\r\n\r\n    #--------------------------------------\r\n    #   Input Objects\r\n    #-------------------------------------\r\n    input CreatePostInput {\r\n        title: String\r\n        description: String\r\n        authorId: ID!\r\n    }\r\n    input DeletePostInput {\r\n        id: ID!\r\n    }\r\n\r\n    #-----------------------------------------------\r\n    #    Return Payloads\r\n    #------------------------------------------------\r\n    type UserPostsPayload {\r\n        posts: [PostPayload]!\r\n        count: String!\r\n    }\r\n\r\n    type PostPayload {\r\n        id:  ID!\r\n        title: String\r\n        description: String\r\n        author: UserPayload!\r\n        claps: [Clap]\r\n        comments: [CommentPayload]\r\n        createdAt: String\r\n        updatedAt: String   \r\n    }\r\n\r\n    type PostsPayload {\r\n        posts: [PostPayload]!\r\n        count: String!\r\n    }\r\n\r\n    #-------------------------------------\r\n    #    Queries\r\n    #-------------------------------------\r\n    extend type Query {\r\n        #get user posts by username\r\n        getUserPosts(username: String!, skip: Int, limit: Int): UserPostsPayload\r\n\r\n        #get all posts\r\n        getPosts(authUserId: ID!, skip: Int, limit: Int): PostsPayload\r\n    \r\n        # gets post by id\r\n        getPost(id: ID!): PostPayload\r\n    }\r\n    \r\n    #-------------------------------------------------\r\n    #   Mutations\r\n    #-------------------------------------------------\r\n    extend type Mutation {\r\n        # creates a new post\r\n        createPost(input: CreatePostInput!): PostPayload\r\n\r\n        # deletes a user post\r\n        deletePost(input: DeletePostInput!): PostPayload\r\n    }\r\n\r\n`;\r\n\r\nexport default PostSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626013369279
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Notification.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Notification.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Notification.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Notification.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Notification.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Notification schema\r\n */\nconst NotificationSchema = _apolloServerExpress.gql`\n  # ---------------------------------------------------------\n  # Model Objects\n  # ---------------------------------------------------------\n  enum NotificationType { \n    CLAP \n    COMMENT\n  }\n  type Notification {\n    id: ID!\n    user: User\n    author: User\n    post: ID!\n    clap: Clap \n    comment: Comment\n    type: NotificationType\n    seen: Boolean\n    createdAt: String\n  }\n  # ---------------------------------------------------------\n  # Input Objects\n  # ---------------------------------------------------------\n  input CreateNotificationInput {\n    userId: ID!\n    authorId: ID!\n    postId: ID\n    notificationType: NotificationType!\n    notificationTypeId: ID\n  }\n  input DeleteNotificationInput {\n    id: ID!\n  }\n  input UpdateNotificationSeenInput {\n    userId: ID!\n  }\n  # ---------------------------------------------------------\n  # Return Payloads\n  # ---------------------------------------------------------\n  type NotificationPayload {\n    id: ID\n    user: UserPayload\n    author: UserPayload\n    comment: CommentPayload\n    createdAt: String\n  }\n  type NotificationsPayload {\n    count: String!\n    notifications: [NotificationPayload]!\n  }\n  enum NotificationOperationType {\n    CREATE\n    DELETE\n  }\n  type NotificationCreatedOrDeletedPayload {\n    operation: NotificationOperationType!\n    notification: NotificationPayload\n  }\n  # ---------------------------------------------------------\n  # Queries\n  # ---------------------------------------------------------\n  extend type Query {\n    # Gets notifications for specific user\n    getUserNotifications(userId: ID!, skip: Int, limit: Int): NotificationsPayload\n  }\n  # ---------------------------------------------------------\n  # Mutations\n  # ---------------------------------------------------------\n  extend type Mutation {\n    # Creates a new notification for user\n    createNotification(input: CreateNotificationInput!): Notification\n    # Deletes a notification\n    deleteNotification(input: DeleteNotificationInput!): Notification\n    # Updates notification seen values for user\n    updateNotificationSeen(input: UpdateNotificationSeenInput!): Boolean\n  }\n  # ---------------------------------------------------------\n  # Subscriptions\n  # ---------------------------------------------------------\n  extend type Subscription {\n    # Subscribes to notification created or deleted event\n    notificationCreatedOrDeleted: NotificationCreatedOrDeletedPayload\n  }\n`;\nexports.default = NotificationSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vdGlmaWNhdGlvbi5qcyJdLCJuYW1lcyI6WyJOb3RpZmljYXRpb25TY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLGtCQUFrQixHQUFHQyx3QkFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQWxGQTtrQkFvRmVELGtCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcclxuXHJcbi8qKlxyXG4gKiBOb3RpZmljYXRpb24gc2NoZW1hXHJcbiAqL1xyXG5jb25zdCBOb3RpZmljYXRpb25TY2hlbWEgPSBncWxgXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIE1vZGVsIE9iamVjdHNcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIGVudW0gTm90aWZpY2F0aW9uVHlwZSB7IFxyXG4gICAgQ0xBUCBcclxuICAgIENPTU1FTlRcclxuICB9XHJcbiAgdHlwZSBOb3RpZmljYXRpb24ge1xyXG4gICAgaWQ6IElEIVxyXG4gICAgdXNlcjogVXNlclxyXG4gICAgYXV0aG9yOiBVc2VyXHJcbiAgICBwb3N0OiBJRCFcclxuICAgIGNsYXA6IENsYXAgXHJcbiAgICBjb21tZW50OiBDb21tZW50XHJcbiAgICB0eXBlOiBOb3RpZmljYXRpb25UeXBlXHJcbiAgICBzZWVuOiBCb29sZWFuXHJcbiAgICBjcmVhdGVkQXQ6IFN0cmluZ1xyXG4gIH1cclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgSW5wdXQgT2JqZWN0c1xyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgaW5wdXQgQ3JlYXRlTm90aWZpY2F0aW9uSW5wdXQge1xyXG4gICAgdXNlcklkOiBJRCFcclxuICAgIGF1dGhvcklkOiBJRCFcclxuICAgIHBvc3RJZDogSURcclxuICAgIG5vdGlmaWNhdGlvblR5cGU6IE5vdGlmaWNhdGlvblR5cGUhXHJcbiAgICBub3RpZmljYXRpb25UeXBlSWQ6IElEXHJcbiAgfVxyXG4gIGlucHV0IERlbGV0ZU5vdGlmaWNhdGlvbklucHV0IHtcclxuICAgIGlkOiBJRCFcclxuICB9XHJcbiAgaW5wdXQgVXBkYXRlTm90aWZpY2F0aW9uU2VlbklucHV0IHtcclxuICAgIHVzZXJJZDogSUQhXHJcbiAgfVxyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBSZXR1cm4gUGF5bG9hZHNcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHR5cGUgTm90aWZpY2F0aW9uUGF5bG9hZCB7XHJcbiAgICBpZDogSURcclxuICAgIHVzZXI6IFVzZXJQYXlsb2FkXHJcbiAgICBhdXRob3I6IFVzZXJQYXlsb2FkXHJcbiAgICBjb21tZW50OiBDb21tZW50UGF5bG9hZFxyXG4gICAgY3JlYXRlZEF0OiBTdHJpbmdcclxuICB9XHJcbiAgdHlwZSBOb3RpZmljYXRpb25zUGF5bG9hZCB7XHJcbiAgICBjb3VudDogU3RyaW5nIVxyXG4gICAgbm90aWZpY2F0aW9uczogW05vdGlmaWNhdGlvblBheWxvYWRdIVxyXG4gIH1cclxuICBlbnVtIE5vdGlmaWNhdGlvbk9wZXJhdGlvblR5cGUge1xyXG4gICAgQ1JFQVRFXHJcbiAgICBERUxFVEVcclxuICB9XHJcbiAgdHlwZSBOb3RpZmljYXRpb25DcmVhdGVkT3JEZWxldGVkUGF5bG9hZCB7XHJcbiAgICBvcGVyYXRpb246IE5vdGlmaWNhdGlvbk9wZXJhdGlvblR5cGUhXHJcbiAgICBub3RpZmljYXRpb246IE5vdGlmaWNhdGlvblBheWxvYWRcclxuICB9XHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIFF1ZXJpZXNcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcclxuICAgICMgR2V0cyBub3RpZmljYXRpb25zIGZvciBzcGVjaWZpYyB1c2VyXHJcbiAgICBnZXRVc2VyTm90aWZpY2F0aW9ucyh1c2VySWQ6IElEISwgc2tpcDogSW50LCBsaW1pdDogSW50KTogTm90aWZpY2F0aW9uc1BheWxvYWRcclxuICB9XHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIE11dGF0aW9uc1xyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgZXh0ZW5kIHR5cGUgTXV0YXRpb24ge1xyXG4gICAgIyBDcmVhdGVzIGEgbmV3IG5vdGlmaWNhdGlvbiBmb3IgdXNlclxyXG4gICAgY3JlYXRlTm90aWZpY2F0aW9uKGlucHV0OiBDcmVhdGVOb3RpZmljYXRpb25JbnB1dCEpOiBOb3RpZmljYXRpb25cclxuICAgICMgRGVsZXRlcyBhIG5vdGlmaWNhdGlvblxyXG4gICAgZGVsZXRlTm90aWZpY2F0aW9uKGlucHV0OiBEZWxldGVOb3RpZmljYXRpb25JbnB1dCEpOiBOb3RpZmljYXRpb25cclxuICAgICMgVXBkYXRlcyBub3RpZmljYXRpb24gc2VlbiB2YWx1ZXMgZm9yIHVzZXJcclxuICAgIHVwZGF0ZU5vdGlmaWNhdGlvblNlZW4oaW5wdXQ6IFVwZGF0ZU5vdGlmaWNhdGlvblNlZW5JbnB1dCEpOiBCb29sZWFuXHJcbiAgfVxyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBTdWJzY3JpcHRpb25zXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBleHRlbmQgdHlwZSBTdWJzY3JpcHRpb24ge1xyXG4gICAgIyBTdWJzY3JpYmVzIHRvIG5vdGlmaWNhdGlvbiBjcmVhdGVkIG9yIGRlbGV0ZWQgZXZlbnRcclxuICAgIG5vdGlmaWNhdGlvbkNyZWF0ZWRPckRlbGV0ZWQ6IE5vdGlmaWNhdGlvbkNyZWF0ZWRPckRlbGV0ZWRQYXlsb2FkXHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uU2NoZW1hOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Notification.js"
      ],
      "names": [
        "NotificationSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AACA,MAAMA,kBAAkB,GAAGC,wBAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlFA;kBAoFeD,kB",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\r\n\r\n/**\r\n * Notification schema\r\n */\r\nconst NotificationSchema = gql`\r\n  # ---------------------------------------------------------\r\n  # Model Objects\r\n  # ---------------------------------------------------------\r\n  enum NotificationType { \r\n    CLAP \r\n    COMMENT\r\n  }\r\n  type Notification {\r\n    id: ID!\r\n    user: User\r\n    author: User\r\n    post: ID!\r\n    clap: Clap \r\n    comment: Comment\r\n    type: NotificationType\r\n    seen: Boolean\r\n    createdAt: String\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Input Objects\r\n  # ---------------------------------------------------------\r\n  input CreateNotificationInput {\r\n    userId: ID!\r\n    authorId: ID!\r\n    postId: ID\r\n    notificationType: NotificationType!\r\n    notificationTypeId: ID\r\n  }\r\n  input DeleteNotificationInput {\r\n    id: ID!\r\n  }\r\n  input UpdateNotificationSeenInput {\r\n    userId: ID!\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Return Payloads\r\n  # ---------------------------------------------------------\r\n  type NotificationPayload {\r\n    id: ID\r\n    user: UserPayload\r\n    author: UserPayload\r\n    comment: CommentPayload\r\n    createdAt: String\r\n  }\r\n  type NotificationsPayload {\r\n    count: String!\r\n    notifications: [NotificationPayload]!\r\n  }\r\n  enum NotificationOperationType {\r\n    CREATE\r\n    DELETE\r\n  }\r\n  type NotificationCreatedOrDeletedPayload {\r\n    operation: NotificationOperationType!\r\n    notification: NotificationPayload\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Queries\r\n  # ---------------------------------------------------------\r\n  extend type Query {\r\n    # Gets notifications for specific user\r\n    getUserNotifications(userId: ID!, skip: Int, limit: Int): NotificationsPayload\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Mutations\r\n  # ---------------------------------------------------------\r\n  extend type Mutation {\r\n    # Creates a new notification for user\r\n    createNotification(input: CreateNotificationInput!): Notification\r\n    # Deletes a notification\r\n    deleteNotification(input: DeleteNotificationInput!): Notification\r\n    # Updates notification seen values for user\r\n    updateNotificationSeen(input: UpdateNotificationSeenInput!): Boolean\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Subscriptions\r\n  # ---------------------------------------------------------\r\n  extend type Subscription {\r\n    # Subscribes to notification created or deleted event\r\n    notificationCreatedOrDeleted: NotificationCreatedOrDeletedPayload\r\n  }\r\n`;\r\n\r\nexport default NotificationSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626089846491
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Vote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Vote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Vote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Vote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Vote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Vote Schema\r\n */\nconst VoteSchema = _apolloServerExpress.gql`\n    #---------------------------\n    # Model Objects\n    #--------------------------\n    type Vote {\n        id:  ID!\n        post: ID\n        user: ID\n    }\n   \n    #-------------------------------\n    # input Object\n    #-------------------------------\n    input UpVoteInput {\n        userId: ID!\n        postId: ID!\n    }\n    input DownVoteInput {\n        userId: ID!\n        postId: ID!\n    }\n\n    #---------------------------------\n    # Return Payloads\n    #---------------------------------\n    type VotePayload {\n        id: ID!\n        user: UserPayload\n        post: PostPayload\n    }\n\n    #----------------------------\n    # Mutations\n    # ---------------------------\n    extend type Mutation{\n        # Creates a vote for post\n        UpVote(input: UpVoteInput!): Vote\n\n        # Deletes a post like\n        DownVote(input: DownVoteInput!): Vote   \n    }\n\n`;\nexports.default = VoteSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZvdGUuanMiXSwibmFtZXMiOlsiVm90ZVNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0ExQ0E7a0JBNENlRCxVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtncWx9IGZyb20gXCJhcG9sbG8tc2VydmVyLWV4cHJlc3NcIjtcclxuXHJcbi8qKlxyXG4gKiBWb3RlIFNjaGVtYVxyXG4gKi9cclxuXHJcbmNvbnN0IFZvdGVTY2hlbWEgPSBncWxgXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIE1vZGVsIE9iamVjdHNcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBWb3RlIHtcclxuICAgICAgICBpZDogIElEIVxyXG4gICAgICAgIHBvc3Q6IElEXHJcbiAgICAgICAgdXNlcjogSURcclxuICAgIH1cclxuICAgXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBpbnB1dCBPYmplY3RcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBpbnB1dCBVcFZvdGVJbnB1dCB7XHJcbiAgICAgICAgdXNlcklkOiBJRCFcclxuICAgICAgICBwb3N0SWQ6IElEIVxyXG4gICAgfVxyXG4gICAgaW5wdXQgRG93blZvdGVJbnB1dCB7XHJcbiAgICAgICAgdXNlcklkOiBJRCFcclxuICAgICAgICBwb3N0SWQ6IElEIVxyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICMgUmV0dXJuIFBheWxvYWRzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICB0eXBlIFZvdGVQYXlsb2FkIHtcclxuICAgICAgICBpZDogSUQhXHJcbiAgICAgICAgdXNlcjogVXNlclBheWxvYWRcclxuICAgICAgICBwb3N0OiBQb3N0UGF5bG9hZFxyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIE11dGF0aW9uc1xyXG4gICAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGV4dGVuZCB0eXBlIE11dGF0aW9ue1xyXG4gICAgICAgICMgQ3JlYXRlcyBhIHZvdGUgZm9yIHBvc3RcclxuICAgICAgICBVcFZvdGUoaW5wdXQ6IFVwVm90ZUlucHV0ISk6IFZvdGVcclxuXHJcbiAgICAgICAgIyBEZWxldGVzIGEgcG9zdCBsaWtlXHJcbiAgICAgICAgRG93blZvdGUoaW5wdXQ6IERvd25Wb3RlSW5wdXQhKTogVm90ZSAgIFxyXG4gICAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZvdGVTY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Vote.js"
      ],
      "names": [
        "VoteSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,wBAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1CA;kBA4CeD,U",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * Vote Schema\r\n */\r\n\r\nconst VoteSchema = gql`\r\n    #---------------------------\r\n    # Model Objects\r\n    #--------------------------\r\n    type Vote {\r\n        id:  ID!\r\n        post: ID\r\n        user: ID\r\n    }\r\n   \r\n    #-------------------------------\r\n    # input Object\r\n    #-------------------------------\r\n    input UpVoteInput {\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n    input DownVoteInput {\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n\r\n    #---------------------------------\r\n    # Return Payloads\r\n    #---------------------------------\r\n    type VotePayload {\r\n        id: ID!\r\n        user: UserPayload\r\n        post: PostPayload\r\n    }\r\n\r\n    #----------------------------\r\n    # Mutations\r\n    # ---------------------------\r\n    extend type Mutation{\r\n        # Creates a vote for post\r\n        UpVote(input: UpVoteInput!): Vote\r\n\r\n        # Deletes a post like\r\n        DownVote(input: DownVoteInput!): Vote   \r\n    }\r\n\r\n`;\r\n\r\nexport default VoteSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1625976339730
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Comment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Comment.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Comment.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Comment Schema \r\n */\nconst CommentSchema = _apolloServerExpress.gql`\n    type Comment {\n        id: ID!\n        comment: String!\n        author: ID\n        post: ID\n        claps: [Clap]\n        comments: [Comment]\n        createdAt: String\n        updatedAt: String  \n    }\n    \n  # ---------------------------------------------------------\n  # Input Objects\n  # ---------------------------------------------------------\n  input CreateCommentInput {\n    comment: String!\n    author: ID!\n    postId: ID!\n  }\n  \n  input DeleteCommentInput {\n    id: ID!\n  }\n  # ---------------------------------------------------------\n  # Return Payloads\n  # ---------------------------------------------------------\n  type CommentPayload {\n    id: ID\n    comment: String\n    author: UserPayload\n    post: PostPayload\n    claps: [Clap]\n    comments: [Comment]\n    createdAt: String\n    updatedAt: String\n  }\n  # ---------------------------------------------------------\n  # Mutations\n  # ---------------------------------------------------------\n  extend type Mutation {\n    # Creates a post comment\n    createComment(input: CreateCommentInput!): Comment\n    # Deletes a post comment\n    deleteComment(input: DeleteCommentInput!): Comment\n  }\n`;\nexports.default = CommentSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudFNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBRUEsTUFBTUEsYUFBYSxHQUFHQyx3QkFBSztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQTlDQTtrQkFnRGVELGEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcc2NoZW1hXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dxbH0gZnJvbSBcImFwb2xsby1zZXJ2ZXItZXhwcmVzc1wiO1xyXG5cclxuLyoqXHJcbiAqIENvbW1lbnQgU2NoZW1hIFxyXG4gKi9cclxuXHJcbmNvbnN0IENvbW1lbnRTY2hlbWEgPSBncWwgYFxyXG4gICAgdHlwZSBDb21tZW50IHtcclxuICAgICAgICBpZDogSUQhXHJcbiAgICAgICAgY29tbWVudDogU3RyaW5nIVxyXG4gICAgICAgIGF1dGhvcjogSURcclxuICAgICAgICBwb3N0OiBJRFxyXG4gICAgICAgIGNsYXBzOiBbQ2xhcF1cclxuICAgICAgICBjb21tZW50czogW0NvbW1lbnRdXHJcbiAgICAgICAgY3JlYXRlZEF0OiBTdHJpbmdcclxuICAgICAgICB1cGRhdGVkQXQ6IFN0cmluZyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgSW5wdXQgT2JqZWN0c1xyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgaW5wdXQgQ3JlYXRlQ29tbWVudElucHV0IHtcclxuICAgIGNvbW1lbnQ6IFN0cmluZyFcclxuICAgIGF1dGhvcjogSUQhXHJcbiAgICBwb3N0SWQ6IElEIVxyXG4gIH1cclxuICBcclxuICBpbnB1dCBEZWxldGVDb21tZW50SW5wdXQge1xyXG4gICAgaWQ6IElEIVxyXG4gIH1cclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgUmV0dXJuIFBheWxvYWRzXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB0eXBlIENvbW1lbnRQYXlsb2FkIHtcclxuICAgIGlkOiBJRFxyXG4gICAgY29tbWVudDogU3RyaW5nXHJcbiAgICBhdXRob3I6IFVzZXJQYXlsb2FkXHJcbiAgICBwb3N0OiBQb3N0UGF5bG9hZFxyXG4gICAgY2xhcHM6IFtDbGFwXVxyXG4gICAgY29tbWVudHM6IFtDb21tZW50XVxyXG4gICAgY3JlYXRlZEF0OiBTdHJpbmdcclxuICAgIHVwZGF0ZWRBdDogU3RyaW5nXHJcbiAgfVxyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBNdXRhdGlvbnNcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIGV4dGVuZCB0eXBlIE11dGF0aW9uIHtcclxuICAgICMgQ3JlYXRlcyBhIHBvc3QgY29tbWVudFxyXG4gICAgY3JlYXRlQ29tbWVudChpbnB1dDogQ3JlYXRlQ29tbWVudElucHV0ISk6IENvbW1lbnRcclxuICAgICMgRGVsZXRlcyBhIHBvc3QgY29tbWVudFxyXG4gICAgZGVsZXRlQ29tbWVudChpbnB1dDogRGVsZXRlQ29tbWVudElucHV0ISk6IENvbW1lbnRcclxuICB9XHJcbmA7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21tZW50U2NoZW1hIl19",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "CommentSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,aAAa,GAAGC,wBAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9CA;kBAgDeD,a",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * Comment Schema \r\n */\r\n\r\nconst CommentSchema = gql `\r\n    type Comment {\r\n        id: ID!\r\n        comment: String!\r\n        author: ID\r\n        post: ID\r\n        claps: [Clap]\r\n        comments: [Comment]\r\n        createdAt: String\r\n        updatedAt: String  \r\n    }\r\n    \r\n  # ---------------------------------------------------------\r\n  # Input Objects\r\n  # ---------------------------------------------------------\r\n  input CreateCommentInput {\r\n    comment: String!\r\n    author: ID!\r\n    postId: ID!\r\n  }\r\n  \r\n  input DeleteCommentInput {\r\n    id: ID!\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Return Payloads\r\n  # ---------------------------------------------------------\r\n  type CommentPayload {\r\n    id: ID\r\n    comment: String\r\n    author: UserPayload\r\n    post: PostPayload\r\n    claps: [Clap]\r\n    comments: [Comment]\r\n    createdAt: String\r\n    updatedAt: String\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Mutations\r\n  # ---------------------------------------------------------\r\n  extend type Mutation {\r\n    # Creates a post comment\r\n    createComment(input: CreateCommentInput!): Comment\r\n    # Deletes a post comment\r\n    deleteComment(input: DeleteCommentInput!): Comment\r\n  }\r\n`;\r\n\r\nexport default CommentSchema"
      ]
    },
    "sourceType": "module",
    "mtime": 1626012931712
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Message.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Message.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Message.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Message schema\r\n */\nconst MessageSchema = _apolloServerExpress.gql`\n  # ---------------------------------------------------------\n  # Model Objects\n  # ---------------------------------------------------------\n  type Message {\n    id: ID!\n    sender: User!\n    receiver: User!\n    message: String!\n    createdAt: String\n    updateAt: String\n  }\n  # ---------------------------------------------------------\n  # Input Objects\n  # ---------------------------------------------------------\n  input CreateMessageInput {\n    sender: ID!\n    receiver: ID!\n    message: String!\n  }\n  input UpdateMessageSeenInput {\n    sender: ID\n    receiver: ID!\n  }\n  # ---------------------------------------------------------\n  # Return Payloads\n  # ---------------------------------------------------------\n  type MessagePayload {\n    id: ID!\n    receiver: UserPayload\n    sender: UserPayload\n    message: String\n    seen: Boolean\n    createdAt: String\n    isFirstMessage: Boolean\n  }\n  type ConversationsPayload {\n    id: ID!\n    username: String\n    image: String\n    isOnline: Boolean\n    seen: Boolean\n    lastMessage: String\n    lastMessageSender: Boolean\n    lastMessageCreatedAt: String\n  }\n  # ---------------------------------------------------------\n  # Queries\n  # ---------------------------------------------------------\n  extend type Query {\n    # Gets user's messages\n    getMessages(authUserId: ID!, userId: ID!): [MessagePayload]\n    # Gets user's conversations\n    getConversations(authUserId: ID!): [ConversationsPayload]\n  }\n  # ---------------------------------------------------------\n  # Mutations\n  # ---------------------------------------------------------\n  extend type Mutation {\n    # Creates a message\n    createMessage(input: CreateMessageInput!): MessagePayload\n    # Updates message seen values for user\n    updateMessageSeen(input: UpdateMessageSeenInput!): Boolean\n  }\n  # ---------------------------------------------------------\n  # Subscriptions\n  # ---------------------------------------------------------\n  extend type Subscription {\n    # Subscribes to message created event\n    messageCreated(authUserId: ID!, userId: ID!): MessagePayload\n    # Subscribes to new conversation event\n    newConversation: ConversationsPayload\n  }\n`;\nexports.default = MessageSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lc3NhZ2UuanMiXSwibmFtZXMiOlsiTWVzc2FnZVNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTUEsYUFBYSxHQUFHQyx3QkFBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQXpFQTtrQkEyRWVELGEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcc2NoZW1hXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xyXG5cclxuLyoqXHJcbiAqIE1lc3NhZ2Ugc2NoZW1hXHJcbiAqL1xyXG5jb25zdCBNZXNzYWdlU2NoZW1hID0gZ3FsYFxyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBNb2RlbCBPYmplY3RzXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB0eXBlIE1lc3NhZ2Uge1xyXG4gICAgaWQ6IElEIVxyXG4gICAgc2VuZGVyOiBVc2VyIVxyXG4gICAgcmVjZWl2ZXI6IFVzZXIhXHJcbiAgICBtZXNzYWdlOiBTdHJpbmchXHJcbiAgICBjcmVhdGVkQXQ6IFN0cmluZ1xyXG4gICAgdXBkYXRlQXQ6IFN0cmluZ1xyXG4gIH1cclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgSW5wdXQgT2JqZWN0c1xyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgaW5wdXQgQ3JlYXRlTWVzc2FnZUlucHV0IHtcclxuICAgIHNlbmRlcjogSUQhXHJcbiAgICByZWNlaXZlcjogSUQhXHJcbiAgICBtZXNzYWdlOiBTdHJpbmchXHJcbiAgfVxyXG4gIGlucHV0IFVwZGF0ZU1lc3NhZ2VTZWVuSW5wdXQge1xyXG4gICAgc2VuZGVyOiBJRFxyXG4gICAgcmVjZWl2ZXI6IElEIVxyXG4gIH1cclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgUmV0dXJuIFBheWxvYWRzXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB0eXBlIE1lc3NhZ2VQYXlsb2FkIHtcclxuICAgIGlkOiBJRCFcclxuICAgIHJlY2VpdmVyOiBVc2VyUGF5bG9hZFxyXG4gICAgc2VuZGVyOiBVc2VyUGF5bG9hZFxyXG4gICAgbWVzc2FnZTogU3RyaW5nXHJcbiAgICBzZWVuOiBCb29sZWFuXHJcbiAgICBjcmVhdGVkQXQ6IFN0cmluZ1xyXG4gICAgaXNGaXJzdE1lc3NhZ2U6IEJvb2xlYW5cclxuICB9XHJcbiAgdHlwZSBDb252ZXJzYXRpb25zUGF5bG9hZCB7XHJcbiAgICBpZDogSUQhXHJcbiAgICB1c2VybmFtZTogU3RyaW5nXHJcbiAgICBpbWFnZTogU3RyaW5nXHJcbiAgICBpc09ubGluZTogQm9vbGVhblxyXG4gICAgc2VlbjogQm9vbGVhblxyXG4gICAgbGFzdE1lc3NhZ2U6IFN0cmluZ1xyXG4gICAgbGFzdE1lc3NhZ2VTZW5kZXI6IEJvb2xlYW5cclxuICAgIGxhc3RNZXNzYWdlQ3JlYXRlZEF0OiBTdHJpbmdcclxuICB9XHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAjIFF1ZXJpZXNcclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcclxuICAgICMgR2V0cyB1c2VyJ3MgbWVzc2FnZXNcclxuICAgIGdldE1lc3NhZ2VzKGF1dGhVc2VySWQ6IElEISwgdXNlcklkOiBJRCEpOiBbTWVzc2FnZVBheWxvYWRdXHJcbiAgICAjIEdldHMgdXNlcidzIGNvbnZlcnNhdGlvbnNcclxuICAgIGdldENvbnZlcnNhdGlvbnMoYXV0aFVzZXJJZDogSUQhKTogW0NvbnZlcnNhdGlvbnNQYXlsb2FkXVxyXG4gIH1cclxuICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICMgTXV0YXRpb25zXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XHJcbiAgICAjIENyZWF0ZXMgYSBtZXNzYWdlXHJcbiAgICBjcmVhdGVNZXNzYWdlKGlucHV0OiBDcmVhdGVNZXNzYWdlSW5wdXQhKTogTWVzc2FnZVBheWxvYWRcclxuICAgICMgVXBkYXRlcyBtZXNzYWdlIHNlZW4gdmFsdWVzIGZvciB1c2VyXHJcbiAgICB1cGRhdGVNZXNzYWdlU2VlbihpbnB1dDogVXBkYXRlTWVzc2FnZVNlZW5JbnB1dCEpOiBCb29sZWFuXHJcbiAgfVxyXG4gICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgIyBTdWJzY3JpcHRpb25zXHJcbiAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBleHRlbmQgdHlwZSBTdWJzY3JpcHRpb24ge1xyXG4gICAgIyBTdWJzY3JpYmVzIHRvIG1lc3NhZ2UgY3JlYXRlZCBldmVudFxyXG4gICAgbWVzc2FnZUNyZWF0ZWQoYXV0aFVzZXJJZDogSUQhLCB1c2VySWQ6IElEISk6IE1lc3NhZ2VQYXlsb2FkXHJcbiAgICAjIFN1YnNjcmliZXMgdG8gbmV3IGNvbnZlcnNhdGlvbiBldmVudFxyXG4gICAgbmV3Q29udmVyc2F0aW9uOiBDb252ZXJzYXRpb25zUGF5bG9hZFxyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VTY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Message.js"
      ],
      "names": [
        "MessageSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AACA,MAAMA,aAAa,GAAGC,wBAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzEA;kBA2EeD,a",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\r\n\r\n/**\r\n * Message schema\r\n */\r\nconst MessageSchema = gql`\r\n  # ---------------------------------------------------------\r\n  # Model Objects\r\n  # ---------------------------------------------------------\r\n  type Message {\r\n    id: ID!\r\n    sender: User!\r\n    receiver: User!\r\n    message: String!\r\n    createdAt: String\r\n    updateAt: String\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Input Objects\r\n  # ---------------------------------------------------------\r\n  input CreateMessageInput {\r\n    sender: ID!\r\n    receiver: ID!\r\n    message: String!\r\n  }\r\n  input UpdateMessageSeenInput {\r\n    sender: ID\r\n    receiver: ID!\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Return Payloads\r\n  # ---------------------------------------------------------\r\n  type MessagePayload {\r\n    id: ID!\r\n    receiver: UserPayload\r\n    sender: UserPayload\r\n    message: String\r\n    seen: Boolean\r\n    createdAt: String\r\n    isFirstMessage: Boolean\r\n  }\r\n  type ConversationsPayload {\r\n    id: ID!\r\n    username: String\r\n    image: String\r\n    isOnline: Boolean\r\n    seen: Boolean\r\n    lastMessage: String\r\n    lastMessageSender: Boolean\r\n    lastMessageCreatedAt: String\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Queries\r\n  # ---------------------------------------------------------\r\n  extend type Query {\r\n    # Gets user's messages\r\n    getMessages(authUserId: ID!, userId: ID!): [MessagePayload]\r\n    # Gets user's conversations\r\n    getConversations(authUserId: ID!): [ConversationsPayload]\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Mutations\r\n  # ---------------------------------------------------------\r\n  extend type Mutation {\r\n    # Creates a message\r\n    createMessage(input: CreateMessageInput!): MessagePayload\r\n    # Updates message seen values for user\r\n    updateMessageSeen(input: UpdateMessageSeenInput!): Boolean\r\n  }\r\n  # ---------------------------------------------------------\r\n  # Subscriptions\r\n  # ---------------------------------------------------------\r\n  extend type Subscription {\r\n    # Subscribes to message created event\r\n    messageCreated(authUserId: ID!, userId: ID!): MessagePayload\r\n    # Subscribes to new conversation event\r\n    newConversation: ConversationsPayload\r\n  }\r\n`;\r\n\r\nexport default MessageSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1625687187104
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _user = require(\"./user\");\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _post = require(\"./post\");\n\nvar _post2 = _interopRequireDefault(_post);\n\nvar _bookmark = require(\"./bookmark\");\n\nvar _bookmark2 = _interopRequireDefault(_bookmark);\n\nvar _clap = require(\"./clap\");\n\nvar _clap2 = _interopRequireDefault(_clap);\n\nvar _comment = require(\"./comment\");\n\nvar _comment2 = _interopRequireDefault(_comment);\n\nvar _notification = require(\"./notification\");\n\nvar _notification2 = _interopRequireDefault(_notification);\n\nvar _message = require(\"./message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import upvoteResolver from \"./upvote\";\n//import downvoteResolver from \"./downvote\";\nexports.default = [_user2.default, _post2.default, _clap2.default, _bookmark2.default, _comment2.default, _notification2.default, _message2.default];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInVzZXJSZXNvbHZlciIsInBvc3RSZXNvbHZlciIsImNsYXBSZXNvbHZlciIsImJvb2ttYXJrUmVzb2x2ZXIiLCJjb21tZW50UmVzb2x2ZXIiLCJub3RpZmljYXRpb25SZXNvbHZlciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFHQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFOQTtBQUNBO2tCQU9lLENBQ1hBLGNBRFcsRUFFWEMsY0FGVyxFQUdYQyxjQUhXLEVBSVhDLGtCQUpXLEVBS1hDLGlCQUxXLEVBTVhDLHNCQU5XLEVBT1hDLGlCQVBXLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xccmVzb2x2ZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlclJlc29sdmVyIGZyb20gXCIuL3VzZXJcIjtcclxuaW1wb3J0IHBvc3RSZXNvbHZlciBmcm9tICcuL3Bvc3QnO1xyXG4vL2ltcG9ydCB1cHZvdGVSZXNvbHZlciBmcm9tIFwiLi91cHZvdGVcIjtcclxuLy9pbXBvcnQgZG93bnZvdGVSZXNvbHZlciBmcm9tIFwiLi9kb3dudm90ZVwiO1xyXG5pbXBvcnQgYm9va21hcmtSZXNvbHZlciBmcm9tIFwiLi9ib29rbWFya1wiO1xyXG5pbXBvcnQgY2xhcFJlc29sdmVyIGZyb20gXCIuL2NsYXBcIjtcclxuaW1wb3J0IGNvbW1lbnRSZXNvbHZlciBmcm9tIFwiLi9jb21tZW50XCI7XHJcbmltcG9ydCBub3RpZmljYXRpb25SZXNvbHZlciBmcm9tIFwiLi9ub3RpZmljYXRpb25cIjtcclxuaW1wb3J0IG1lc3NhZ2UgZnJvbSBcIi4vbWVzc2FnZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgW1xyXG4gICAgdXNlclJlc29sdmVyLFxyXG4gICAgcG9zdFJlc29sdmVyLFxyXG4gICAgY2xhcFJlc29sdmVyLFxyXG4gICAgYm9va21hcmtSZXNvbHZlcixcclxuICAgIGNvbW1lbnRSZXNvbHZlcixcclxuICAgIG5vdGlmaWNhdGlvblJlc29sdmVyLFxyXG4gICAgbWVzc2FnZVxyXG5dIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "userResolver",
        "postResolver",
        "clapResolver",
        "bookmarkResolver",
        "commentResolver",
        "notificationResolver",
        "message"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AANA;AACA;kBAOe,CACXA,cADW,EAEXC,cAFW,EAGXC,cAHW,EAIXC,kBAJW,EAKXC,iBALW,EAMXC,sBANW,EAOXC,iBAPW,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "import userResolver from \"./user\";\r\nimport postResolver from './post';\r\n//import upvoteResolver from \"./upvote\";\r\n//import downvoteResolver from \"./downvote\";\r\nimport bookmarkResolver from \"./bookmark\";\r\nimport clapResolver from \"./clap\";\r\nimport commentResolver from \"./comment\";\r\nimport notificationResolver from \"./notification\";\r\nimport message from \"./message\";\r\n\r\nexport default [\r\n    userResolver,\r\n    postResolver,\r\n    clapResolver,\r\n    bookmarkResolver,\r\n    commentResolver,\r\n    notificationResolver,\r\n    message\r\n]"
      ]
    },
    "sourceType": "module",
    "mtime": 1626086360468
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\user.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\user.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _bcryptjs = require(\"bcryptjs\");\n\nvar _bcryptjs2 = _interopRequireDefault(_bcryptjs);\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _generateToken = require(\"../utils/generate-token\");\n\nvar _email = require(\"../utils/email\");\n\nvar _apolloServer2 = require(\"../utils/apollo-server\");\n\nvar _Subscriptions = require(\"../../constants/Subscriptions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst AUTH_TOKEN_EXPIRY = '1y';\nconst RESET_PASSWORD_TOKEN_EXPIRY = 3600000;\nconst Query = {\n  /**\r\n   *  get user by ID\r\n   * @param {Id} String  \r\n   */\n  getUser: async (root, {\n    id\n  }, {\n    User\n  }) => {\n    if (!id) {\n      throw new Error('id is not valid');\n    }\n\n    const user = await User.findOne({\n      _id: id\n    }).populate({\n      path: 'posts',\n      populate: [{\n        path: 'author',\n        populate: [{\n          path: 'notifications',\n          populate: [{\n            path: 'author'\n          }, {\n            path: 'clap'\n          }, {\n            path: 'comment'\n          }]\n        }]\n      }, {\n        path: 'comments',\n        populate: {\n          path: 'author'\n        }\n      }, {\n        'path': 'claps'\n      }],\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      }\n    }).populate('claps').populate('bookmarks').populate({\n      path: 'notifications',\n      populate: [{\n        path: 'author'\n      }, {\n        path: 'clap'\n      }, {\n        path: 'comment'\n      }]\n    });\n\n    if (!user) {\n      throw new Error(\"User with given id does not exist\");\n    }\n\n    return user;\n  },\n\n  /**\r\n   * get current logged in user\r\n   */\n  getAuthUser: async (root, args, {\n    authUser,\n    Message,\n    User\n  }) => {\n    if (!authUser) return null; // if user is authenticated , update it's online field to true\n\n    const user = await User.findOneAndUpdate({\n      email: authUser.email\n    }, {\n      isOnline: true\n    }).populate({\n      path: 'posts',\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      }\n    }).populate({\n      path: 'bookmarks',\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      }\n    }).populate('claps').populate({\n      path: 'comments',\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      }\n    }).populate({\n      path: 'notifications',\n      populate: [{\n        path: 'author'\n      }, {\n        path: 'clap',\n        populate: {\n          path: 'post'\n        }\n      }, {\n        path: 'comment',\n        populate: {\n          path: 'post'\n        }\n      }],\n      match: {\n        seen: false\n      }\n    });\n    user.newNotifications = user.notifications; // Find unseen message\n\n    const lastUnseenMessages = await Message.aggregate([{\n      $match: {\n        receiver: _mongoose2.default.Types.ObjectId(authUser.id),\n        seen: false\n      }\n    }, {\n      $sort: {\n        createdAt: -1\n      }\n    }, {\n      $group: {\n        _id: '$sender',\n        doc: {\n          $first: '$$ROOT'\n        }\n      }\n    }, {\n      $replaceRoot: {\n        newRoot: '$doc'\n      }\n    }, {\n      $lookup: {\n        from: 'users',\n        localField: 'sender',\n        foreignField: '_id',\n        as: 'sender'\n      }\n    }]); // Transform data\n\n    const newConversations = [];\n    lastUnseenMessages.map(u => {\n      const user = {\n        id: u.sender[0]._id,\n        username: u.sender[0].username,\n        image: u.sender[0].image,\n        lastMessage: u.message,\n        lastMessageCreatedAt: u.createdAt\n      };\n      newConversations.push(user);\n    }); // Sort Users by last created messages date\n\n    const sortedConversations = newConversations.sort((a, b) => b.lastMessageCreatedAt.toString().localeCompare(a.lastMessageCreatedAt)); // Attach new conversations to auth User\n\n    user.newConversations = sortedConversations;\n    return user;\n  },\n\n  /**\r\n   * Gets user posts by username\r\n   *\r\n   * @param {string} username\r\n   * @param {int} skip how many posts to skip\r\n   * @param {int} limit how many posts to limit\r\n   */\n  getUserPosts: async (root, {\n    username,\n    skip,\n    limit\n  }, {\n    User,\n    Post\n  }) => {\n    const user = await User.findOne({\n      username\n    }).select('_id');\n    const query = {\n      author: user._id\n    };\n    const count = await Post.find(query).countDocuments();\n    const posts = await Post.find(query).populate({\n      path: 'author',\n      populate: [{\n        path: 'notifications',\n        populate: [{\n          path: 'author'\n        }, {\n          path: 'clap'\n        }, {\n          path: 'comment'\n        }]\n      }]\n    }).populate('claps').populate({\n      path: 'comments',\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      },\n      populate: {\n        path: 'author'\n      }\n    }).skip(skip).limit(limit).sort({\n      createdAt: 'desc'\n    });\n    return {\n      posts,\n      count\n    };\n  },\n\n  /**\r\n   * Verifies reset password token\r\n   *\r\n   * @param {string} email\r\n   * @param {string} token\r\n   */\n  verifyResetPasswordToken: async (root, {\n    email,\n    token\n  }, {\n    User\n  }) => {\n    // Check if user exists and token is valid\n    const user = await User.findOne({\n      email,\n      passwordResetToken: token,\n      passwordResetTokenExpiry: {\n        $gte: Date.now() - RESET_PASSWORD_TOKEN_EXPIRY\n      }\n    });\n\n    if (!user) {\n      throw new Error('This token is either invalid or expired!');\n    }\n\n    return {\n      message: 'Success'\n    };\n  }\n};\nconst Mutation = {\n  /**\r\n   * Sign In user\r\n   * \r\n   * @param {string} email\r\n   * @param {string} password\r\n   */\n  signin: async (root, {\n    input: {\n      email,\n      password\n    }\n  }, {\n    User\n  }) => {\n    const user = await User.findOne().or([{\n      email: email\n    }]);\n\n    if (!user) {\n      throw new Error('User not found.');\n    }\n\n    const isValidPassword = await _bcryptjs2.default.compare(password, user.password);\n\n    if (!isValidPassword) {\n      throw new Error('Invalid Password');\n    }\n\n    return {\n      token: (0, _generateToken.generateToken)(user, process.env.SECRET, AUTH_TOKEN_EXPIRY)\n    };\n  },\n\n  /**\r\n   * Sign up user\r\n   * \r\n   * @param {string} username \r\n   * @param {string} email \r\n   * @param {string} password \r\n   */\n  signup: async (root, {\n    input: {\n      username,\n      email,\n      password\n    }\n  }, {\n    User\n  }) => {\n    const user = await User.findOne().or([{\n      email\n    }]);\n\n    if (user) {\n      if (user.email === email) {\n        throw new Error(`User with given ${email} already exists. `);\n      }\n    } // empty type validation\n\n\n    if (!username || !email || !password) {\n      throw new Error('All fields are required');\n    }\n    /* Email Validation\r\n    ------------------------------------------------------------\r\n          Hope that will usefull in future work.\r\n    -------------------------------------------------------------\r\n    */\n\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!emailRegex.test(String(email).toLocaleLowerCase())) {\n      throw new Error('Enter a Valid email address');\n    }\n    /*\r\n    const emailRegex = new RegExp('ac.in','g');\r\n    if (emailRegex.exec(email) == null){\r\n        throw new Error('Please Enter your University Email');  \r\n    }*/\n\n\n    if (username.length <= 3) {\n      throw new Error('username should have 4 characters');\n    }\n\n    const frontEndPages = ['forget-password', 'reset-password', 'explore', 'posts', 'notifications'];\n\n    if (frontEndPages.includes(email)) {\n      throw new Error(\"Please try Valid University email\");\n    }\n\n    if (password.length < 6) {\n      throw new Error('Password min 6 characters.');\n    }\n\n    const newUser = await new User({\n      username,\n      email,\n      password\n    }).save();\n    return {\n      token: (0, _generateToken.generateToken)(newUser, process.env.SECRET, AUTH_TOKEN_EXPIRY)\n    }; //await activateAccount(token);\n  },\n\n  /**\r\n   * Request reset password\r\n   * \r\n   * @param {string} email \r\n   * \r\n   */\n  requestPasswordReset: async (root, {\n    input: {\n      email\n    }\n  }, {\n    User\n  }) => {\n    // check if user exists\n    const user = await User.findOne({\n      email\n    });\n\n    if (!user) {\n      throw new Error(`No such user found with email ${email}`);\n    } // Set password reset token and it's expiry\n\n\n    const token = (0, _generateToken.generateToken)(user, process.env.SECRET, RESET_PASSWORD_TOKEN_EXPIRY);\n    const tokenExpiry = Date.now() + RESET_PASSWORD_TOKEN_EXPIRY;\n    await User.findOneAndUpdate({\n      _id: user.id\n    }, {\n      passwordResetToken: token,\n      passwordResetTokenExpiry: tokenExpiry\n    }, {\n      new: true\n    }); // Email user reset link\n\n    const resetLink = `http://localhost:4000/reset-password?email=${email}&token=${token}`;\n    const mailOptions = {\n      to: email,\n      subject: 'Password Reset',\n      html: resetLink\n    };\n    await (0, _email.sendEmail)(mailOptions); // Return success message\n\n    return {\n      message: `A link to reset your password has been sent to ${email}`\n    };\n  }\n};\nconst Subscription = {\n  /**\r\n   * Subscribes to user's online change event\r\n   */\n  isUserOnline: {\n    subscribe: (0, _apolloServer.withFilter)(() => _apolloServer2.pubSub.asyncIterator(_Subscriptions.IS_USER_ONLINE), (payload, variables, {\n      authUser\n    }) => variables.authUserId === authUser.id)\n  }\n};\n/**\r\n * \r\n */\n\nexports.default = {\n  Query,\n  Mutation,\n  Subscription\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "AUTH_TOKEN_EXPIRY",
        "RESET_PASSWORD_TOKEN_EXPIRY",
        "Query",
        "getUser",
        "root",
        "id",
        "User",
        "Error",
        "user",
        "findOne",
        "_id",
        "populate",
        "path",
        "options",
        "sort",
        "createdAt",
        "getAuthUser",
        "args",
        "authUser",
        "Message",
        "findOneAndUpdate",
        "email",
        "isOnline",
        "match",
        "seen",
        "newNotifications",
        "notifications",
        "lastUnseenMessages",
        "aggregate",
        "$match",
        "receiver",
        "mongoose",
        "Types",
        "ObjectId",
        "$sort",
        "$group",
        "doc",
        "$first",
        "$replaceRoot",
        "newRoot",
        "$lookup",
        "from",
        "localField",
        "foreignField",
        "as",
        "newConversations",
        "map",
        "u",
        "sender",
        "username",
        "image",
        "lastMessage",
        "message",
        "lastMessageCreatedAt",
        "push",
        "sortedConversations",
        "a",
        "b",
        "toString",
        "localeCompare",
        "getUserPosts",
        "skip",
        "limit",
        "Post",
        "select",
        "query",
        "author",
        "count",
        "find",
        "countDocuments",
        "posts",
        "verifyResetPasswordToken",
        "token",
        "passwordResetToken",
        "passwordResetTokenExpiry",
        "$gte",
        "Date",
        "now",
        "Mutation",
        "signin",
        "input",
        "password",
        "or",
        "isValidPassword",
        "bcrypt",
        "compare",
        "process",
        "env",
        "SECRET",
        "signup",
        "emailRegex",
        "test",
        "String",
        "toLocaleLowerCase",
        "length",
        "frontEndPages",
        "includes",
        "newUser",
        "save",
        "requestPasswordReset",
        "tokenExpiry",
        "new",
        "resetLink",
        "mailOptions",
        "to",
        "subject",
        "html",
        "Subscription",
        "isUserOnline",
        "subscribe",
        "pubSub",
        "asyncIterator",
        "IS_USER_ONLINE",
        "payload",
        "variables",
        "authUserId"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "import mongoose from 'mongoose'\r\nimport bcrypt from \"bcryptjs\"\r\nimport { withFilter } from \"apollo-server\";\r\nimport {generateToken} from \"../utils/generate-token\";\r\nimport { sendEmail } from \"../utils/email\";\r\nimport { pubSub } from \"../utils/apollo-server\";\r\n\r\nimport { IS_USER_ONLINE } from \"../../constants/Subscriptions\";\r\n\r\nconst AUTH_TOKEN_EXPIRY = '1y';\r\nconst RESET_PASSWORD_TOKEN_EXPIRY = 3600000;\r\n\r\nconst Query = {\r\n     \r\n    /**\r\n     *  get user by ID\r\n     * @param {Id} String  \r\n     */\r\n    getUser: async(root, { id },{User}) => {\r\n        if (!id){\r\n          throw new Error('id is not valid');\r\n        }\r\n        const user = await User.findOne({ _id: id })\r\n           .populate({\r\n             path: 'posts',\r\n             populate:[\r\n               {\r\n                 path: 'author',\r\n                 populate: [\r\n                    {\r\n                      path: 'notifications',\r\n                      populate: [{path: 'author'}, {path: 'clap'}, {path: 'comment'}],\r\n                    },\r\n                 ],\r\n               },\r\n               { path: 'comments', populate: {path: 'author'} },\r\n               {'path': 'claps'},\r\n             ],  \r\n             options: {sort: { createdAt: 'desc' }}, \r\n           })\r\n           .populate('claps')\r\n           .populate('bookmarks')\r\n           .populate({\r\n             path: 'notifications',\r\n             populate: [{path: 'author'}, {path: 'clap' }, {path: 'comment'} ],\r\n           });\r\n          if (!user){\r\n            throw new Error(\"User with given id does not exist\");\r\n          } \r\n          return user;\r\n    },\r\n    /**\r\n     * get current logged in user\r\n     */\r\n    getAuthUser: async (root, args, { authUser, Message, User }) => {\r\n        if (!authUser) return null;\r\n\r\n        // if user is authenticated , update it's online field to true\r\n        const user = await User.findOneAndUpdate({ email: authUser.email  }, { isOnline: true })\r\n           .populate( { path: 'posts', options: { sort: { createdAt:'desc' } }  })\r\n           .populate({path: 'bookmarks', options: { sort: { createdAt: 'desc' } }})\r\n           .populate('claps')\r\n           .populate({ path: 'comments', options: {sort: { createdAt: 'desc' }} })\r\n           .populate({\r\n               path: 'notifications',\r\n                populate: [\r\n                   {path: 'author'},\r\n                   {path: 'clap', populate: {path: 'post'}},\r\n                   {path : 'comment', populate: {path : 'post'}},\r\n                ],\r\n                match: { seen: false  },\r\n            });\r\n        \r\n        user.newNotifications = user.notifications;\r\n    \r\n        // Find unseen message\r\n        const lastUnseenMessages = await Message.aggregate([\r\n            {\r\n              $match: {\r\n                receiver: mongoose.Types.ObjectId(authUser.id),\r\n                seen: false,\r\n              },\r\n            },\r\n            {\r\n              $sort: { createdAt: -1 },\r\n            },\r\n            {\r\n              $group: {\r\n                _id: '$sender',\r\n                doc: {\r\n                  $first: '$$ROOT',\r\n                },\r\n              },\r\n            },\r\n            { $replaceRoot: { newRoot: '$doc' } },\r\n            {\r\n              $lookup: {\r\n                from: 'users',\r\n                localField: 'sender',\r\n                foreignField: '_id',\r\n                as: 'sender',\r\n              },\r\n            },\r\n          ]);\r\n    // Transform data\r\n    const newConversations = [];\r\n    lastUnseenMessages.map((u) => {\r\n      const user = {\r\n        id: u.sender[0]._id,\r\n        username: u.sender[0].username,\r\n        image: u.sender[0].image,\r\n        lastMessage: u.message,\r\n        lastMessageCreatedAt: u.createdAt,\r\n      };\r\n\r\n      newConversations.push(user);\r\n    });\r\n\r\n    // Sort Users by last created messages date\r\n    const sortedConversations = newConversations.sort((a, b) =>\r\n    b.lastMessageCreatedAt.toString().localeCompare(a.lastMessageCreatedAt)\r\n  );\r\n\r\n  // Attach new conversations to auth User\r\n  user.newConversations = sortedConversations;\r\n\r\n  return user;\r\n  },\r\n  /**\r\n   * Gets user posts by username\r\n   *\r\n   * @param {string} username\r\n   * @param {int} skip how many posts to skip\r\n   * @param {int} limit how many posts to limit\r\n   */\r\n   getUserPosts: async (root, { username, skip, limit }, { User, Post }) => {\r\n    const user = await User.findOne({ username }).select('_id');\r\n\r\n    const query = { author: user._id };\r\n    const count = await Post.find(query).countDocuments();\r\n    const posts = await Post.find(query)\r\n      .populate({\r\n        path: 'author',\r\n        populate: [\r\n          {\r\n            path: 'notifications',\r\n            populate: [{ path: 'author' },{ path: 'clap'},{ path: 'comment' }],\r\n          },\r\n        ],\r\n      })\r\n      .populate('claps')\r\n      .populate({\r\n        path: 'comments',\r\n        options: { sort: { createdAt: 'desc' } },\r\n        populate: { path: 'author' },\r\n      })\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ createdAt: 'desc' });\r\n\r\n    return { posts, count };\r\n  },\r\n  /**\r\n   * Verifies reset password token\r\n   *\r\n   * @param {string} email\r\n   * @param {string} token\r\n   */\r\n   verifyResetPasswordToken: async (root, { email, token }, { User }) => {\r\n    // Check if user exists and token is valid\r\n    const user = await User.findOne({\r\n      email,\r\n      passwordResetToken: token,\r\n      passwordResetTokenExpiry: {\r\n        $gte: Date.now() - RESET_PASSWORD_TOKEN_EXPIRY,\r\n      },\r\n    });\r\n    if (!user) {\r\n      throw new Error('This token is either invalid or expired!');\r\n    }\r\n\r\n    return { message: 'Success' };\r\n  },\r\n};\r\n\r\nconst Mutation = {\r\n    /**\r\n     * Sign In user\r\n     * \r\n     * @param {string} email\r\n     * @param {string} password\r\n     */\r\n\r\n    signin: async (root, { input: { email, password } }, { User }) => {\r\n        const user = await User.findOne().or([{email: email }]);  \r\n        if (!user){\r\n            throw new Error('User not found.');\r\n        }\r\n        const isValidPassword = await bcrypt.compare(password, user.password);\r\n        if (!isValidPassword){\r\n            throw new Error('Invalid Password');\r\n        }\r\n        return {\r\n            token: generateToken(user, process.env.SECRET, AUTH_TOKEN_EXPIRY),   \r\n        };\r\n    },\r\n\r\n    /**\r\n     * Sign up user\r\n     * \r\n     * @param {string} username \r\n     * @param {string} email \r\n     * @param {string} password \r\n     */\r\n    signup: async (root, { input: {username, email, password}}, {User}) => {\r\n        const user=  await User.findOne().or([{ email }]);\r\n\r\n        if (user){\r\n           if (user.email === email){\r\n            throw new Error(`User with given ${email} already exists. `);\r\n          }\r\n        }\r\n          // empty type validation\r\n        if (!username || !email || !password){\r\n            throw new Error('All fields are required');\r\n        }\r\n\r\n        /* Email Validation\r\n        ------------------------------------------------------------\r\n              Hope that will usefull in future work.\r\n        -------------------------------------------------------------\r\n        */\r\n       const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!emailRegex.test(String(email).toLocaleLowerCase())){\r\n            throw new Error('Enter a Valid email address');\r\n        }\r\n        /*\r\n        const emailRegex = new RegExp('ac.in','g');\r\n        if (emailRegex.exec(email) == null){\r\n            throw new Error('Please Enter your University Email');  \r\n        }*/\r\n\r\n        if (username.length <= 3){\r\n            throw new Error('username should have 4 characters'); \r\n        }\r\n\r\n        const frontEndPages =['forget-password', 'reset-password', 'explore','posts','notifications']\r\n        if (frontEndPages.includes(email)){\r\n            throw new Error(\"Please try Valid University email\");\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            throw new Error('Password min 6 characters.');\r\n        }\r\n\r\n        const newUser = await new User({\r\n            username, \r\n            email, \r\n            password,\r\n        }).save();\r\n\r\n        return {\r\n            token: generateToken(newUser, process.env.SECRET, AUTH_TOKEN_EXPIRY),\r\n        };\r\n        //await activateAccount(token);\r\n    },\r\n\r\n    /**\r\n     * Request reset password\r\n     * \r\n     * @param {string} email \r\n     * \r\n     */\r\n    requestPasswordReset: async (root, {input : {email}}, {User}) => {\r\n        // check if user exists\r\n        const user = await User.findOne({ email });\r\n        if (!user){\r\n            throw new Error(`No such user found with email ${email}`)\r\n        }\r\n\r\n        // Set password reset token and it's expiry\r\n        const token = generateToken(user, process.env.SECRET, RESET_PASSWORD_TOKEN_EXPIRY);\r\n        const tokenExpiry = Date.now() + RESET_PASSWORD_TOKEN_EXPIRY;\r\n        await User.findOneAndUpdate(\r\n             { _id: user.id },\r\n             { passwordResetToken: token, passwordResetTokenExpiry: tokenExpiry },\r\n             { new: true }\r\n        );\r\n\r\n        // Email user reset link\r\n        const resetLink = `http://localhost:4000/reset-password?email=${email}&token=${token}`;\r\n        const mailOptions = {\r\n            to: email,\r\n            subject: 'Password Reset',\r\n            html: resetLink,\r\n        };\r\n\r\n        await sendEmail(mailOptions);\r\n\r\n      // Return success message\r\n        return {\r\n            message: `A link to reset your password has been sent to ${email}`,\r\n        };\r\n    },\r\n};\r\n\r\nconst Subscription = {\r\n    /**\r\n     * Subscribes to user's online change event\r\n     */\r\n    isUserOnline: {\r\n        subscribe: withFilter(\r\n            () => pubSub.asyncIterator(IS_USER_ONLINE),\r\n            (payload, variables , {authUser}) => variables.authUserId === authUser.id \r\n        ),\r\n    },\r\n};\r\n/**\r\n * \r\n */\r\n\r\nexport default {Query, Mutation, Subscription}"
      ]
    },
    "sourceType": "module",
    "mtime": 1626158151994
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\generate-token.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\generate-token.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\generate-token.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\generate-token.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
        "sourceFileName": "generate-token.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateToken = undefined;\n\nvar _jsonwebtoken = require(\"jsonwebtoken\");\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Generates a token for user\r\n * \r\n * @param {object} user \r\n * @param {string} secret \r\n * @param {date} expriesIn  \r\n * \r\n */\nconst generateToken = exports.generateToken = (user, secret, expiresIn) => {\n  const {\n    id,\n    username,\n    email\n  } = user;\n  return _jsonwebtoken2.default.sign({\n    id,\n    username,\n    email\n  }, secret, {\n    expiresIn\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlLXRva2VuLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlVG9rZW4iLCJ1c2VyIiwic2VjcmV0IiwiZXhwaXJlc0luIiwiaWQiLCJ1c2VybmFtZSIsImVtYWlsIiwiand0Iiwic2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sTUFBTUEsYUFBYSxXQUFiQSxhQUFhLEdBQUcsQ0FBQ0MsSUFBRCxFQUFPQyxNQUFQLEVBQWVDLFNBQWYsS0FBNkI7QUFDdEQsUUFBTTtBQUFDQyxJQUFBQSxFQUFEO0FBQUtDLElBQUFBLFFBQUw7QUFBZUMsSUFBQUE7QUFBZixNQUF5QkwsSUFBL0I7QUFFQSxTQUFPTSx1QkFBSUMsSUFBSixDQUFTO0FBQUNKLElBQUFBLEVBQUQ7QUFBS0MsSUFBQUEsUUFBTDtBQUFlQyxJQUFBQTtBQUFmLEdBQVQsRUFBZ0NKLE1BQWhDLEVBQXdDO0FBQUNDLElBQUFBO0FBQUQsR0FBeEMsQ0FBUDtBQUNILENBSk0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcdXRpbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAgand0ICBmcm9tIFwianNvbndlYnRva2VuXCJcclxuXHJcbi8qKlxyXG4gKiBHZW5lcmF0ZXMgYSB0b2tlbiBmb3IgdXNlclxyXG4gKiBcclxuICogQHBhcmFtIHtvYmplY3R9IHVzZXIgXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWNyZXQgXHJcbiAqIEBwYXJhbSB7ZGF0ZX0gZXhwcmllc0luICBcclxuICogXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVUb2tlbiA9ICh1c2VyLCBzZWNyZXQsIGV4cGlyZXNJbikgPT4ge1xyXG4gICAgY29uc3Qge2lkLCB1c2VybmFtZSAsZW1haWwgfSA9IHVzZXI7XHJcbiAgIFxyXG4gICAgcmV0dXJuIGp3dC5zaWduKHtpZCwgdXNlcm5hbWUgLGVtYWlsfSwgc2VjcmV0LCB7ZXhwaXJlc0lufSlcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "generate-token.js"
      ],
      "names": [
        "generateToken",
        "user",
        "secret",
        "expiresIn",
        "id",
        "username",
        "email",
        "jwt",
        "sign"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAa,WAAbA,aAAa,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,SAAf,KAA6B;AACtD,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,QAAL;AAAeC,IAAAA;AAAf,MAAyBL,IAA/B;AAEA,SAAOM,uBAAIC,IAAJ,CAAS;AAACJ,IAAAA,EAAD;AAAKC,IAAAA,QAAL;AAAeC,IAAAA;AAAf,GAAT,EAAgCJ,MAAhC,EAAwC;AAACC,IAAAA;AAAD,GAAxC,CAAP;AACH,CAJM",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "sourcesContent": [
        "import  jwt  from \"jsonwebtoken\"\r\n\r\n/**\r\n * Generates a token for user\r\n * \r\n * @param {object} user \r\n * @param {string} secret \r\n * @param {date} expriesIn  \r\n * \r\n */\r\nexport const generateToken = (user, secret, expiresIn) => {\r\n    const {id, username ,email } = user;\r\n   \r\n    return jwt.sign({id, username ,email}, secret, {expiresIn})\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1625747362159
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\email.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\email.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\email.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\email.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
        "sourceFileName": "email.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendEmail = undefined;\n\nvar _nodemailer = require(\"nodemailer\");\n\nvar _nodemailer2 = _interopRequireDefault(_nodemailer);\n\nvar _dotenv = require(\"dotenv\");\n\nvar _dotenv2 = _interopRequireDefault(_dotenv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst {\n  MAIL_SERVICE,\n  MAIL_USER,\n  MAIL_PASS\n} = process.env;\n/**\r\n * Create a transporter object that will help use to send mails\r\n*/\n\nconst transport = _nodemailer2.default.createTransport({\n  // host: '192.168.43.244' ,\n  // port:25,\n  // tls: {\n  //     rejectUnauthorized: false\n  // },\n  // auth: {\n  //     user: MAIL_USER,\n  //     pass: MAIL_PASS,\n  // },\n  host: \"smtp.mailtrap.io\",\n  port: 2525,\n  auth: {\n    user: \"fb64b16c969367\",\n    pass: \"e8fcb9f66311fe\"\n  }\n});\n/**\r\n * Sends an email to User\r\n *\r\n * @param {string} to email address where to send mail\r\n * @param {string} subject of the email\r\n * @param {string} html content for email \r\n */\n\n\nconst sendEmail = exports.sendEmail = ({\n  to,\n  subject,\n  html\n}) => {\n  return new Promise((resolve, reject) => {\n    const mailOptions = {\n      from: MAIL_USER,\n      to,\n      subject,\n      html\n    };\n    return transport.sendMail(mailOptions).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlsLmpzIl0sIm5hbWVzIjpbIk1BSUxfU0VSVklDRSIsIk1BSUxfVVNFUiIsIk1BSUxfUEFTUyIsInByb2Nlc3MiLCJlbnYiLCJ0cmFuc3BvcnQiLCJub2RlbWFpbGVyIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInBvcnQiLCJhdXRoIiwidXNlciIsInBhc3MiLCJzZW5kRW1haWwiLCJ0byIsInN1YmplY3QiLCJodG1sIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJtYWlsT3B0aW9ucyIsImZyb20iLCJzZW5kTWFpbCIsInRoZW4iLCJyZXMiLCJkYXRhIiwiY2F0Y2giLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNO0FBQUVBLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBLFNBQWhCO0FBQTJCQyxFQUFBQTtBQUEzQixJQUF5Q0MsT0FBTyxDQUFDQyxHQUF2RDtBQUVBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQyxTQUFTLEdBQUdDLHFCQUFXQyxlQUFYLENBQTJCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNJQyxFQUFBQSxJQUFJLEVBQUUsa0JBVitCO0FBV3JDQyxFQUFBQSxJQUFJLEVBQUUsSUFYK0I7QUFZckNDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUUsZ0JBREY7QUFFSkMsSUFBQUEsSUFBSSxFQUFFO0FBRkY7QUFaK0IsQ0FBM0IsQ0FBbEI7QUFtQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVPLE1BQU1DLFNBQVMsV0FBVEEsU0FBUyxHQUFHLENBQUM7QUFBRUMsRUFBQUEsRUFBRjtBQUFNQyxFQUFBQSxPQUFOO0FBQWVDLEVBQUFBO0FBQWYsQ0FBRCxLQUEyQjtBQUNoRCxTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDcEMsVUFBTUMsV0FBVyxHQUFHO0FBQUNDLE1BQUFBLElBQUksRUFBRXBCLFNBQVA7QUFBa0JhLE1BQUFBLEVBQWxCO0FBQXNCQyxNQUFBQSxPQUF0QjtBQUErQkMsTUFBQUE7QUFBL0IsS0FBcEI7QUFDQSxXQUFPWCxTQUFTLENBQUNpQixRQUFWLENBQW1CRixXQUFuQixFQUNXRyxJQURYLENBQ2lCQyxHQUFELElBQVM7QUFDWE4sTUFBQUEsT0FBTyxDQUFDTSxHQUFHLENBQUNDLElBQUwsQ0FBUDtBQUNILEtBSFgsRUFJV0MsS0FKWCxDQUlrQkMsR0FBRCxJQUFTO0FBQ1pSLE1BQUFBLE1BQU0sQ0FBQ1EsR0FBRCxDQUFOO0FBQ0gsS0FOWCxDQUFQO0FBT0gsR0FUTSxDQUFQO0FBVUgsQ0FYTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFx1dGlsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XHJcbmltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xyXG5cclxuY29uc3QgeyBNQUlMX1NFUlZJQ0UsIE1BSUxfVVNFUiwgTUFJTF9QQVNTIH0gPSBwcm9jZXNzLmVudjtcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYSB0cmFuc3BvcnRlciBvYmplY3QgdGhhdCB3aWxsIGhlbHAgdXNlIHRvIHNlbmQgbWFpbHNcclxuKi9cclxuXHJcbmNvbnN0IHRyYW5zcG9ydCA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcclxuICAgIC8vIGhvc3Q6ICcxOTIuMTY4LjQzLjI0NCcgLFxyXG4gICAgLy8gcG9ydDoyNSxcclxuICAgIC8vIHRsczoge1xyXG4gICAgLy8gICAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2VcclxuICAgIC8vIH0sXHJcbiAgICAvLyBhdXRoOiB7XHJcbiAgICAvLyAgICAgdXNlcjogTUFJTF9VU0VSLFxyXG4gICAgLy8gICAgIHBhc3M6IE1BSUxfUEFTUyxcclxuICAgIC8vIH0sXHJcbiAgICAgICAgaG9zdDogXCJzbXRwLm1haWx0cmFwLmlvXCIsXHJcbiAgICAgICAgcG9ydDogMjUyNSxcclxuICAgICAgICBhdXRoOiB7XHJcbiAgICAgICAgICB1c2VyOiBcImZiNjRiMTZjOTY5MzY3XCIsXHJcbiAgICAgICAgICBwYXNzOiBcImU4ZmNiOWY2NjMxMWZlXCJcclxuICAgICAgICB9XHJcbn0pO1xyXG5cclxuXHJcbi8qKlxyXG4gKiBTZW5kcyBhbiBlbWFpbCB0byBVc2VyXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0byBlbWFpbCBhZGRyZXNzIHdoZXJlIHRvIHNlbmQgbWFpbFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3ViamVjdCBvZiB0aGUgZW1haWxcclxuICogQHBhcmFtIHtzdHJpbmd9IGh0bWwgY29udGVudCBmb3IgZW1haWwgXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbmRFbWFpbCA9ICh7IHRvLCBzdWJqZWN0LCBodG1sIH0pID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgY29uc3QgbWFpbE9wdGlvbnMgPSB7ZnJvbTogTUFJTF9VU0VSLCB0bywgc3ViamVjdCwgaHRtbH07XHJcbiAgICAgICAgcmV0dXJuIHRyYW5zcG9ydC5zZW5kTWFpbChtYWlsT3B0aW9ucylcclxuICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlcy5kYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "email.js"
      ],
      "names": [
        "MAIL_SERVICE",
        "MAIL_USER",
        "MAIL_PASS",
        "process",
        "env",
        "transport",
        "nodemailer",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass",
        "sendEmail",
        "to",
        "subject",
        "html",
        "Promise",
        "resolve",
        "reject",
        "mailOptions",
        "from",
        "sendMail",
        "then",
        "res",
        "data",
        "catch",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,IAAyCC,OAAO,CAACC,GAAvD;AAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGC,qBAAWC,eAAX,CAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,IAAI,EAAE,kBAV+B;AAWrCC,EAAAA,IAAI,EAAE,IAX+B;AAYrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,gBADF;AAEJC,IAAAA,IAAI,EAAE;AAFF;AAZ+B,CAA3B,CAAlB;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,MAAMC,SAAS,WAATA,SAAS,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAChD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAEpB,SAAP;AAAkBa,MAAAA,EAAlB;AAAsBC,MAAAA,OAAtB;AAA+BC,MAAAA;AAA/B,KAApB;AACA,WAAOX,SAAS,CAACiB,QAAV,CAAmBF,WAAnB,EACWG,IADX,CACiBC,GAAD,IAAS;AACXN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP;AACH,KAHX,EAIWC,KAJX,CAIkBC,GAAD,IAAS;AACZR,MAAAA,MAAM,CAACQ,GAAD,CAAN;AACH,KANX,CAAP;AAOH,GATM,CAAP;AAUH,CAXM",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "sourcesContent": [
        "import nodemailer from 'nodemailer';\r\nimport dotenv from \"dotenv\";\r\n\r\nconst { MAIL_SERVICE, MAIL_USER, MAIL_PASS } = process.env;\r\n\r\n/**\r\n * Create a transporter object that will help use to send mails\r\n*/\r\n\r\nconst transport = nodemailer.createTransport({\r\n    // host: '192.168.43.244' ,\r\n    // port:25,\r\n    // tls: {\r\n    //     rejectUnauthorized: false\r\n    // },\r\n    // auth: {\r\n    //     user: MAIL_USER,\r\n    //     pass: MAIL_PASS,\r\n    // },\r\n        host: \"smtp.mailtrap.io\",\r\n        port: 2525,\r\n        auth: {\r\n          user: \"fb64b16c969367\",\r\n          pass: \"e8fcb9f66311fe\"\r\n        }\r\n});\r\n\r\n\r\n/**\r\n * Sends an email to User\r\n *\r\n * @param {string} to email address where to send mail\r\n * @param {string} subject of the email\r\n * @param {string} html content for email \r\n */\r\n\r\nexport const sendEmail = ({ to, subject, html }) => {\r\n    return new Promise((resolve, reject) => {\r\n        const mailOptions = {from: MAIL_USER, to, subject, html};\r\n        return transport.sendMail(mailOptions)\r\n                         .then((res) => {\r\n                             resolve(res.data);\r\n                         })\r\n                         .catch((err) => {\r\n                             reject(err);\r\n                         });\r\n    });\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1626157360223
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\utils\\\\apollo-server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\apollo-server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\apollo-server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\apollo-server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
        "sourceFileName": "apollo-server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createApolloServer = exports.pubSub = undefined;\n\nvar _jsonwebtoken = require(\"jsonwebtoken\");\n\nvar _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nrequire(\"dotenv/config\");\n\nvar _Subscriptions = require(\"../../constants/Subscriptions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Export pubSub instance for publishing events\nconst pubSub = exports.pubSub = new _apolloServer.PubSub();\n/**\r\n * Checks if client is authenticated by checking authorization key from req headers\r\n *\r\n * @param {obj} req\r\n */\n\n/*\r\nconst checkAuthorization = async(req, res) => {\r\n  const token = req.headers[\"authorization\"]\r\n  if (token == null){\r\n    console.log(res);\r\n    return res.sendStatus(401); \r\n  }\r\n  const authUser = await jwt.verify(token, process.env.SECRET);\r\n  if (authUser){\r\n    return authUser;\r\n  }\r\n  else {\r\n    console.log('Could not authenticate the user! not error in my token thing');\r\n  }\r\n\r\n}*/\n\nconst checkAuthorization = token => {\n  if (token == null) {\n    console.log('Token is fucking null ');\n    return;\n  }\n\n  return new Promise(async (resolve, reject) => {\n    const authUser = await _jsonwebtoken2.default.verify(token, process.env.SECRET); //console.log(token)\n\n    if (authUser) {\n      resolve(authUser);\n    } else {\n      reject(\"Couldn't authenticate user\");\n    }\n  });\n};\n/**\r\n * Creates an Apollo server and identifies if user is authenticated or not\r\n *\r\n * @param {obj} schema GraphQL Schema\r\n * @param {array} resolvers GraphQL Resolvers\r\n * @param {obj} models Mongoose Models\r\n */\n\n\nconst createApolloServer = exports.createApolloServer = (schema, resolvers, models) => {\n  return new _apolloServerExpress.ApolloServer({\n    typeDefs: schema,\n    resolvers,\n    context: async ({\n      req,\n      connection\n    }) => {\n      if (connection) {\n        return connection.context;\n      }\n\n      let authUser;\n\n      if (req.headers.authorization !== 'null') {\n        const user = await checkAuthorization(req.headers['authorization']);\n\n        if (user) {\n          authUser = user;\n        }\n      }\n\n      return Object.assign({\n        authUser\n      }, models);\n    },\n    subscriptions: {\n      onConnect: async (connectionParams, webSocket) => {\n        // Check if user is authenticated\n        if (connectionParams.authorization) {\n          const user = await checkAuthorization(connectionParams.authorization); // Publish user isOnline true\n\n          pubSub.publish(_Subscriptions.IS_USER_ONLINE, {\n            isUserOnline: {\n              userId: user.id,\n              isOnline: true\n            }\n          }); // Add authUser to socket's context, so we have access to it, in onDisconnect method\n\n          return {\n            authUser: user\n          };\n        }\n      },\n      onDisconnect: async (webSocket, context) => {\n        // Get socket's context\n        const c = await context.initPromise;\n\n        if (c && c.authUser) {\n          // Publish user isOnline false\n          pubSub.publish(_Subscriptions.IS_USER_ONLINE, {\n            isUserOnline: {\n              userId: c.authUser.id,\n              isOnline: false\n            }\n          }); // Update user isOnline to false in DB\n\n          await models.User.findOneAndUpdate({\n            email: c.authUser.email\n          }, {\n            isOnline: false\n          });\n        }\n      }\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "apollo-server.js"
      ],
      "names": [
        "pubSub",
        "PubSub",
        "checkAuthorization",
        "token",
        "console",
        "log",
        "Promise",
        "resolve",
        "reject",
        "authUser",
        "jwt",
        "verify",
        "process",
        "env",
        "SECRET",
        "createApolloServer",
        "schema",
        "resolvers",
        "models",
        "ApolloServer",
        "typeDefs",
        "context",
        "req",
        "connection",
        "headers",
        "authorization",
        "user",
        "Object",
        "assign",
        "subscriptions",
        "onConnect",
        "connectionParams",
        "webSocket",
        "publish",
        "IS_USER_ONLINE",
        "isUserOnline",
        "userId",
        "id",
        "isOnline",
        "onDisconnect",
        "c",
        "initPromise",
        "User",
        "findOneAndUpdate",
        "email"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\utils\\",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\r\nimport { ApolloServer } from 'apollo-server-express';\r\nimport { PubSub } from 'apollo-server';\r\nimport {} from \"dotenv/config\"\r\nimport { IS_USER_ONLINE } from '../../constants/Subscriptions';\r\n\r\n// Export pubSub instance for publishing events\r\nexport const pubSub = new PubSub();\r\n\r\n\r\n\r\n/**\r\n * Checks if client is authenticated by checking authorization key from req headers\r\n *\r\n * @param {obj} req\r\n */\r\n\r\n/*\r\nconst checkAuthorization = async(req, res) => {\r\n  const token = req.headers[\"authorization\"]\r\n  if (token == null){\r\n    console.log(res);\r\n    return res.sendStatus(401); \r\n  }\r\n  const authUser = await jwt.verify(token, process.env.SECRET);\r\n  if (authUser){\r\n    return authUser;\r\n  }\r\n  else {\r\n    console.log('Could not authenticate the user! not error in my token thing');\r\n  }\r\n\r\n}*/\r\n\r\n\r\nconst checkAuthorization = (token) => {\r\n  if (token==null) {\r\n    console.log('Token is fucking null ');\r\n    return;\r\n  } \r\n  return new Promise(async (resolve, reject) => {\r\n    \r\n    const authUser = await jwt.verify(token,process.env.SECRET);\r\n    \r\n    //console.log(token)\r\n    if (authUser) {\r\n      resolve(authUser);\r\n    } else {\r\n      reject(\"Couldn't authenticate user\");\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates an Apollo server and identifies if user is authenticated or not\r\n *\r\n * @param {obj} schema GraphQL Schema\r\n * @param {array} resolvers GraphQL Resolvers\r\n * @param {obj} models Mongoose Models\r\n */\r\nexport const createApolloServer = (schema, resolvers, models) => {\r\n  return new ApolloServer({\r\n    typeDefs: schema,\r\n    resolvers,\r\n    context: async ({ req, connection }) => {\r\n      if (connection) {\r\n        return connection.context;\r\n      }\r\n\r\n      let authUser;\r\n      if (req.headers.authorization !== 'null') {\r\n        const user = await checkAuthorization(req.headers['authorization']);\r\n        if (user) {\r\n          authUser = user;\r\n        }\r\n      }\r\n\r\n      return Object.assign({ authUser }, models);\r\n    },\r\n    subscriptions: {\r\n      onConnect: async (connectionParams, webSocket) => {\r\n        // Check if user is authenticated\r\n        if (connectionParams.authorization) {\r\n          const user = await checkAuthorization(connectionParams.authorization);\r\n\r\n          // Publish user isOnline true\r\n          pubSub.publish(IS_USER_ONLINE, {\r\n            isUserOnline: {\r\n              userId: user.id,\r\n              isOnline: true,\r\n            },\r\n          });\r\n\r\n          // Add authUser to socket's context, so we have access to it, in onDisconnect method\r\n          return {\r\n            authUser: user,\r\n          };\r\n        }\r\n      },\r\n      onDisconnect: async (webSocket, context) => {\r\n        // Get socket's context\r\n        const c = await context.initPromise;\r\n        if (c && c.authUser) {\r\n          // Publish user isOnline false\r\n          pubSub.publish(IS_USER_ONLINE, {\r\n            isUserOnline: {\r\n              userId: c.authUser.id,\r\n              isOnline: false,\r\n            },\r\n          });\r\n\r\n          // Update user isOnline to false in DB\r\n          await models.User.findOneAndUpdate(\r\n            { email: c.authUser.email },\r\n            {\r\n              isOnline: false,\r\n            }\r\n          );\r\n        }\r\n      },\r\n    },\r\n  });\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1625879789114
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\constants\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\constants\\\\Subscriptions.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
        "sourceFileName": "Subscriptions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst MESSAGE_CREATED = exports.MESSAGE_CREATED = 'MESSAGE_CREATED';\nconst IS_USER_ONLINE = exports.IS_USER_ONLINE = 'IS_USER_ONLINE';\nconst NEW_CONVERSATION = exports.NEW_CONVERSATION = 'NEW_CONVERSATION';\nconst NOTIFICATION_CREATED_OR_DELETED = exports.NOTIFICATION_CREATED_OR_DELETED = 'NOTIFICATION_CREATED_OR_DELETED';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YnNjcmlwdGlvbnMuanMiXSwibmFtZXMiOlsiTUVTU0FHRV9DUkVBVEVEIiwiSVNfVVNFUl9PTkxJTkUiLCJORVdfQ09OVkVSU0FUSU9OIiwiTk9USUZJQ0FUSU9OX0NSRUFURURfT1JfREVMRVRFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxlQUFlLFdBQWZBLGVBQWUsR0FBRyxpQkFBeEI7QUFFQSxNQUFNQyxjQUFjLFdBQWRBLGNBQWMsR0FBRyxnQkFBdkI7QUFFQSxNQUFNQyxnQkFBZ0IsV0FBaEJBLGdCQUFnQixHQUFHLGtCQUF6QjtBQUVBLE1BQU1DLCtCQUErQixXQUEvQkEsK0JBQStCLEdBQUcsaUNBQXhDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxjb25zdGFudHNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBNRVNTQUdFX0NSRUFURUQgPSAnTUVTU0FHRV9DUkVBVEVEJztcclxuXHJcbmV4cG9ydCBjb25zdCBJU19VU0VSX09OTElORSA9ICdJU19VU0VSX09OTElORSc7XHJcblxyXG5leHBvcnQgY29uc3QgTkVXX0NPTlZFUlNBVElPTiA9ICdORVdfQ09OVkVSU0FUSU9OJztcclxuXHJcbmV4cG9ydCBjb25zdCBOT1RJRklDQVRJT05fQ1JFQVRFRF9PUl9ERUxFVEVEID0gJ05PVElGSUNBVElPTl9DUkVBVEVEX09SX0RFTEVURUQnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Subscriptions.js"
      ],
      "names": [
        "MESSAGE_CREATED",
        "IS_USER_ONLINE",
        "NEW_CONVERSATION",
        "NOTIFICATION_CREATED_OR_DELETED"
      ],
      "mappings": ";;;;;AAAO,MAAMA,eAAe,WAAfA,eAAe,GAAG,iBAAxB;AAEA,MAAMC,cAAc,WAAdA,cAAc,GAAG,gBAAvB;AAEA,MAAMC,gBAAgB,WAAhBA,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,+BAA+B,WAA/BA,+BAA+B,GAAG,iCAAxC",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
      "sourcesContent": [
        "export const MESSAGE_CREATED = 'MESSAGE_CREATED';\r\n\r\nexport const IS_USER_ONLINE = 'IS_USER_ONLINE';\r\n\r\nexport const NEW_CONVERSATION = 'NEW_CONVERSATION';\r\n\r\nexport const NOTIFICATION_CREATED_OR_DELETED = 'NOTIFICATION_CREATED_OR_DELETED';"
      ]
    },
    "sourceType": "module",
    "mtime": 1625708246150
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\post.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\post.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\post.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "post.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Query = {\n  /**\r\n   * Gets all posts\r\n   *\r\n   * @param {string} authUserId\r\n   * @param {int} skip how many posts to skip\r\n   * @param {int} limit how many posts to limit\r\n   */\n  getPosts: async (root, {\n    authUserId,\n    skip,\n    limit\n  }, {\n    Post\n  }) => {\n    const query = {\n      $and: [{\n        image: {\n          $ne: null\n        }\n      }, {\n        author: {\n          $ne: authUserId\n        }\n      }]\n    };\n    const postsCount = await Post.find(query).countDocuments();\n    const allPosts = await Post.find(query).populate({\n      path: 'author',\n      populate: [{\n        path: 'notifications',\n        populate: [{\n          path: 'author'\n        }, {\n          path: 'clap'\n        }, {\n          path: 'comment'\n        }]\n      }]\n    }).populate('claps').populate({\n      path: 'comments',\n      options: {\n        sort: {\n          createdAt: 'desc'\n        }\n      },\n      populate: [{\n        path: 'author'\n      }, {\n        path: 'clap'\n      }, {\n        path: 'comments'\n      }]\n    }).skip(skip).limit(limit).sort({\n      createdAt: 'desc'\n    });\n    return {\n      posts: allPosts,\n      count: postsCount\n    };\n  },\n\n  /**\r\n    * Gets posts by id \r\n  */\n  getPost: async (root, {\n    id\n  }, {\n    Post\n  }) => {\n    const post = await Post.findById(id).populate({\n      path: 'author',\n      populate: [{\n        path: 'notifications',\n        populate: [{\n          path: 'author'\n        }, {\n          path: 'clap'\n        }, {\n          path: 'comment'\n        }]\n      }]\n    }).populate('claps').populate({\n      path: 'comments',\n      options: {\n        sort: {\n          createdAt: -1\n        }\n      },\n      populate: [{\n        path: 'author'\n      }, {\n        path: 'clap'\n      }, {\n        path: 'comments'\n      }]\n    });\n    return post;\n  }\n};\nconst Mutation = {\n  /**\r\n   * Creates a new post \r\n   * \r\n   * @param {string} title \r\n   * @param {string} description \r\n   * @param {string} authorId \r\n   */\n  createPost: async (root, {\n    input: {\n      title,\n      description,\n      authorId\n    }\n  }, {\n    Post,\n    User\n  }) => {\n    if (!title) {\n      throw new Error(\"Can't Start a Dicussion without  title \");\n    }\n\n    if (!description) {\n      throw new Error(\"Can't Start a Discussion without Description \");\n    }\n\n    const newPost = await new Post({\n      title,\n      description,\n      author: authorId\n    }).save();\n    await User.findOneAndUpdate({\n      _id: authorId\n    }, {\n      $push: {\n        posts: newPost.id\n      }\n    });\n    return newPost;\n  },\n\n  /**\r\n   * Deletes a user post\r\n   * \r\n   * @param {string} id \r\n   */\n  deletePost: async (root, {\n    input: {\n      id\n    }\n  }, {\n    User,\n    Post,\n    Clap,\n    Notification,\n    Comment\n  }) => {\n    // Find post and remove it \n    const post = await Post.findByIdAndRemove(id); // Delete post from author ( users ) posts collection\n\n    await User.findOneAndUpdate({\n      _id: post.author\n    }, {\n      $pull: {\n        posts: post.id\n      }\n    }); // Delete post claps from claps collection\n\n    await Clap.find({\n      post: post.id\n    }).deleteMany(); // Delete post claps from users collection\n\n    post.claps.map(async clapId => {\n      await User.where({\n        claps: clapId\n      }).update({\n        $pull: {\n          claps: clapId\n        }\n      });\n    }); // Delete post comments from comments collection\n\n    await Comment.find({\n      post: post.id\n    }).deleteMany(); // Delete post comments from user collection\n\n    post.comments.map(async commentId => {\n      await User.where({\n        comments: commentId\n      }).update({\n        $pull: {\n          comments: commentId\n        }\n      });\n    }); // Find user notification in users collection and remove them \n\n    const userNotifications = await Notification.find({\n      post: post.id\n    });\n    userNotifications.map(async notification => {\n      await User.where({\n        notifications: notification.id\n      }).update({\n        $pull: {\n          notifications: notification.id\n        }\n      });\n    }); // remove notifications from notifications collection \n\n    await Notification.find({\n      post: post.id\n    }).deleteMany();\n    return post;\n  }\n};\nexports.default = {\n  Query,\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "post.js"
      ],
      "names": [
        "Query",
        "getPosts",
        "root",
        "authUserId",
        "skip",
        "limit",
        "Post",
        "query",
        "$and",
        "image",
        "$ne",
        "author",
        "postsCount",
        "find",
        "countDocuments",
        "allPosts",
        "populate",
        "path",
        "options",
        "sort",
        "createdAt",
        "posts",
        "count",
        "getPost",
        "id",
        "post",
        "findById",
        "Mutation",
        "createPost",
        "input",
        "title",
        "description",
        "authorId",
        "User",
        "Error",
        "newPost",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "deletePost",
        "Clap",
        "Notification",
        "Comment",
        "findByIdAndRemove",
        "$pull",
        "deleteMany",
        "claps",
        "map",
        "clapId",
        "where",
        "update",
        "comments",
        "commentId",
        "userNotifications",
        "notification",
        "notifications"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Query = {\r\n    /**\r\n     * Gets all posts\r\n     *\r\n     * @param {string} authUserId\r\n     * @param {int} skip how many posts to skip\r\n     * @param {int} limit how many posts to limit\r\n     */\r\n    \r\n    \r\n    getPosts: async (root, { authUserId, skip, limit }, { Post }) => {\r\n      const query = {\r\n        $and: [{ image: { $ne: null } }, { author: { $ne: authUserId } }],\r\n      };\r\n      const postsCount = await Post.find(query).countDocuments();\r\n      const allPosts = await Post.find(query)\r\n        .populate({\r\n            path: 'author',\r\n            populate: [\r\n                {\r\n                    path : 'notifications',\r\n                    populate: [{path: 'author'}, {path:'clap'} ,{path : 'comment' }]\r\n                },\r\n            ],\r\n        })\r\n        .populate('claps')\r\n        .populate({\r\n            path: 'comments',\r\n            options: { sort: { createdAt:'desc' } },\r\n            populate: [{ path: 'author' },{path: 'clap'}, {path: 'comments'}]\r\n        })\r\n        .skip(skip)\r\n        .limit(limit)\r\n        .sort({ createdAt:'desc' });\r\n    \r\n    return { posts: allPosts, count: postsCount };\r\n    },\r\n\r\n    /**\r\n      * Gets posts by id \r\n    */\r\n   getPost: async (root, { id },{Post}) => {\r\n       const post = await Post.findById(id)\r\n        .populate({\r\n            path:'author',\r\n            populate:[\r\n                {\r\n                    path: 'notifications',\r\n                    populate: [{path: 'author'},{ path: 'clap' } ,{ path: 'comment' }], \r\n                },\r\n            ],\r\n        })\r\n        .populate('claps')\r\n        .populate({\r\n            path: 'comments',\r\n            options: { sort: { createdAt: -1 } },\r\n            populate: [{path: 'author'}, {path: 'clap'}, {path: 'comments'}] \r\n        });\r\n    return post;\r\n    },\r\n};\r\n\r\nconst Mutation = {\r\n    /**\r\n     * Creates a new post \r\n     * \r\n     * @param {string} title \r\n     * @param {string} description \r\n     * @param {string} authorId \r\n     */\r\n    createPost: async (root, { input: {title, description,authorId} }, { Post, User }) => {\r\n        if (!title){\r\n            throw new Error(\"Can't Start a Dicussion without  title \");\r\n        }\r\n        if (!description){\r\n            throw new Error(\"Can't Start a Discussion without Description \");\r\n        }\r\n\r\n        const newPost = await new Post({\r\n            title,\r\n            description,\r\n            author: authorId,\r\n        }).save();\r\n\r\n        await User.findOneAndUpdate({ _id:authorId }, { $push:  { posts: newPost.id } });\r\n        return newPost;\r\n    },\r\n\r\n    /**\r\n     * Deletes a user post\r\n     * \r\n     * @param {string} id \r\n     */\r\n    deletePost: async (root, { input: { id }}, { User, Post , Clap  ,Notification, Comment  } ) => {\r\n        // Find post and remove it \r\n        const post = await Post.findByIdAndRemove(id);\r\n        \r\n        // Delete post from author ( users ) posts collection\r\n        await User.findOneAndUpdate({ _id: post.author }, { $pull: { posts: post.id } })\r\n\r\n        // Delete post claps from claps collection\r\n        await Clap.find({post: post.id}).deleteMany();\r\n        \r\n        // Delete post claps from users collection\r\n        post.claps.map(async (clapId) => {\r\n            await User.where({claps: clapId}).update({ $pull: {claps: clapId} });\r\n        }) \r\n\r\n        // Delete post comments from comments collection\r\n        await Comment.find({ post: post.id  }).deleteMany();\r\n        // Delete post comments from user collection\r\n        post.comments.map(async (commentId) => {\r\n            await User.where({ comments: commentId }).update({\r\n                $pull: { comments: commentId }, \r\n            });\r\n        });\r\n\r\n        // Find user notification in users collection and remove them \r\n        const userNotifications=  await Notification.find({ post: post.id });\r\n\r\n        userNotifications.map( async (notification)=> {\r\n            await User.where({ notifications: notification.id}).update({\r\n                $pull: { notifications: notification.id },\r\n            });\r\n        });\r\n        // remove notifications from notifications collection \r\n        await Notification.find({ post: post.id }).deleteMany();\r\n        \r\n        return post;\r\n    },\r\n};\r\n\r\nexport default { Query, Mutation };"
      ]
    },
    "sourceType": "module",
    "mtime": 1626158531988
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\vote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\vote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\vote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\vote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "vote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Mutation = {\n  /**\r\n   * Create a upvote for post\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} postId\r\n   */\n  UpVote: async (root, {\n    input: {\n      userId,\n      postId\n    }\n  }, {\n    Vote,\n    Post,\n    User\n  }) => {\n    if (!userId && userId === \"\") {\n      throw new Error(\"Can't find User! \");\n    }\n\n    if (!postId && postId === \"\") {\n      throw new Error(\"Can't find Post! \");\n    }\n\n    const upVote = await new Vote({\n      user: userId,\n      post: postId\n    }).save(); // Push vote to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    }); // Push vote to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    });\n    return upVote;\n  },\n\n  /**\r\n   * Deletes a uppost vote\r\n   *\r\n   * @param {string} id\r\n   */\n  DownVote: async (root, {\n    input: {\n      id\n    }\n  }, {\n    Vote,\n    User,\n    Post\n  }) => {\n    const downVote = await Vote.findByIdAndRemove(); // remove one from vote counting\n\n    await Vote.findOneAndUpdate({\n      $inc: {\n        votes: -1\n      }\n    }); // delete upvote from users collection\n\n    await User.findOneAndUpdate({\n      _id: vote.user\n    }, {\n      $pull: {\n        votes: Vote.id\n      }\n    }); // delete upvote from posts collection\n\n    await Post.findByOneAndUpdate({\n      _id: vote.post\n    }, {\n      $pull: {\n        votes: Vote.id\n      }\n    });\n    return downVote;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZvdGUuanMiXSwibmFtZXMiOlsiTXV0YXRpb24iLCJVcFZvdGUiLCJyb290IiwiaW5wdXQiLCJ1c2VySWQiLCJwb3N0SWQiLCJWb3RlIiwiUG9zdCIsIlVzZXIiLCJFcnJvciIsInVwVm90ZSIsInVzZXIiLCJwb3N0Iiwic2F2ZSIsImZpbmRPbmVBbmRVcGRhdGUiLCJfaWQiLCIkcHVzaCIsInVwdm90ZXMiLCJpZCIsIkRvd25Wb3RlIiwiZG93blZvdGUiLCJmaW5kQnlJZEFuZFJlbW92ZSIsIiRpbmMiLCJ2b3RlcyIsInZvdGUiLCIkcHVsbCIsImZpbmRCeU9uZUFuZFVwZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxRQUFRLEdBQUc7QUFDYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSUMsRUFBQUEsTUFBTSxFQUFFLE9BQU9DLElBQVAsRUFBYTtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBRUMsTUFBQUEsTUFBRjtBQUFVQyxNQUFBQTtBQUFWO0FBQVQsR0FBYixFQUE0QztBQUFFQyxJQUFBQSxJQUFGO0FBQU9DLElBQUFBLElBQVA7QUFBYUMsSUFBQUE7QUFBYixHQUE1QyxLQUFvRTtBQUMxRSxRQUFJLENBQUNKLE1BQUQsSUFBV0EsTUFBTSxLQUFHLEVBQXhCLEVBQTJCO0FBQ3pCLFlBQU0sSUFBSUssS0FBSixDQUFVLG1CQUFWLENBQU47QUFDRDs7QUFDRCxRQUFJLENBQUNKLE1BQUQsSUFBV0EsTUFBTSxLQUFHLEVBQXhCLEVBQTJCO0FBQ3pCLFlBQU0sSUFBSUksS0FBSixDQUFVLG1CQUFWLENBQU47QUFDRDs7QUFDRCxVQUFNQyxNQUFNLEdBQUcsTUFBTSxJQUFJSixJQUFKLENBQVM7QUFBRUssTUFBQUEsSUFBSSxFQUFFUCxNQUFSO0FBQWdCUSxNQUFBQSxJQUFJLEVBQUVQO0FBQXRCLEtBQVQsRUFBeUNRLElBQXpDLEVBQXJCLENBUDBFLENBUzFFOztBQUNBLFVBQU1OLElBQUksQ0FBQ08sZ0JBQUwsQ0FBc0I7QUFBRUMsTUFBQUEsR0FBRyxFQUFFVjtBQUFQLEtBQXRCLEVBQXVDO0FBQUVXLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ1E7QUFBbEI7QUFBVCxLQUF2QyxDQUFOLENBVjBFLENBVzFFOztBQUNBLFVBQU1WLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBRUMsTUFBQUEsR0FBRyxFQUFFWDtBQUFQLEtBQXRCLEVBQXVDO0FBQUVZLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxPQUFPLEVBQUVQLE1BQU0sQ0FBQ1E7QUFBbEI7QUFBVCxLQUF2QyxDQUFOO0FBRUEsV0FBT1IsTUFBUDtBQUNELEdBdEJZOztBQXVCYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0lTLEVBQUFBLFFBQVEsRUFBRSxPQUFPakIsSUFBUCxFQUFhO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFZSxNQUFBQTtBQUFGO0FBQVQsR0FBYixFQUFnQztBQUFHWixJQUFBQSxJQUFIO0FBQVFFLElBQUFBLElBQVI7QUFBY0QsSUFBQUE7QUFBZCxHQUFoQyxLQUF5RDtBQUNqRSxVQUFNYSxRQUFRLEdBQUcsTUFBT2QsSUFBSSxDQUFDZSxpQkFBTCxFQUF4QixDQURpRSxDQUdqRTs7QUFDQSxVQUFNZixJQUFJLENBQUNRLGdCQUFMLENBQXNCO0FBQUNRLE1BQUFBLElBQUksRUFBRTtBQUFDQyxRQUFBQSxLQUFLLEVBQUcsQ0FBQztBQUFWO0FBQVAsS0FBdEIsQ0FBTixDQUppRSxDQU1qRTs7QUFDQSxVQUFNZixJQUFJLENBQUNNLGdCQUFMLENBQXNCO0FBQUNDLE1BQUFBLEdBQUcsRUFBRVMsSUFBSSxDQUFDYjtBQUFYLEtBQXRCLEVBQXdDO0FBQUNjLE1BQUFBLEtBQUssRUFBRTtBQUFFRixRQUFBQSxLQUFLLEVBQUVqQixJQUFJLENBQUNZO0FBQWQ7QUFBUixLQUF4QyxDQUFOLENBUGlFLENBU2pFOztBQUNBLFVBQU1YLElBQUksQ0FBQ21CLGtCQUFMLENBQXdCO0FBQUNYLE1BQUFBLEdBQUcsRUFBRVMsSUFBSSxDQUFDWjtBQUFYLEtBQXhCLEVBQTBDO0FBQUNhLE1BQUFBLEtBQUssRUFBRTtBQUFFRixRQUFBQSxLQUFLLEVBQUVqQixJQUFJLENBQUNZO0FBQWQ7QUFBUixLQUExQyxDQUFOO0FBRUEsV0FBT0UsUUFBUDtBQUNEO0FBekNZLENBQWpCO2tCQTRDaUI7QUFBRXBCLEVBQUFBO0FBQUYsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE11dGF0aW9uID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSB1cHZvdGUgZm9yIHBvc3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcG9zdElkXHJcbiAgICAgKi9cclxuICAgIFVwVm90ZTogYXN5bmMgKHJvb3QsIHsgaW5wdXQ6IHsgdXNlcklkLCBwb3N0SWQgfSB9LCB7IFZvdGUsUG9zdCwgVXNlciB9KSA9PiB7XHJcbiAgICAgIGlmICghdXNlcklkICYmIHVzZXJJZD09PVwiXCIpe1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGZpbmQgVXNlciEgXCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICghcG9zdElkICYmIHBvc3RJZD09PVwiXCIpe1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGZpbmQgUG9zdCEgXCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IHVwVm90ZSA9IGF3YWl0IG5ldyBWb3RlKHsgdXNlcjogdXNlcklkLCBwb3N0OiBwb3N0SWQgfSkuc2F2ZSgpO1xyXG4gICAgXHJcbiAgICAgIC8vIFB1c2ggdm90ZSB0byBwb3N0IGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgUG9zdC5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBwb3N0SWQgfSwgeyAkcHVzaDogeyB1cHZvdGVzOiB1cFZvdGUuaWQgfSB9KTtcclxuICAgICAgLy8gUHVzaCB2b3RlIHRvIHVzZXIgY29sbGVjdGlvblxyXG4gICAgICBhd2FpdCBVc2VyLmZpbmRPbmVBbmRVcGRhdGUoeyBfaWQ6IHVzZXJJZCB9LCB7ICRwdXNoOiB7IHVwdm90ZXM6IHVwVm90ZS5pZCB9IH0pO1xyXG4gIFxyXG4gICAgICByZXR1cm4gdXBWb3RlO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogRGVsZXRlcyBhIHVwcG9zdCB2b3RlXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkXHJcbiAgICAgKi9cclxuICAgIERvd25Wb3RlOiBhc3luYyAocm9vdCwgeyBpbnB1dDogeyBpZCB9IH0sIHsgIFZvdGUsVXNlciwgUG9zdCB9KSA9PiB7ICBcclxuICAgICAgY29uc3QgZG93blZvdGUgPSBhd2FpdCAgVm90ZS5maW5kQnlJZEFuZFJlbW92ZSgpXHJcbiAgXHJcbiAgICAgIC8vIHJlbW92ZSBvbmUgZnJvbSB2b3RlIGNvdW50aW5nXHJcbiAgICAgIGF3YWl0IFZvdGUuZmluZE9uZUFuZFVwZGF0ZSh7JGluYzoge3ZvdGVzIDogLTF9fSk7XHJcblxyXG4gICAgICAvLyBkZWxldGUgdXB2b3RlIGZyb20gdXNlcnMgY29sbGVjdGlvblxyXG4gICAgICBhd2FpdCBVc2VyLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogdm90ZS51c2VyfSwgeyRwdWxsOiB7IHZvdGVzOiBWb3RlLmlkIH19KTtcclxuXHJcbiAgICAgIC8vIGRlbGV0ZSB1cHZvdGUgZnJvbSBwb3N0cyBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFBvc3QuZmluZEJ5T25lQW5kVXBkYXRlKHtfaWQ6IHZvdGUucG9zdH0sIHskcHVsbDogeyB2b3RlczogVm90ZS5pZCB9fSk7XHJcbiAgXHJcbiAgICAgIHJldHVybiBkb3duVm90ZTtcclxuICAgIH0sXHJcbiAgfTtcclxuICBcclxuICBleHBvcnQgZGVmYXVsdCB7IE11dGF0aW9uIH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "vote.js"
      ],
      "names": [
        "Mutation",
        "UpVote",
        "root",
        "input",
        "userId",
        "postId",
        "Vote",
        "Post",
        "User",
        "Error",
        "upVote",
        "user",
        "post",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "upvotes",
        "id",
        "DownVote",
        "downVote",
        "findByIdAndRemove",
        "$inc",
        "votes",
        "vote",
        "$pull",
        "findByOneAndUpdate"
      ],
      "mappings": ";;;;;AAAA,MAAMA,QAAQ,GAAG;AACb;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,MAAM,EAAE,OAAOC,IAAP,EAAa;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAT,GAAb,EAA4C;AAAEC,IAAAA,IAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,GAA5C,KAAoE;AAC1E,QAAI,CAACJ,MAAD,IAAWA,MAAM,KAAG,EAAxB,EAA2B;AACzB,YAAM,IAAIK,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,QAAI,CAACJ,MAAD,IAAWA,MAAM,KAAG,EAAxB,EAA2B;AACzB,YAAM,IAAII,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,UAAMC,MAAM,GAAG,MAAM,IAAIJ,IAAJ,CAAS;AAAEK,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,IAAI,EAAEP;AAAtB,KAAT,EAAyCQ,IAAzC,EAArB,CAP0E,CAS1E;;AACA,UAAMN,IAAI,CAACO,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEV;AAAP,KAAtB,EAAuC;AAAEW,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEP,MAAM,CAACQ;AAAlB;AAAT,KAAvC,CAAN,CAV0E,CAW1E;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEX;AAAP,KAAtB,EAAuC;AAAEY,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEP,MAAM,CAACQ;AAAlB;AAAT,KAAvC,CAAN;AAEA,WAAOR,MAAP;AACD,GAtBY;;AAuBb;AACJ;AACA;AACA;AACA;AACIS,EAAAA,QAAQ,EAAE,OAAOjB,IAAP,EAAa;AAAEC,IAAAA,KAAK,EAAE;AAAEe,MAAAA;AAAF;AAAT,GAAb,EAAgC;AAAGZ,IAAAA,IAAH;AAAQE,IAAAA,IAAR;AAAcD,IAAAA;AAAd,GAAhC,KAAyD;AACjE,UAAMa,QAAQ,GAAG,MAAOd,IAAI,CAACe,iBAAL,EAAxB,CADiE,CAGjE;;AACA,UAAMf,IAAI,CAACQ,gBAAL,CAAsB;AAACQ,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAG,CAAC;AAAV;AAAP,KAAtB,CAAN,CAJiE,CAMjE;;AACA,UAAMf,IAAI,CAACM,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAES,IAAI,CAACb;AAAX,KAAtB,EAAwC;AAACc,MAAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAEjB,IAAI,CAACY;AAAd;AAAR,KAAxC,CAAN,CAPiE,CASjE;;AACA,UAAMX,IAAI,CAACmB,kBAAL,CAAwB;AAACX,MAAAA,GAAG,EAAES,IAAI,CAACZ;AAAX,KAAxB,EAA0C;AAACa,MAAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAEjB,IAAI,CAACY;AAAd;AAAR,KAA1C,CAAN;AAEA,WAAOE,QAAP;AACD;AAzCY,CAAjB;kBA4CiB;AAAEpB,EAAAA;AAAF,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Mutation = {\r\n    /**\r\n     * Create a upvote for post\r\n     *\r\n     * @param {string} userId\r\n     * @param {string} postId\r\n     */\r\n    UpVote: async (root, { input: { userId, postId } }, { Vote,Post, User }) => {\r\n      if (!userId && userId===\"\"){\r\n        throw new Error(\"Can't find User! \");\r\n      }\r\n      if (!postId && postId===\"\"){\r\n        throw new Error(\"Can't find Post! \");\r\n      }\r\n      const upVote = await new Vote({ user: userId, post: postId }).save();\r\n    \r\n      // Push vote to post collection\r\n      await Post.findOneAndUpdate({ _id: postId }, { $push: { upvotes: upVote.id } });\r\n      // Push vote to user collection\r\n      await User.findOneAndUpdate({ _id: userId }, { $push: { upvotes: upVote.id } });\r\n  \r\n      return upVote;\r\n    },\r\n    /**\r\n     * Deletes a uppost vote\r\n     *\r\n     * @param {string} id\r\n     */\r\n    DownVote: async (root, { input: { id } }, {  Vote,User, Post }) => {  \r\n      const downVote = await  Vote.findByIdAndRemove()\r\n  \r\n      // remove one from vote counting\r\n      await Vote.findOneAndUpdate({$inc: {votes : -1}});\r\n\r\n      // delete upvote from users collection\r\n      await User.findOneAndUpdate({_id: vote.user}, {$pull: { votes: Vote.id }});\r\n\r\n      // delete upvote from posts collection\r\n      await Post.findByOneAndUpdate({_id: vote.post}, {$pull: { votes: Vote.id }});\r\n  \r\n      return downVote;\r\n    },\r\n  };\r\n  \r\n  export default { Mutation };"
      ]
    },
    "sourceType": "module",
    "mtime": 1625977313325
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\comment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\comment.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\comment.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Mutation = {\n  /**\r\n   * Creates a post comment\r\n   * \r\n   * @param {string} comment\r\n   * @param {string} author author id\r\n   * @param {string} postId \r\n   */\n  createComment: async (root, {\n    input: {\n      comment,\n      author,\n      postId\n    }\n  }, {\n    Comment,\n    User,\n    Post\n  }) => {\n    if (!comment) {\n      throw new Error(\"Can't Post a Empty Comment!\");\n    }\n\n    const newComment = await new Comment({\n      comment,\n      author,\n      post: postId\n    }).save(); // Push comment to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        comments: newComment.id\n      }\n    }); // Push comment to user collection\n\n    await User.findOneAndUpdate({\n      _id: author\n    }, {\n      $push: {\n        comments: newComment.id\n      }\n    });\n    return newComment;\n  },\n\n  /**\r\n   * Deletes a post comment\r\n   * \r\n   * @param {string} id \r\n   */\n  deleteComment: async (root, {\n    input: {\n      id\n    }\n  }, {\n    Comment,\n    User,\n    Post\n  }) => {\n    const comment = await Comment.findByIdAndRemove(id); // Delete comment from users collection\n\n    await User.findOneAndUpdate({\n      _id: comment.author\n    }, {\n      $pull: {\n        comments: comment.id\n      }\n    }); // Delete comment from posts collection\n\n    await Post.findOneAndUpdate({\n      _id: comment.post\n    }, {\n      $pull: {\n        comments: comment.id\n      }\n    });\n    return comment;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuanMiXSwibmFtZXMiOlsiTXV0YXRpb24iLCJjcmVhdGVDb21tZW50Iiwicm9vdCIsImlucHV0IiwiY29tbWVudCIsImF1dGhvciIsInBvc3RJZCIsIkNvbW1lbnQiLCJVc2VyIiwiUG9zdCIsIkVycm9yIiwibmV3Q29tbWVudCIsInBvc3QiLCJzYXZlIiwiZmluZE9uZUFuZFVwZGF0ZSIsIl9pZCIsIiRwdXNoIiwiY29tbWVudHMiLCJpZCIsImRlbGV0ZUNvbW1lbnQiLCJmaW5kQnlJZEFuZFJlbW92ZSIsIiRwdWxsIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFFBQVEsR0FBRztBQUNiO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0lDLEVBQUFBLGFBQWEsRUFBRSxPQUFPQyxJQUFQLEVBQWE7QUFBRUMsSUFBQUEsS0FBSyxFQUFHO0FBQUNDLE1BQUFBLE9BQUQ7QUFBVUMsTUFBQUEsTUFBVjtBQUFrQkMsTUFBQUE7QUFBbEI7QUFBVixHQUFiLEVBQW9EO0FBQUNDLElBQUFBLE9BQUQ7QUFBVUMsSUFBQUEsSUFBVjtBQUFnQkMsSUFBQUE7QUFBaEIsR0FBcEQsS0FBOEU7QUFDekYsUUFBSSxDQUFDTCxPQUFMLEVBQWE7QUFDVCxZQUFNLElBQUlNLEtBQUosQ0FBVSw2QkFBVixDQUFOO0FBQ0g7O0FBRUQsVUFBTUMsVUFBVSxHQUFHLE1BQU0sSUFBSUosT0FBSixDQUFZO0FBQ2pDSCxNQUFBQSxPQURpQztBQUVqQ0MsTUFBQUEsTUFGaUM7QUFHakNPLE1BQUFBLElBQUksRUFBRU47QUFIMkIsS0FBWixFQUl0Qk8sSUFKc0IsRUFBekIsQ0FMeUYsQ0FXekY7O0FBQ0EsVUFBTUosSUFBSSxDQUFDSyxnQkFBTCxDQUFzQjtBQUFDQyxNQUFBQSxHQUFHLEVBQUVUO0FBQU4sS0FBdEIsRUFBb0M7QUFBR1UsTUFBQUEsS0FBSyxFQUFFO0FBQUVDLFFBQUFBLFFBQVEsRUFBRU4sVUFBVSxDQUFDTztBQUF2QjtBQUFWLEtBQXBDLENBQU4sQ0FaeUYsQ0FhekY7O0FBQ0EsVUFBTVYsSUFBSSxDQUFDTSxnQkFBTCxDQUFzQjtBQUFFQyxNQUFBQSxHQUFHLEVBQUVWO0FBQVAsS0FBdEIsRUFBcUM7QUFBRVcsTUFBQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLFFBQVEsRUFBRU4sVUFBVSxDQUFDTztBQUF0QjtBQUFULEtBQXJDLENBQU47QUFFQSxXQUFPUCxVQUFQO0FBQ0gsR0F6Qlk7O0FBMkJiO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDSVEsRUFBQUEsYUFBYSxFQUFFLE9BQU9qQixJQUFQLEVBQWE7QUFBQ0MsSUFBQUEsS0FBSyxFQUFHO0FBQUVlLE1BQUFBO0FBQUY7QUFBVCxHQUFiLEVBQStCO0FBQUNYLElBQUFBLE9BQUQ7QUFBVUMsSUFBQUEsSUFBVjtBQUFnQkMsSUFBQUE7QUFBaEIsR0FBL0IsS0FBMEQ7QUFDckUsVUFBTUwsT0FBTyxHQUFHLE1BQU1HLE9BQU8sQ0FBQ2EsaUJBQVIsQ0FBMEJGLEVBQTFCLENBQXRCLENBRHFFLENBR3JFOztBQUNBLFVBQU1WLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBQ0MsTUFBQUEsR0FBRyxFQUFFWCxPQUFPLENBQUNDO0FBQWQsS0FBdEIsRUFBNkM7QUFBRWdCLE1BQUFBLEtBQUssRUFBRTtBQUFDSixRQUFBQSxRQUFRLEVBQUViLE9BQU8sQ0FBQ2M7QUFBbkI7QUFBVCxLQUE3QyxDQUFOLENBSnFFLENBTXJFOztBQUNBLFVBQU1ULElBQUksQ0FBQ0ssZ0JBQUwsQ0FBc0I7QUFBQ0MsTUFBQUEsR0FBRyxFQUFFWCxPQUFPLENBQUNRO0FBQWQsS0FBdEIsRUFBMkM7QUFBRVMsTUFBQUEsS0FBSyxFQUFFO0FBQUVKLFFBQUFBLFFBQVEsRUFBSWIsT0FBTyxDQUFDYztBQUF0QjtBQUFULEtBQTNDLENBQU47QUFFQSxXQUFPZCxPQUFQO0FBQ0g7QUExQ1ksQ0FBakI7a0JBOENlO0FBQUNKLEVBQUFBO0FBQUQsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE11dGF0aW9uID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgcG9zdCBjb21tZW50XHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21tZW50XHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYXV0aG9yIGF1dGhvciBpZFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHBvc3RJZCBcclxuICAgICAqL1xyXG4gICAgY3JlYXRlQ29tbWVudDogYXN5bmMgKHJvb3QsIHsgaW5wdXQgOiB7Y29tbWVudCwgYXV0aG9yLCBwb3N0SWR9IH0sIHtDb21tZW50LCBVc2VyLCBQb3N0fSkgPT4ge1xyXG4gICAgICAgIGlmICghY29tbWVudCl7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbid0IFBvc3QgYSBFbXB0eSBDb21tZW50IVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgbmV3Q29tbWVudCA9IGF3YWl0IG5ldyBDb21tZW50KHtcclxuICAgICAgICAgICAgY29tbWVudCxcclxuICAgICAgICAgICAgYXV0aG9yLFxyXG4gICAgICAgICAgICBwb3N0OiBwb3N0SWQsXHJcbiAgICAgICAgfSkuc2F2ZSgpO1xyXG4gICAgICAgXHJcbiAgICAgICAgLy8gUHVzaCBjb21tZW50IHRvIHBvc3QgY29sbGVjdGlvblxyXG4gICAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiBwb3N0SWR9LHsgICRwdXNoOiB7IGNvbW1lbnRzOiBuZXdDb21tZW50LmlkIH0gfSk7XHJcbiAgICAgICAgLy8gUHVzaCBjb21tZW50IHRvIHVzZXIgY29sbGVjdGlvblxyXG4gICAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogYXV0aG9yfSx7ICRwdXNoOiB7Y29tbWVudHM6IG5ld0NvbW1lbnQuaWR9fSkgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiBuZXdDb21tZW50O1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZXMgYSBwb3N0IGNvbW1lbnRcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkIFxyXG4gICAgICovXHJcbiAgICBkZWxldGVDb21tZW50OiBhc3luYyAocm9vdCwge2lucHV0IDogeyBpZCB9fSwge0NvbW1lbnQsIFVzZXIsIFBvc3QgfSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNvbW1lbnQgPSBhd2FpdCBDb21tZW50LmZpbmRCeUlkQW5kUmVtb3ZlKGlkKTtcclxuXHJcbiAgICAgICAgLy8gRGVsZXRlIGNvbW1lbnQgZnJvbSB1c2VycyBjb2xsZWN0aW9uXHJcbiAgICAgICAgYXdhaXQgVXNlci5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IGNvbW1lbnQuYXV0aG9yfSwgeyAkcHVsbDoge2NvbW1lbnRzOiBjb21tZW50LmlkICAgfSB9KTtcclxuXHJcbiAgICAgICAgLy8gRGVsZXRlIGNvbW1lbnQgZnJvbSBwb3N0cyBjb2xsZWN0aW9uXHJcbiAgICAgICAgYXdhaXQgUG9zdC5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IGNvbW1lbnQucG9zdH0sIHsgJHB1bGw6IHsgY29tbWVudHMgOiAgY29tbWVudC5pZCAgfX0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiBjb21tZW50O1xyXG4gICAgfSxcclxuXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7TXV0YXRpb259OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "comment.js"
      ],
      "names": [
        "Mutation",
        "createComment",
        "root",
        "input",
        "comment",
        "author",
        "postId",
        "Comment",
        "User",
        "Post",
        "Error",
        "newComment",
        "post",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "comments",
        "id",
        "deleteComment",
        "findByIdAndRemove",
        "$pull"
      ],
      "mappings": ";;;;;AAAA,MAAMA,QAAQ,GAAG;AACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,aAAa,EAAE,OAAOC,IAAP,EAAa;AAAEC,IAAAA,KAAK,EAAG;AAACC,MAAAA,OAAD;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA;AAAlB;AAAV,GAAb,EAAoD;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAApD,KAA8E;AACzF,QAAI,CAACL,OAAL,EAAa;AACT,YAAM,IAAIM,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAED,UAAMC,UAAU,GAAG,MAAM,IAAIJ,OAAJ,CAAY;AACjCH,MAAAA,OADiC;AAEjCC,MAAAA,MAFiC;AAGjCO,MAAAA,IAAI,EAAEN;AAH2B,KAAZ,EAItBO,IAJsB,EAAzB,CALyF,CAWzF;;AACA,UAAMJ,IAAI,CAACK,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAET;AAAN,KAAtB,EAAoC;AAAGU,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAEN,UAAU,CAACO;AAAvB;AAAV,KAApC,CAAN,CAZyF,CAazF;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEV;AAAP,KAAtB,EAAqC;AAAEW,MAAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAEN,UAAU,CAACO;AAAtB;AAAT,KAArC,CAAN;AAEA,WAAOP,UAAP;AACH,GAzBY;;AA2Bb;AACJ;AACA;AACA;AACA;AACIQ,EAAAA,aAAa,EAAE,OAAOjB,IAAP,EAAa;AAACC,IAAAA,KAAK,EAAG;AAAEe,MAAAA;AAAF;AAAT,GAAb,EAA+B;AAACX,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAA/B,KAA0D;AACrE,UAAML,OAAO,GAAG,MAAMG,OAAO,CAACa,iBAAR,CAA0BF,EAA1B,CAAtB,CADqE,CAGrE;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEX,OAAO,CAACC;AAAd,KAAtB,EAA6C;AAAEgB,MAAAA,KAAK,EAAE;AAACJ,QAAAA,QAAQ,EAAEb,OAAO,CAACc;AAAnB;AAAT,KAA7C,CAAN,CAJqE,CAMrE;;AACA,UAAMT,IAAI,CAACK,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEX,OAAO,CAACQ;AAAd,KAAtB,EAA2C;AAAES,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,QAAQ,EAAIb,OAAO,CAACc;AAAtB;AAAT,KAA3C,CAAN;AAEA,WAAOd,OAAP;AACH;AA1CY,CAAjB;kBA8Ce;AAACJ,EAAAA;AAAD,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Mutation = {\r\n    /**\r\n     * Creates a post comment\r\n     * \r\n     * @param {string} comment\r\n     * @param {string} author author id\r\n     * @param {string} postId \r\n     */\r\n    createComment: async (root, { input : {comment, author, postId} }, {Comment, User, Post}) => {\r\n        if (!comment){\r\n            throw new Error(\"Can't Post a Empty Comment!\");\r\n        }\r\n        \r\n        const newComment = await new Comment({\r\n            comment,\r\n            author,\r\n            post: postId,\r\n        }).save();\r\n       \r\n        // Push comment to post collection\r\n        await Post.findOneAndUpdate({_id: postId},{  $push: { comments: newComment.id } });\r\n        // Push comment to user collection\r\n        await User.findOneAndUpdate({ _id: author},{ $push: {comments: newComment.id}})  \r\n        \r\n        return newComment;\r\n    },\r\n\r\n    /**\r\n     * Deletes a post comment\r\n     * \r\n     * @param {string} id \r\n     */\r\n    deleteComment: async (root, {input : { id }}, {Comment, User, Post }) => {\r\n        const comment = await Comment.findByIdAndRemove(id);\r\n\r\n        // Delete comment from users collection\r\n        await User.findOneAndUpdate({_id: comment.author}, { $pull: {comments: comment.id   } });\r\n\r\n        // Delete comment from posts collection\r\n        await Post.findOneAndUpdate({_id: comment.post}, { $pull: { comments :  comment.id  }});\r\n        \r\n        return comment;\r\n    },\r\n\r\n};\r\n\r\nexport default {Mutation};"
      ]
    },
    "sourceType": "module",
    "mtime": 1625920998304
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\notification.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\notification.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\notification.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\notification.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "notification.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _apolloServer2 = require(\"../utils/apollo-server\");\n\nvar _Subscriptions = require(\"../../constants/Subscriptions\");\n\nconst Query = {\n  /**\r\n   * Gets notifications for specific user\r\n   *\r\n   * @param {string} userId\r\n   * @param {int} skip how many notifications to skip\r\n   * @param {int} limit how many notifications to limit\r\n   */\n  getUserNotifications: async (root, {\n    userId,\n    skip,\n    limit\n  }, {\n    Notification\n  }) => {\n    const query = {\n      user: userId\n    };\n    const count = await Notification.where(query).populate('author').populate('user').populate({\n      path: 'comment',\n      populate: {\n        path: 'post'\n      }\n    }).populate({\n      path: 'clap',\n      populate: {\n        path: 'post'\n      }\n    }).skip(skip).limit(limit).sort({\n      createdAt: 'desc'\n    });\n    return {\n      notifications,\n      count\n    };\n  }\n};\nconst Mutation = {\n  /**\r\n   * Creates a new notification for user\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} authorId\r\n   * @param {string} postId\r\n   * @param {string} notificationType\r\n   * @param {string} notificationTypeId\r\n   */\n  createNotification: async (root, {\n    input: {\n      userId,\n      authorId,\n      postId,\n      notificationType,\n      notificationTypeId\n    }\n  }, {\n    Notification,\n    User\n  }) => {\n    let newNotification = await new Notification({\n      author: authorId,\n      user: userId,\n      post: postId,\n      [notificationType.toLowerCase()]: notificationTypeId\n    }).save(); // Push notification to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        notifications: newNotification.id\n      }\n    }); // Publish notification created event\n\n    newNotification = await newNotification.populate('author').populate({\n      path: 'comment',\n      populate: {\n        path: 'post'\n      }\n    }).populate({\n      path: 'clap',\n      populate: {\n        path: 'post'\n      }\n    }).execPopulate();\n\n    _apolloServer2.pubSub.publish(_Subscriptions.NOTIFICATION_CREATED_OR_DELETED, {\n      notificationCreatedOrDeleted: {\n        operation: 'CREATE',\n        notification: newNotification\n      }\n    });\n\n    return newNotification;\n  },\n\n  /**\r\n   * Deletes a notification\r\n   *\r\n   * @param {string} id\r\n   */\n  deleteNotification: async (root, {\n    input: {\n      id\n    }\n  }, {\n    Notification,\n    User\n  }) => {\n    let notification = await Notification.findByIdAndRemove(id); // Delete notification from users collection\n\n    await User.findOneAndUpdate({\n      _id: notification.user\n    }, {\n      $pull: {\n        notifications: notification.id\n      }\n    }); // Publish notification deleted event\n\n    notification = await notification.populate('author').populate({\n      path: 'comment',\n      populate: {\n        path: 'post'\n      }\n    }).populate({\n      path: 'clap',\n      populate: {\n        path: 'post'\n      }\n    }).execPopulate();\n\n    _apolloServer2.pubSub.publish(_Subscriptions.NOTIFICATION_CREATED_OR_DELETED, {\n      notificationCreatedOrDeleted: {\n        operation: 'DELETE',\n        notification\n      }\n    });\n\n    return notification;\n  },\n\n  /**\r\n   * Updates notification seen values for user\r\n   *\r\n   * @param {string} userId\r\n   */\n  updateNotificationSeen: async (root, {\n    input: {\n      userId\n    }\n  }, {\n    Notification\n  }) => {\n    try {\n      await Notification.update({\n        user: userId,\n        seen: false\n      }, {\n        seen: true\n      }, {\n        multi: true\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n};\nconst Subscription = {\n  /**\r\n   * Subscribes to notification created or deleted event\r\n   */\n  notificationCreatedOrDeleted: {\n    subscribe: (0, _apolloServer.withFilter)(() => _apolloServer2.pubSub.asyncIterator(_Subscriptions.NOTIFICATION_CREATED_OR_DELETED), (payload, variables, {\n      authUser\n    }) => {\n      const userId = payload.notificationCreatedOrDeleted.notification.user.toString();\n      return authUser && authUser.id === userId;\n    })\n  }\n};\nexports.default = {\n  Query,\n  Mutation,\n  Subscription\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "notification.js"
      ],
      "names": [
        "Query",
        "getUserNotifications",
        "root",
        "userId",
        "skip",
        "limit",
        "Notification",
        "query",
        "user",
        "count",
        "where",
        "populate",
        "path",
        "sort",
        "createdAt",
        "notifications",
        "Mutation",
        "createNotification",
        "input",
        "authorId",
        "postId",
        "notificationType",
        "notificationTypeId",
        "User",
        "newNotification",
        "author",
        "post",
        "toLowerCase",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "id",
        "execPopulate",
        "pubSub",
        "publish",
        "NOTIFICATION_CREATED_OR_DELETED",
        "notificationCreatedOrDeleted",
        "operation",
        "notification",
        "deleteNotification",
        "findByIdAndRemove",
        "$pull",
        "updateNotificationSeen",
        "update",
        "seen",
        "multi",
        "e",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "variables",
        "authUser",
        "toString"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "import { withFilter } from 'apollo-server';\r\nimport { pubSub } from '../utils/apollo-server';\r\nimport { NOTIFICATION_CREATED_OR_DELETED } from '../../constants/Subscriptions';\r\n\r\nconst Query = {\r\n  /**\r\n   * Gets notifications for specific user\r\n   *\r\n   * @param {string} userId\r\n   * @param {int} skip how many notifications to skip\r\n   * @param {int} limit how many notifications to limit\r\n   */\r\n    \r\n  getUserNotifications: async (\r\n    root, \r\n    {userId, skip, limit }, { Notification } ) => {\r\n      const query = { user: userId };\r\n      const count = await Notification.where(query)\r\n        .populate('author')\r\n        .populate('user')\r\n        .populate({\r\n            path: 'comment',\r\n            populate: { path: 'post' }\r\n        })\r\n        .populate({\r\n          path:'clap', populate: {path: 'post'}\r\n        })\r\n        .skip(skip)\r\n        .limit(limit)\r\n        .sort({ createdAt: 'desc' });\r\n    \r\n    return { notifications, count  };     \r\n    },\r\n};\r\n\r\nconst Mutation = {\r\n    /**\r\n     * Creates a new notification for user\r\n     *\r\n     * @param {string} userId\r\n     * @param {string} authorId\r\n     * @param {string} postId\r\n     * @param {string} notificationType\r\n     * @param {string} notificationTypeId\r\n     */\r\n    createNotification: async (\r\n      root,\r\n      { input: { userId, authorId, postId, notificationType, notificationTypeId } },\r\n      { Notification, User }\r\n    ) => {\r\n      let newNotification = await new Notification({\r\n        author: authorId,\r\n        user: userId,\r\n        post: postId,\r\n        [notificationType.toLowerCase()]: notificationTypeId,\r\n      }).save();\r\n  \r\n      // Push notification to user collection\r\n      await User.findOneAndUpdate({ _id: userId }, { $push: { notifications: newNotification.id }});\r\n  \r\n      // Publish notification created event\r\n      newNotification = await newNotification\r\n        .populate('author')\r\n        .populate({ path: 'comment', populate: { path: 'post' }})\r\n        .populate({path:'clap', populate:{path: 'post'}})\r\n        .execPopulate();\r\n      pubSub.publish(NOTIFICATION_CREATED_OR_DELETED, {\r\n        notificationCreatedOrDeleted: {\r\n          operation: 'CREATE',\r\n          notification: newNotification,\r\n        },\r\n      });\r\n      return newNotification;\r\n    },\r\n\r\n    /**\r\n     * Deletes a notification\r\n     *\r\n     * @param {string} id\r\n     */\r\n    \r\n    deleteNotification: async (root, { input: { id } }, { Notification, User }) => {\r\n      let notification = await Notification.findByIdAndRemove(id);\r\n  \r\n      // Delete notification from users collection\r\n      await User.findOneAndUpdate({ _id: notification.user }, { $pull: { notifications: notification.id }});\r\n  \r\n      // Publish notification deleted event\r\n      notification = await notification\r\n        .populate('author')\r\n        .populate({ path: 'comment', populate: { path: 'post' }})\r\n        .populate({ path: 'clap', populate: {path: 'post'}})\r\n        .execPopulate();\r\n      pubSub.publish(NOTIFICATION_CREATED_OR_DELETED, {\r\n        notificationCreatedOrDeleted: {\r\n          operation: 'DELETE',\r\n          notification,\r\n        },\r\n      });\r\n      return notification;\r\n    },\r\n    /**\r\n     * Updates notification seen values for user\r\n     *\r\n     * @param {string} userId\r\n     */\r\n    updateNotificationSeen: async (root, { input: { userId } }, { Notification }) => {\r\n      try {\r\n        await Notification.update({ user: userId, seen: false }, { seen: true }, { multi: true });\r\n        return true;\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    },\r\n  };\r\n  \r\n  const Subscription = {\r\n    /**\r\n     * Subscribes to notification created or deleted event\r\n     */\r\n    notificationCreatedOrDeleted: {\r\n      subscribe: withFilter(\r\n        () => pubSub.asyncIterator(NOTIFICATION_CREATED_OR_DELETED),\r\n        (payload, variables, { authUser }) => {\r\n          const userId = payload.notificationCreatedOrDeleted.notification.user.toString();\r\n          return authUser && authUser.id === userId;\r\n        }\r\n      ),\r\n    },\r\n  };\r\n  \r\nexport default { Query, Mutation, Subscription };"
      ]
    },
    "sourceType": "module",
    "mtime": 1626079491333
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\message.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\message.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\message.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\message.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "message.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _apolloServer2 = require(\"../utils/apollo-server\");\n\nvar _Subscriptions = require(\"../../constants/Subscriptions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Query = {\n  /**\r\n   * Get user's specific conversation\r\n   * \r\n   * @param {string} authUserId\r\n   * @param {string} userId \r\n   */\n  getMessages: async (root, {\n    authUserId,\n    userId\n  }, {\n    Message\n  }) => {\n    const specificMessage = await Message.find().and([{\n      $or: [{\n        sender: authUserId\n      }, {\n        receiver: authUserId\n      }]\n    }, {\n      $or: [{\n        sender: userId\n      }, {\n        receiver: userId\n      }]\n    }]).populate('sender').populate('receiver').sort({\n      updateAt: 'asc'\n    });\n    return specificMessage;\n  },\n\n  /**\r\n  * Get users with whom authUser had a conversation\r\n  *\r\n  * @param {string} authUserId\r\n  */\n  getConversations: async (root, {\n    authUserId\n  }, {\n    User,\n    Message\n  }) => {\n    // Get users with whom authUser had a chat\n    const users = await User.findById(authUserId).populate('messages', 'id username fullName image isOnline'); // Get last messages with wom authUser had a chat\n\n    const lastMessages = await Message.aggregate([{\n      $match: {\n        $or: [{\n          receiver: _mongoose2.default.Types.ObjectId(authUserId)\n        }, {\n          sender: _mongoose2.default.Types.ObjectId(authUserId)\n        }]\n      }\n    }, {\n      $sort: {\n        createdAt: -1\n      }\n    }, {\n      $group: {\n        _id: '$sender',\n        doc: {\n          $first: '$$ROOT'\n        }\n      }\n    }, {\n      $replaceRoot: {\n        newRoot: '$doc'\n      }\n    }]); // Attach message properties to users\n\n    const conversations = [];\n    users.messages.map(u => {\n      const user = {\n        id: u.id,\n        username: u.username,\n        image: u.image,\n        isOnline: u.isOnline\n      };\n      const sender = lastMessages.find(m => u.id === m.sender.toString());\n\n      if (sender) {\n        user.seen = sender.seen;\n        user.lastMessageCreatedAt = sender.createdAt;\n        user.lastMessage = sender.message;\n        user.lastMessageSender = false;\n      } else {\n        const receiver = lastMessages.find(m => u.id === m.receiver.toString());\n\n        if (receiver) {\n          user.seen = receiver.seen;\n          user.lastMessageCreatedAt = receiver.createdAt;\n          user.lastMessage = receiver.message;\n          user.lastMessageSender = true;\n        }\n      }\n\n      conversations.push(user);\n    }); // Sorted users by last created message date\n\n    const sortedConversations = conversations.sort((a, b) => {\n      b.lastMessageCreatedAt.toString().localeCompare(a.lastMessageCreatedAt);\n    });\n    return sortedConversations;\n  }\n};\nconst Mutation = {\n  /**\r\n   * Createa a message\r\n   * \r\n   * @param {string} message \r\n   * @param {string} sender \r\n   * @param {string} receiver \r\n   * \r\n   */\n  createMessage: async (root, {\n    input: {\n      message,\n      sender,\n      receiver\n    }\n  }, {\n    Message,\n    User\n  }) => {\n    let newMessage = await new Message({\n      message,\n      sender,\n      receiver\n    }).save();\n    newMessage = await newMessage.populate('sender').populate('receiver').execPopulate(); // Publish message created event\n\n    _apolloServer2.pubSub.publish(_Subscriptions.MESSAGE_CREATED, {\n      messageCreated: newMessage\n    }); // Check if user already had a conversation\n    // if not their ids to users collection\n\n\n    const senderUser = await User.findById(sender);\n\n    if (!senderUser.messages.includes(receiver)) {\n      await User.findOneAndUpdate({\n        _id: sender\n      }, {\n        $push: {\n          messages: receiver\n        }\n      });\n      await User.findOneAndUpdate({\n        _id: receiver\n      }, {\n        $push: {\n          messages: sender\n        }\n      });\n      newMessage.isFirstMessage = true;\n    } // Publish message created event\n\n\n    _apolloServer2.pubSub.publish(_Subscriptions.NEW_CONVERSATION, {\n      newConversation: {\n        receiverId: receiver,\n        id: senderUser.id,\n        username: senderUser.username,\n        image: senderUser.image,\n        isOnline: senderUser.isOnline,\n        seen: false,\n        lastMessage: newMessage.message,\n        lastMessageSender: false,\n        lastMessageCreatedAt: newMessage.createdAt\n      }\n    });\n\n    return newMessage;\n  },\n\n  /**\r\n   * Updates messages seen values for user \r\n   * \r\n   * @param {string} userId \r\n   */\n  updateMessageSeen: async (root, {\n    input: {\n      sender,\n      receiver\n    }\n  }, {\n    Message\n  }) => {\n    try {\n      await Message.update({\n        receiver,\n        sender,\n        seen: false\n      }, {\n        seen: true\n      }, {\n        multi: true\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n};\nconst Subscription = {\n  /**\r\n   * Subscription to message created event \r\n   */\n  messageCreated: {\n    subscribe: (0, _apolloServer.withFilter)(() => _apolloServer2.pubSub.asyncIterator(_Subscriptions.MESSAGE_CREATED), (payload, variables) => {\n      const {\n        sender,\n        receiver\n      } = payload.messageCreated;\n      const {\n        authUserId,\n        userId\n      } = variables;\n      const isAuthUserSenderOrReceiver = authUserId === sender.id || authUserId === receiver.id;\n      const isUserSenderOrReceiver = userId === sender.id || userId === receiver.id;\n      return isAuthUserSenderOrReceiver && isUserSenderOrReceiver;\n    })\n  },\n\n  /**\r\n   * Subscribe to new conversations event\r\n   */\n  newConversation: {\n    subscribe: (0, _apolloServer.withFilter)(() => _apolloServer2.pubSub.asyncIterator(_Subscriptions.NEW_CONVERSATION), (payload, variables, {\n      authUser\n    }) => authUser && authUser.id === payload.newConversation.receiverId)\n  }\n};\nexports.default = {\n  Mutation,\n  Query,\n  Subscription\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "message.js"
      ],
      "names": [
        "Query",
        "getMessages",
        "root",
        "authUserId",
        "userId",
        "Message",
        "specificMessage",
        "find",
        "and",
        "$or",
        "sender",
        "receiver",
        "populate",
        "sort",
        "updateAt",
        "getConversations",
        "User",
        "users",
        "findById",
        "lastMessages",
        "aggregate",
        "$match",
        "mongoose",
        "Types",
        "ObjectId",
        "$sort",
        "createdAt",
        "$group",
        "_id",
        "doc",
        "$first",
        "$replaceRoot",
        "newRoot",
        "conversations",
        "messages",
        "map",
        "u",
        "user",
        "id",
        "username",
        "image",
        "isOnline",
        "m",
        "toString",
        "seen",
        "lastMessageCreatedAt",
        "lastMessage",
        "message",
        "lastMessageSender",
        "push",
        "sortedConversations",
        "a",
        "b",
        "localeCompare",
        "Mutation",
        "createMessage",
        "input",
        "newMessage",
        "save",
        "execPopulate",
        "pubSub",
        "publish",
        "MESSAGE_CREATED",
        "messageCreated",
        "senderUser",
        "includes",
        "findOneAndUpdate",
        "$push",
        "isFirstMessage",
        "NEW_CONVERSATION",
        "newConversation",
        "receiverId",
        "updateMessageSeen",
        "update",
        "multi",
        "e",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "variables",
        "isAuthUserSenderOrReceiver",
        "isUserSenderOrReceiver",
        "authUser"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport { withFilter } from \"apollo-server\";\r\nimport {pubSub} from \"../utils/apollo-server\";\r\nimport {MESSAGE_CREATED, NEW_CONVERSATION} from \"../../constants/Subscriptions\";\r\n\r\nconst Query = {\r\n  /**\r\n   * Get user's specific conversation\r\n   * \r\n   * @param {string} authUserId\r\n   * @param {string} userId \r\n   */\r\n  getMessages: async ( root , {authUserId, userId},{ Message }) => {\r\n      const specificMessage = await Message.find()\r\n        .and([\r\n            { $or: [{ sender: authUserId }, {receiver: authUserId}] },\r\n            { $or: [{ sender: userId }, { receiver:userId }]},\r\n        ])\r\n        .populate('sender')\r\n        .populate('receiver')\r\n        .sort({ updateAt: 'asc' });\r\n   \r\n     return specificMessage;\r\n    },\r\n     /**\r\n   * Get users with whom authUser had a conversation\r\n   *\r\n   * @param {string} authUserId\r\n   */\r\n  getConversations: async (root, { authUserId }, { User, Message }) => {\r\n    // Get users with whom authUser had a chat\r\n    const users = await User.findById(authUserId).populate('messages', 'id username fullName image isOnline');\r\n\r\n    // Get last messages with wom authUser had a chat\r\n    const lastMessages = await Message.aggregate([\r\n      {\r\n        $match: {\r\n          $or: [\r\n            {\r\n              receiver: mongoose.Types.ObjectId(authUserId),\r\n            },\r\n            {\r\n              sender: mongoose.Types.ObjectId(authUserId),\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        $sort: { createdAt: -1 },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: '$sender',\r\n          doc: {\r\n            $first: '$$ROOT',\r\n          },\r\n        },\r\n      },\r\n      { $replaceRoot: { newRoot: '$doc' } },\r\n    ]);\r\n\r\n    // Attach message properties to users\r\n    const conversations = [];\r\n    users.messages.map((u) => {\r\n      const user = {\r\n        id: u.id,\r\n        username: u.username,\r\n        image: u.image,\r\n        isOnline: u.isOnline,\r\n      };\r\n\r\n      const sender = lastMessages.find((m) => u.id === m.sender.toString());\r\n      if (sender) {\r\n        user.seen = sender.seen;\r\n        user.lastMessageCreatedAt = sender.createdAt;\r\n        user.lastMessage = sender.message;\r\n        user.lastMessageSender = false;\r\n      } else {\r\n        const receiver = lastMessages.find((m) => u.id === m.receiver.toString());\r\n\r\n        if (receiver) {\r\n          user.seen = receiver.seen;\r\n          user.lastMessageCreatedAt = receiver.createdAt;\r\n          user.lastMessage = receiver.message;\r\n          user.lastMessageSender = true;\r\n        }\r\n      }\r\n\r\n      conversations.push(user);\r\n    });\r\n\r\n    // Sorted users by last created message date\r\n    const sortedConversations = conversations.sort((a,b) => {\r\n        b.lastMessageCreatedAt.toString().localeCompare(a.lastMessageCreatedAt)\r\n    });\r\n    \r\n    return sortedConversations;\r\n   },\r\n};\r\n\r\nconst Mutation = {\r\n    /**\r\n     * Createa a message\r\n     * \r\n     * @param {string} message \r\n     * @param {string} sender \r\n     * @param {string} receiver \r\n     * \r\n     */\r\n    createMessage: async (root, {input: {message, sender, receiver}}, {Message, User}) => {\r\n        let newMessage = await new Message({\r\n            message, \r\n            sender, \r\n            receiver\r\n        }).save();\r\n\r\n        newMessage = await newMessage.populate('sender').populate('receiver').execPopulate();\r\n        \r\n        // Publish message created event\r\n        pubSub.publish(MESSAGE_CREATED,{messageCreated: newMessage});\r\n        \r\n        // Check if user already had a conversation\r\n        // if not their ids to users collection\r\n        const senderUser = await User.findById(sender);\r\n        if (!senderUser.messages.includes(receiver)){\r\n            await User.findOneAndUpdate({_id: sender }, { $push: {messages: receiver } });\r\n            await User.findOneAndUpdate({_id: receiver}, { $push: {messages: sender } });\r\n\r\n            newMessage.isFirstMessage = true;\r\n        }\r\n\r\n        // Publish message created event\r\n        pubSub.publish(NEW_CONVERSATION,{\r\n            newConversation: {\r\n                receiverId: receiver,\r\n                id: senderUser.id,\r\n                username: senderUser.username,\r\n                image: senderUser.image,\r\n                isOnline: senderUser.isOnline,\r\n                seen: false,\r\n                lastMessage: newMessage.message,\r\n                lastMessageSender: false,\r\n                lastMessageCreatedAt: newMessage.createdAt, \r\n            },\r\n        });\r\n        return newMessage;\r\n    },\r\n\r\n    /**\r\n     * Updates messages seen values for user \r\n     * \r\n     * @param {string} userId \r\n     */\r\n    updateMessageSeen: async (root, {input: {sender, receiver}}, {Message}) => {\r\n        try {\r\n            await Message.update({receiver, sender, seen: false }, { seen: true }, { multi: true });\r\n            \r\n            return true;\r\n        } catch(e){\r\n            return false;\r\n        }\r\n    },\r\n};\r\n\r\nconst Subscription = {\r\n    /**\r\n     * Subscription to message created event \r\n     */\r\n    messageCreated: {\r\n        subscribe: withFilter(\r\n            () => pubSub.asyncIterator(MESSAGE_CREATED),\r\n            (payload, variables) => {\r\n                const { sender, receiver } = payload.messageCreated;\r\n                const {authUserId, userId} = variables;\r\n\r\n                const isAuthUserSenderOrReceiver = authUserId === sender.id || authUserId === receiver.id;\r\n                const isUserSenderOrReceiver = userId === sender.id || userId === receiver.id;    \r\n            \r\n                return isAuthUserSenderOrReceiver && isUserSenderOrReceiver;\r\n            }\r\n        ),\r\n    },\r\n\r\n    /**\r\n     * Subscribe to new conversations event\r\n     */\r\n    newConversation: {\r\n        subscribe: withFilter(\r\n            () => pubSub.asyncIterator(NEW_CONVERSATION),\r\n            (payload, variables, {authUser }) => authUser && authUser.id === payload.newConversation.receiverId\r\n        ),\r\n    },\r\n};\r\n\r\nexport default { Mutation, Query, Subscription  }\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1625718143710
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\constants\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\constants\\\\Subscriptions.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\Subscriptions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
        "sourceFileName": "Subscriptions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst MESSAGE_CREATED = exports.MESSAGE_CREATED = 'MESSAGE_CREATED';\nconst IS_USER_ONLINE = exports.IS_USER_ONLINE = 'IS_USER_ONLINE';\nconst NEW_CONVERSATION = exports.NEW_CONVERSATION = 'NEW_CONVERSATION';\nconst NOTIFICATION_CREATED_OR_DELETED = exports.NOTIFICATION_CREATED_OR_DELETED = 'NOTIFICATION_CREATED_OR_DELETED';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YnNjcmlwdGlvbnMuanMiXSwibmFtZXMiOlsiTUVTU0FHRV9DUkVBVEVEIiwiSVNfVVNFUl9PTkxJTkUiLCJORVdfQ09OVkVSU0FUSU9OIiwiTk9USUZJQ0FUSU9OX0NSRUFURURfT1JfREVMRVRFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxlQUFlLFdBQWZBLGVBQWUsR0FBRyxpQkFBeEI7QUFFQSxNQUFNQyxjQUFjLFdBQWRBLGNBQWMsR0FBRyxnQkFBdkI7QUFFQSxNQUFNQyxnQkFBZ0IsV0FBaEJBLGdCQUFnQixHQUFHLGtCQUF6QjtBQUVBLE1BQU1DLCtCQUErQixXQUEvQkEsK0JBQStCLEdBQUcsaUNBQXhDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxjb25zdGFudHNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBNRVNTQUdFX0NSRUFURUQgPSAnTUVTU0FHRV9DUkVBVEVEJztcclxuXHJcbmV4cG9ydCBjb25zdCBJU19VU0VSX09OTElORSA9ICdJU19VU0VSX09OTElORSc7XHJcblxyXG5leHBvcnQgY29uc3QgTkVXX0NPTlZFUlNBVElPTiA9ICdORVdfQ09OVkVSU0FUSU9OJztcclxuXHJcbmV4cG9ydCBjb25zdCBOT1RJRklDQVRJT05fQ1JFQVRFRF9PUl9ERUxFVEVEID0gJ05PVElGSUNBVElPTl9DUkVBVEVEX09SX0RFTEVURUQnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Subscriptions.js"
      ],
      "names": [
        "MESSAGE_CREATED",
        "IS_USER_ONLINE",
        "NEW_CONVERSATION",
        "NOTIFICATION_CREATED_OR_DELETED"
      ],
      "mappings": ";;;;;AAAO,MAAMA,eAAe,WAAfA,eAAe,GAAG,iBAAxB;AAEA,MAAMC,cAAc,WAAdA,cAAc,GAAG,gBAAvB;AAEA,MAAMC,gBAAgB,WAAhBA,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,+BAA+B,WAA/BA,+BAA+B,GAAG,iCAAxC",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\constants\\",
      "sourcesContent": [
        "export const MESSAGE_CREATED = 'MESSAGE_CREATED';\r\n\r\nexport const IS_USER_ONLINE = 'IS_USER_ONLINE';\r\n\r\nexport const NEW_CONVERSATION = 'NEW_CONVERSATION';\r\n\r\nexport const NOTIFICATION_CREATED_OR_DELETED = 'NOTIFICATION_CREATED_OR_DELETED';"
      ]
    },
    "sourceType": "module",
    "mtime": 1625708246150
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\UpVote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\UpVote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\UpVote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\UpVote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "UpVote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Vote Schema\r\n */\nconst UpVoteSchema = _apolloServerExpress.gql`\n    #---------------------------\n    # Model Objects\n    #--------------------------\n    type UpVote {\n        id:  ID!\n        post: ID\n        user: ID\n    }\n   \n    #-------------------------------\n    # input Object\n    #-------------------------------\n    input CreateUpVoteInput {\n        userId: ID!\n        postId: ID!\n    }\n    input DeleteUpVoteInput {\n        id: ID!\n    }\n\n    #---------------------------------\n    # Return Payloads\n    #---------------------------------\n    type UpVotePayload {\n        id: ID!\n        user: UserPayload\n        post: PostPayload\n    }\n\n    #----------------------------\n    # Mutations\n    # ---------------------------\n    extend type Mutation{\n        # Creates a vote for post\n        createUpVote(input: CreateUpVoteInput!): UpVote\n\n        # Deletes a post like\n        deleteUpVote(input: DeleteUpVoteInput!): UpVote   \n    }\n\n`;\nexports.default = UpVoteSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVwVm90ZS5qcyJdLCJuYW1lcyI6WyJVcFZvdGVTY2hlbWEiLCJncWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUVBLE1BQU1BLFlBQVksR0FBR0Msd0JBQUk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQXpDQTtrQkEyQ2VELFkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhZGhyaVxcT25lRHJpdmVcXERlc2t0b3BcXHNhcHBcXHNwYW5jZXJcXHNyY1xcc2NoZW1hXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dxbH0gZnJvbSBcImFwb2xsby1zZXJ2ZXItZXhwcmVzc1wiO1xyXG5cclxuLyoqXHJcbiAqIFZvdGUgU2NoZW1hXHJcbiAqL1xyXG5cclxuY29uc3QgVXBWb3RlU2NoZW1hID0gZ3FsYFxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBNb2RlbCBPYmplY3RzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHR5cGUgVXBWb3RlIHtcclxuICAgICAgICBpZDogIElEIVxyXG4gICAgICAgIHBvc3Q6IElEXHJcbiAgICAgICAgdXNlcjogSURcclxuICAgIH1cclxuICAgXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBpbnB1dCBPYmplY3RcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBpbnB1dCBDcmVhdGVVcFZvdGVJbnB1dCB7XHJcbiAgICAgICAgdXNlcklkOiBJRCFcclxuICAgICAgICBwb3N0SWQ6IElEIVxyXG4gICAgfVxyXG4gICAgaW5wdXQgRGVsZXRlVXBWb3RlSW5wdXQge1xyXG4gICAgICAgIGlkOiBJRCFcclxuICAgIH1cclxuXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIFJldHVybiBQYXlsb2Fkc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBVcFZvdGVQYXlsb2FkIHtcclxuICAgICAgICBpZDogSUQhXHJcbiAgICAgICAgdXNlcjogVXNlclBheWxvYWRcclxuICAgICAgICBwb3N0OiBQb3N0UGF5bG9hZFxyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIE11dGF0aW9uc1xyXG4gICAgIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGV4dGVuZCB0eXBlIE11dGF0aW9ue1xyXG4gICAgICAgICMgQ3JlYXRlcyBhIHZvdGUgZm9yIHBvc3RcclxuICAgICAgICBjcmVhdGVVcFZvdGUoaW5wdXQ6IENyZWF0ZVVwVm90ZUlucHV0ISk6IFVwVm90ZVxyXG5cclxuICAgICAgICAjIERlbGV0ZXMgYSBwb3N0IGxpa2VcclxuICAgICAgICBkZWxldGVVcFZvdGUoaW5wdXQ6IERlbGV0ZVVwVm90ZUlucHV0ISk6IFVwVm90ZSAgIFxyXG4gICAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVwVm90ZVNjaGVtYTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "UpVote.js"
      ],
      "names": [
        "UpVoteSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,YAAY,GAAGC,wBAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCA;kBA2CeD,Y",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * Vote Schema\r\n */\r\n\r\nconst UpVoteSchema = gql`\r\n    #---------------------------\r\n    # Model Objects\r\n    #--------------------------\r\n    type UpVote {\r\n        id:  ID!\r\n        post: ID\r\n        user: ID\r\n    }\r\n   \r\n    #-------------------------------\r\n    # input Object\r\n    #-------------------------------\r\n    input CreateUpVoteInput {\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n    input DeleteUpVoteInput {\r\n        id: ID!\r\n    }\r\n\r\n    #---------------------------------\r\n    # Return Payloads\r\n    #---------------------------------\r\n    type UpVotePayload {\r\n        id: ID!\r\n        user: UserPayload\r\n        post: PostPayload\r\n    }\r\n\r\n    #----------------------------\r\n    # Mutations\r\n    # ---------------------------\r\n    extend type Mutation{\r\n        # Creates a vote for post\r\n        createUpVote(input: CreateUpVoteInput!): UpVote\r\n\r\n        # Deletes a post like\r\n        deleteUpVote(input: DeleteUpVoteInput!): UpVote   \r\n    }\r\n\r\n`;\r\n\r\nexport default UpVoteSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1625932064581
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\DownVote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\DownVote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\DownVote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\DownVote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "DownVote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Vote Schema\r\n */\nconst DownVoteSchema = _apolloServerExpress.gql`\n    #---------------------------\n    # Model Objects\n    #--------------------------\n    type DownVote {\n        id:  ID!\n        post: ID\n        user: ID\n    }\n   \n    #-------------------------------\n    # input Object\n    #-------------------------------\n    input CreateDownVoteInput {\n        userId: ID!\n        postId: ID!\n    }\n    input DeleteDownVoteInput {\n        id: ID!\n    }\n\n    #---------------------------------\n    # Return Payloads\n    #---------------------------------\n    type DownVotePayload {\n        id: ID!\n        user: UserPayload\n        post: PostPayload\n    }\n\n    #----------------------------\n    # Mutations\n    # ---------------------------\n    extend type Mutation{\n        # Creates a vote for post\n        createDownVote(input: CreateDownVoteInput!): DownVote\n\n        # Deletes a post like\n        deleteDownVote(input: DeleteDownVoteInput!): DownVote   \n    }\n\n`;\nexports.default = DownVoteSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvd25Wb3RlLmpzIl0sIm5hbWVzIjpbIkRvd25Wb3RlU2NoZW1hIiwiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQSxNQUFNQSxjQUFjLEdBQUdDLHdCQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0F6Q0E7a0JBMkNlRCxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtncWx9IGZyb20gXCJhcG9sbG8tc2VydmVyLWV4cHJlc3NcIjtcclxuXHJcbi8qKlxyXG4gKiBWb3RlIFNjaGVtYVxyXG4gKi9cclxuXHJcbmNvbnN0IERvd25Wb3RlU2NoZW1hID0gZ3FsYFxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBNb2RlbCBPYmplY3RzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHR5cGUgRG93blZvdGUge1xyXG4gICAgICAgIGlkOiAgSUQhXHJcbiAgICAgICAgcG9zdDogSURcclxuICAgICAgICB1c2VyOiBJRFxyXG4gICAgfVxyXG4gICBcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIGlucHV0IE9iamVjdFxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGlucHV0IENyZWF0ZURvd25Wb3RlSW5wdXQge1xyXG4gICAgICAgIHVzZXJJZDogSUQhXHJcbiAgICAgICAgcG9zdElkOiBJRCFcclxuICAgIH1cclxuICAgIGlucHV0IERlbGV0ZURvd25Wb3RlSW5wdXQge1xyXG4gICAgICAgIGlkOiBJRCFcclxuICAgIH1cclxuXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIFJldHVybiBQYXlsb2Fkc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBEb3duVm90ZVBheWxvYWQge1xyXG4gICAgICAgIGlkOiBJRCFcclxuICAgICAgICB1c2VyOiBVc2VyUGF5bG9hZFxyXG4gICAgICAgIHBvc3Q6IFBvc3RQYXlsb2FkXHJcbiAgICB9XHJcblxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICMgTXV0YXRpb25zXHJcbiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgZXh0ZW5kIHR5cGUgTXV0YXRpb257XHJcbiAgICAgICAgIyBDcmVhdGVzIGEgdm90ZSBmb3IgcG9zdFxyXG4gICAgICAgIGNyZWF0ZURvd25Wb3RlKGlucHV0OiBDcmVhdGVEb3duVm90ZUlucHV0ISk6IERvd25Wb3RlXHJcblxyXG4gICAgICAgICMgRGVsZXRlcyBhIHBvc3QgbGlrZVxyXG4gICAgICAgIGRlbGV0ZURvd25Wb3RlKGlucHV0OiBEZWxldGVEb3duVm90ZUlucHV0ISk6IERvd25Wb3RlICAgXHJcbiAgICB9XHJcblxyXG5gO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRG93blZvdGVTY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "DownVote.js"
      ],
      "names": [
        "DownVoteSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,cAAc,GAAGC,wBAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCA;kBA2CeD,c",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * Vote Schema\r\n */\r\n\r\nconst DownVoteSchema = gql`\r\n    #---------------------------\r\n    # Model Objects\r\n    #--------------------------\r\n    type DownVote {\r\n        id:  ID!\r\n        post: ID\r\n        user: ID\r\n    }\r\n   \r\n    #-------------------------------\r\n    # input Object\r\n    #-------------------------------\r\n    input CreateDownVoteInput {\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n    input DeleteDownVoteInput {\r\n        id: ID!\r\n    }\r\n\r\n    #---------------------------------\r\n    # Return Payloads\r\n    #---------------------------------\r\n    type DownVotePayload {\r\n        id: ID!\r\n        user: UserPayload\r\n        post: PostPayload\r\n    }\r\n\r\n    #----------------------------\r\n    # Mutations\r\n    # ---------------------------\r\n    extend type Mutation{\r\n        # Creates a vote for post\r\n        createDownVote(input: CreateDownVoteInput!): DownVote\r\n\r\n        # Deletes a post like\r\n        deleteDownVote(input: DeleteDownVoteInput!): DownVote   \r\n    }\r\n\r\n`;\r\n\r\nexport default DownVoteSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1625932074139
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\upvote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\upvote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\upvote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\upvote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "upvote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Mutation = {\n  /**\r\n   * Create a upvote for post\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} postId\r\n   */\n  createupVote: async (root, {\n    input: {\n      userId,\n      postId\n    }\n  }, {\n    UpVote,\n    Vote,\n    Post,\n    User\n  }) => {\n    const upVote = await new UpVote({\n      user: userId,\n      post: postId\n    }).save(); // Add one to votes counting\n\n    await Vote.findOneAndUpdate({\n      $inc: {\n        votes: 1\n      }\n    }); // Push vote to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    }); // Push vote to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    });\n    return upVote;\n  },\n\n  /**\r\n   * Deletes a uppost vote\r\n   *\r\n   * @param {string} id\r\n   */\n  deleteupVote: async (root, {\n    input: {\n      id\n    }\n  }, {\n    UpVote,\n    DownVote,\n    Vote,\n    User,\n    Post\n  }) => {\n    const upVote = await UpVote.findByIdAndRemove(id);\n    const downVote = await new DownVote({\n      user: userId,\n      post: postId\n    }).save(); // remove one from vote counting\n\n    await Vote.findOneAndUpdate({\n      $inc: {\n        votes: -1\n      }\n    }); // delete upvote from users collection\n\n    await User.findOneAndUpdate({\n      _id: upvote.user\n    }, {\n      $pull: {\n        upvotes: upVote.id\n      }\n    }); // delete upvote from posts collection\n\n    await Post.findByOneAndUpdate({\n      _id: upvote.post\n    }, {\n      $pull: {\n        upvotes: upVote.id\n      }\n    }); // add down  vote from users collection\n\n    await User.findOneAndUpdate({\n      _id: downvote.user\n    }, {\n      $push: {\n        downvotes: downVote.id\n      }\n    }); // add down vote from posts collection\n\n    await Post.findOneAndUpdate({\n      _id: downvote.post\n    }, {\n      $push: {\n        downvotes: downVote.id\n      }\n    });\n    return upVote, downVote;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwdm90ZS5qcyJdLCJuYW1lcyI6WyJNdXRhdGlvbiIsImNyZWF0ZXVwVm90ZSIsInJvb3QiLCJpbnB1dCIsInVzZXJJZCIsInBvc3RJZCIsIlVwVm90ZSIsIlZvdGUiLCJQb3N0IiwiVXNlciIsInVwVm90ZSIsInVzZXIiLCJwb3N0Iiwic2F2ZSIsImZpbmRPbmVBbmRVcGRhdGUiLCIkaW5jIiwidm90ZXMiLCJfaWQiLCIkcHVzaCIsInVwdm90ZXMiLCJpZCIsImRlbGV0ZXVwVm90ZSIsIkRvd25Wb3RlIiwiZmluZEJ5SWRBbmRSZW1vdmUiLCJkb3duVm90ZSIsInVwdm90ZSIsIiRwdWxsIiwiZmluZEJ5T25lQW5kVXBkYXRlIiwiZG93bnZvdGUiLCJkb3dudm90ZXMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsUUFBUSxHQUFHO0FBQ2I7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0lDLEVBQUFBLFlBQVksRUFBRSxPQUFPQyxJQUFQLEVBQWE7QUFBRUMsSUFBQUEsS0FBSyxFQUFFO0FBQUVDLE1BQUFBLE1BQUY7QUFBVUMsTUFBQUE7QUFBVjtBQUFULEdBQWIsRUFBNEM7QUFBRUMsSUFBQUEsTUFBRjtBQUFVQyxJQUFBQSxJQUFWO0FBQWVDLElBQUFBLElBQWY7QUFBcUJDLElBQUFBO0FBQXJCLEdBQTVDLEtBQTRFO0FBQ3hGLFVBQU1DLE1BQU0sR0FBRyxNQUFNLElBQUlKLE1BQUosQ0FBVztBQUFFSyxNQUFBQSxJQUFJLEVBQUVQLE1BQVI7QUFBZ0JRLE1BQUFBLElBQUksRUFBRVA7QUFBdEIsS0FBWCxFQUEyQ1EsSUFBM0MsRUFBckIsQ0FEd0YsQ0FHeEY7O0FBQ0EsVUFBTU4sSUFBSSxDQUFDTyxnQkFBTCxDQUFzQjtBQUFFQyxNQUFBQSxJQUFJLEVBQUU7QUFBQ0MsUUFBQUEsS0FBSyxFQUFFO0FBQVI7QUFBUixLQUF0QixDQUFOLENBSndGLENBTXhGOztBQUNBLFVBQU1SLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBRUcsTUFBQUEsR0FBRyxFQUFFWjtBQUFQLEtBQXRCLEVBQXVDO0FBQUVhLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxPQUFPLEVBQUVULE1BQU0sQ0FBQ1U7QUFBbEI7QUFBVCxLQUF2QyxDQUFOLENBUHdGLENBUXhGOztBQUNBLFVBQU1YLElBQUksQ0FBQ0ssZ0JBQUwsQ0FBc0I7QUFBRUcsTUFBQUEsR0FBRyxFQUFFYjtBQUFQLEtBQXRCLEVBQXVDO0FBQUVjLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxPQUFPLEVBQUVULE1BQU0sQ0FBQ1U7QUFBbEI7QUFBVCxLQUF2QyxDQUFOO0FBRUEsV0FBT1YsTUFBUDtBQUNELEdBbkJZOztBQW9CYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0lXLEVBQUFBLFlBQVksRUFBRSxPQUFPbkIsSUFBUCxFQUFhO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFaUIsTUFBQUE7QUFBRjtBQUFULEdBQWIsRUFBZ0M7QUFBRWQsSUFBQUEsTUFBRjtBQUFTZ0IsSUFBQUEsUUFBVDtBQUFtQmYsSUFBQUEsSUFBbkI7QUFBd0JFLElBQUFBLElBQXhCO0FBQThCRCxJQUFBQTtBQUE5QixHQUFoQyxLQUF5RTtBQUNyRixVQUFNRSxNQUFNLEdBQUcsTUFBTUosTUFBTSxDQUFDaUIsaUJBQVAsQ0FBeUJILEVBQXpCLENBQXJCO0FBQ0EsVUFBTUksUUFBUSxHQUFHLE1BQU0sSUFBSUYsUUFBSixDQUFhO0FBQUNYLE1BQUFBLElBQUksRUFBRVAsTUFBUDtBQUFlUSxNQUFBQSxJQUFJLEVBQUVQO0FBQXJCLEtBQWIsRUFBMkNRLElBQTNDLEVBQXZCLENBRnFGLENBSXJGOztBQUNBLFVBQU1OLElBQUksQ0FBQ08sZ0JBQUwsQ0FBc0I7QUFBQ0MsTUFBQUEsSUFBSSxFQUFFO0FBQUNDLFFBQUFBLEtBQUssRUFBRyxDQUFDO0FBQVY7QUFBUCxLQUF0QixDQUFOLENBTHFGLENBT3JGOztBQUNBLFVBQU1QLElBQUksQ0FBQ0ssZ0JBQUwsQ0FBc0I7QUFBQ0csTUFBQUEsR0FBRyxFQUFFUSxNQUFNLENBQUNkO0FBQWIsS0FBdEIsRUFBMEM7QUFBQ2UsTUFBQUEsS0FBSyxFQUFFO0FBQUVQLFFBQUFBLE9BQU8sRUFBRVQsTUFBTSxDQUFDVTtBQUFsQjtBQUFSLEtBQTFDLENBQU4sQ0FScUYsQ0FVckY7O0FBQ0EsVUFBTVosSUFBSSxDQUFDbUIsa0JBQUwsQ0FBd0I7QUFBQ1YsTUFBQUEsR0FBRyxFQUFFUSxNQUFNLENBQUNiO0FBQWIsS0FBeEIsRUFBNEM7QUFBQ2MsTUFBQUEsS0FBSyxFQUFFO0FBQUVQLFFBQUFBLE9BQU8sRUFBRVQsTUFBTSxDQUFDVTtBQUFsQjtBQUFSLEtBQTVDLENBQU4sQ0FYcUYsQ0FhckY7O0FBQ0EsVUFBTVgsSUFBSSxDQUFDSyxnQkFBTCxDQUFzQjtBQUFFRyxNQUFBQSxHQUFHLEVBQUVXLFFBQVEsQ0FBQ2pCO0FBQWhCLEtBQXRCLEVBQThDO0FBQUVPLE1BQUFBLEtBQUssRUFBRTtBQUFFVyxRQUFBQSxTQUFTLEVBQUVMLFFBQVEsQ0FBQ0o7QUFBdEI7QUFBVCxLQUE5QyxDQUFOLENBZHFGLENBZXJGOztBQUNBLFVBQU1aLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBRUcsTUFBQUEsR0FBRyxFQUFFVyxRQUFRLENBQUNoQjtBQUFoQixLQUF0QixFQUE4QztBQUFFTSxNQUFBQSxLQUFLLEVBQUU7QUFBRVcsUUFBQUEsU0FBUyxFQUFFTCxRQUFRLENBQUNKO0FBQXRCO0FBQVQsS0FBOUMsQ0FBTjtBQUVBLFdBQU9WLE1BQU0sRUFBQ2MsUUFBZDtBQUNEO0FBNUNZLENBQWpCO2tCQStDaUI7QUFBRXhCLEVBQUFBO0FBQUYsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE11dGF0aW9uID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSB1cHZvdGUgZm9yIHBvc3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcG9zdElkXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZXVwVm90ZTogYXN5bmMgKHJvb3QsIHsgaW5wdXQ6IHsgdXNlcklkLCBwb3N0SWQgfSB9LCB7IFVwVm90ZSwgVm90ZSxQb3N0LCBVc2VyIH0pID0+IHtcclxuICAgICAgY29uc3QgdXBWb3RlID0gYXdhaXQgbmV3IFVwVm90ZSh7IHVzZXI6IHVzZXJJZCwgcG9zdDogcG9zdElkIH0pLnNhdmUoKTtcclxuICBcclxuICAgICAgLy8gQWRkIG9uZSB0byB2b3RlcyBjb3VudGluZ1xyXG4gICAgICBhd2FpdCBWb3RlLmZpbmRPbmVBbmRVcGRhdGUoeyAkaW5jOiB7dm90ZXM6IDF9IH0pOyBcclxuICAgIFxyXG4gICAgICAvLyBQdXNoIHZvdGUgdG8gcG9zdCBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogcG9zdElkIH0sIHsgJHB1c2g6IHsgdXB2b3RlczogdXBWb3RlLmlkIH0gfSk7XHJcbiAgICAgIC8vIFB1c2ggdm90ZSB0byB1c2VyIGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgVXNlci5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiB1c2VySWQgfSwgeyAkcHVzaDogeyB1cHZvdGVzOiB1cFZvdGUuaWQgfSB9KTtcclxuICBcclxuICAgICAgcmV0dXJuIHVwVm90ZTtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZXMgYSB1cHBvc3Qgdm90ZVxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxyXG4gICAgICovXHJcbiAgICBkZWxldGV1cFZvdGU6IGFzeW5jIChyb290LCB7IGlucHV0OiB7IGlkIH0gfSwgeyBVcFZvdGUsRG93blZvdGUsIFZvdGUsVXNlciwgUG9zdCB9KSA9PiB7XHJcbiAgICAgIGNvbnN0IHVwVm90ZSA9IGF3YWl0IFVwVm90ZS5maW5kQnlJZEFuZFJlbW92ZShpZCk7ICBcclxuICAgICAgY29uc3QgZG93blZvdGUgPSBhd2FpdCBuZXcgRG93blZvdGUoe3VzZXI6IHVzZXJJZCwgcG9zdDogcG9zdElkfSkuc2F2ZSgpO1xyXG4gIFxyXG4gICAgICAvLyByZW1vdmUgb25lIGZyb20gdm90ZSBjb3VudGluZ1xyXG4gICAgICBhd2FpdCBWb3RlLmZpbmRPbmVBbmRVcGRhdGUoeyRpbmM6IHt2b3RlcyA6IC0xfX0pO1xyXG5cclxuICAgICAgLy8gZGVsZXRlIHVwdm90ZSBmcm9tIHVzZXJzIGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgVXNlci5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IHVwdm90ZS51c2VyfSwgeyRwdWxsOiB7IHVwdm90ZXM6IHVwVm90ZS5pZCB9fSk7XHJcblxyXG4gICAgICAvLyBkZWxldGUgdXB2b3RlIGZyb20gcG9zdHMgY29sbGVjdGlvblxyXG4gICAgICBhd2FpdCBQb3N0LmZpbmRCeU9uZUFuZFVwZGF0ZSh7X2lkOiB1cHZvdGUucG9zdH0sIHskcHVsbDogeyB1cHZvdGVzOiB1cFZvdGUuaWQgfX0pO1xyXG5cclxuICAgICAgLy8gYWRkIGRvd24gIHZvdGUgZnJvbSB1c2VycyBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogZG93bnZvdGUudXNlciB9LCB7ICRwdXNoOiB7IGRvd252b3RlczogZG93blZvdGUuaWQgfSB9KTtcclxuICAgICAgLy8gYWRkIGRvd24gdm90ZSBmcm9tIHBvc3RzIGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgUG9zdC5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBkb3dudm90ZS5wb3N0IH0sIHsgJHB1c2g6IHsgZG93bnZvdGVzOiBkb3duVm90ZS5pZCB9IH0pO1xyXG4gIFxyXG4gICAgICByZXR1cm4gdXBWb3RlLGRvd25Wb3RlO1xyXG4gICAgfSxcclxuICB9O1xyXG4gIFxyXG4gIGV4cG9ydCBkZWZhdWx0IHsgTXV0YXRpb24gfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "upvote.js"
      ],
      "names": [
        "Mutation",
        "createupVote",
        "root",
        "input",
        "userId",
        "postId",
        "UpVote",
        "Vote",
        "Post",
        "User",
        "upVote",
        "user",
        "post",
        "save",
        "findOneAndUpdate",
        "$inc",
        "votes",
        "_id",
        "$push",
        "upvotes",
        "id",
        "deleteupVote",
        "DownVote",
        "findByIdAndRemove",
        "downVote",
        "upvote",
        "$pull",
        "findByOneAndUpdate",
        "downvote",
        "downvotes"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Mutation = {\r\n    /**\r\n     * Create a upvote for post\r\n     *\r\n     * @param {string} userId\r\n     * @param {string} postId\r\n     */\r\n    createupVote: async (root, { input: { userId, postId } }, { UpVote, Vote,Post, User }) => {\r\n      const upVote = await new UpVote({ user: userId, post: postId }).save();\r\n  \r\n      // Add one to votes counting\r\n      await Vote.findOneAndUpdate({ $inc: {votes: 1} }); \r\n    \r\n      // Push vote to post collection\r\n      await Post.findOneAndUpdate({ _id: postId }, { $push: { upvotes: upVote.id } });\r\n      // Push vote to user collection\r\n      await User.findOneAndUpdate({ _id: userId }, { $push: { upvotes: upVote.id } });\r\n  \r\n      return upVote;\r\n    },\r\n    /**\r\n     * Deletes a uppost vote\r\n     *\r\n     * @param {string} id\r\n     */\r\n    deleteupVote: async (root, { input: { id } }, { UpVote,DownVote, Vote,User, Post }) => {\r\n      const upVote = await UpVote.findByIdAndRemove(id);  \r\n      const downVote = await new DownVote({user: userId, post: postId}).save();\r\n  \r\n      // remove one from vote counting\r\n      await Vote.findOneAndUpdate({$inc: {votes : -1}});\r\n\r\n      // delete upvote from users collection\r\n      await User.findOneAndUpdate({_id: upvote.user}, {$pull: { upvotes: upVote.id }});\r\n\r\n      // delete upvote from posts collection\r\n      await Post.findByOneAndUpdate({_id: upvote.post}, {$pull: { upvotes: upVote.id }});\r\n\r\n      // add down  vote from users collection\r\n      await User.findOneAndUpdate({ _id: downvote.user }, { $push: { downvotes: downVote.id } });\r\n      // add down vote from posts collection\r\n      await Post.findOneAndUpdate({ _id: downvote.post }, { $push: { downvotes: downVote.id } });\r\n  \r\n      return upVote,downVote;\r\n    },\r\n  };\r\n  \r\n  export default { Mutation };"
      ]
    },
    "sourceType": "module",
    "mtime": 1625944330506
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\downvote.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\downvote.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\downvote.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\downvote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "downvote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _upvote = require(\"./upvote\");\n\nvar _upvote2 = _interopRequireDefault(_upvote);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Mutation = {\n  /**\r\n   * Creates a vote for post\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} postId\r\n   */\n  createdownVote: async (root, {\n    input: {\n      userId,\n      postId\n    }\n  }, {\n    DownVote,\n    Post,\n    User,\n    Vote\n  }) => {\n    const downVote = await new DownVote({\n      user: userId,\n      post: postId\n    }).save(); // on downvote reduce one from vote count\n\n    await Vote.findOneAndUpdate({\n      $inc: {\n        votes: -1\n      }\n    }); // Push vote to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        downvotes: downVote.id\n      }\n    }); // Push vote to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        downvotes: downVote.id\n      }\n    });\n    return downVote;\n  },\n\n  /**\r\n   * Deletes a post vote\r\n   *\r\n   * @param {string} id\r\n   */\n  deletedownVote: async (root, {\n    input: {\n      id\n    }\n  }, {\n    DownVote,\n    UpVote,\n    User,\n    Post,\n    Vote\n  }) => {\n    const downVote = await DownVote.findByIdAndRemove(id);\n    const upVote = await new UpVote.findOneAndUpdate({\n      user: userId,\n      post: postId\n    }); // on removing downvote increment one \n\n    await Vote.findOneAndUpdate({\n      $inc: {\n        votes: 1\n      }\n    }); // add vote to users collection\n\n    await User.findOneAndUpdate({\n      _id: _upvote2.default.user\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    }); // add vote to posts collection\n\n    await Post.findOneAndUpdate({\n      _id: _upvote2.default.post\n    }, {\n      $push: {\n        upvotes: upVote.id\n      }\n    }); // Delete vote from users collection\n\n    await User.findOneAndUpdate({\n      _id: downvote.user\n    }, {\n      $pull: {\n        downvotes: downVote.id\n      }\n    }); // Delete vote from posts collection\n\n    await Post.findOneAndUpdate({\n      _id: downvote.post\n    }, {\n      $pull: {\n        downvotes: downVote.id\n      }\n    });\n    return downVote, upVote;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd252b3RlLmpzIl0sIm5hbWVzIjpbIk11dGF0aW9uIiwiY3JlYXRlZG93blZvdGUiLCJyb290IiwiaW5wdXQiLCJ1c2VySWQiLCJwb3N0SWQiLCJEb3duVm90ZSIsIlBvc3QiLCJVc2VyIiwiVm90ZSIsImRvd25Wb3RlIiwidXNlciIsInBvc3QiLCJzYXZlIiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRpbmMiLCJ2b3RlcyIsIl9pZCIsIiRwdXNoIiwiZG93bnZvdGVzIiwiaWQiLCJkZWxldGVkb3duVm90ZSIsIlVwVm90ZSIsImZpbmRCeUlkQW5kUmVtb3ZlIiwidXBWb3RlIiwidXB2b3RlIiwidXB2b3RlcyIsImRvd252b3RlIiwiJHB1bGwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7QUFFQSxNQUFNQSxRQUFRLEdBQUc7QUFDYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSUMsRUFBQUEsY0FBYyxFQUFFLE9BQU9DLElBQVAsRUFBYTtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBRUMsTUFBQUEsTUFBRjtBQUFVQyxNQUFBQTtBQUFWO0FBQVQsR0FBYixFQUE0QztBQUFFQyxJQUFBQSxRQUFGO0FBQVlDLElBQUFBLElBQVo7QUFBa0JDLElBQUFBLElBQWxCO0FBQXVCQyxJQUFBQTtBQUF2QixHQUE1QyxLQUE4RTtBQUM1RixVQUFNQyxRQUFRLEdBQUcsTUFBTSxJQUFJSixRQUFKLENBQWE7QUFBRUssTUFBQUEsSUFBSSxFQUFFUCxNQUFSO0FBQWdCUSxNQUFBQSxJQUFJLEVBQUVQO0FBQXRCLEtBQWIsRUFBNkNRLElBQTdDLEVBQXZCLENBRDRGLENBRzVGOztBQUNBLFVBQU1KLElBQUksQ0FBQ0ssZ0JBQUwsQ0FBc0I7QUFBRUMsTUFBQUEsSUFBSSxFQUFFO0FBQUNDLFFBQUFBLEtBQUssRUFBRSxDQUFDO0FBQVQ7QUFBUixLQUF0QixDQUFOLENBSjRGLENBSzVGOztBQUNBLFVBQU1ULElBQUksQ0FBQ08sZ0JBQUwsQ0FBc0I7QUFBRUcsTUFBQUEsR0FBRyxFQUFFWjtBQUFQLEtBQXRCLEVBQXVDO0FBQUVhLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxTQUFTLEVBQUVULFFBQVEsQ0FBQ1U7QUFBdEI7QUFBVCxLQUF2QyxDQUFOLENBTjRGLENBTzVGOztBQUNBLFVBQU1aLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBRUcsTUFBQUEsR0FBRyxFQUFFYjtBQUFQLEtBQXRCLEVBQXVDO0FBQUVjLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxTQUFTLEVBQUVULFFBQVEsQ0FBQ1U7QUFBdEI7QUFBVCxLQUF2QyxDQUFOO0FBRUEsV0FBT1YsUUFBUDtBQUNELEdBbEJZOztBQW1CYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0lXLEVBQUFBLGNBQWMsRUFBRSxPQUFPbkIsSUFBUCxFQUFhO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFaUIsTUFBQUE7QUFBRjtBQUFULEdBQWIsRUFBZ0M7QUFBRWQsSUFBQUEsUUFBRjtBQUFXZ0IsSUFBQUEsTUFBWDtBQUFtQmQsSUFBQUEsSUFBbkI7QUFBeUJELElBQUFBLElBQXpCO0FBQThCRSxJQUFBQTtBQUE5QixHQUFoQyxLQUF5RTtBQUN2RixVQUFNQyxRQUFRLEdBQUcsTUFBTUosUUFBUSxDQUFDaUIsaUJBQVQsQ0FBMkJILEVBQTNCLENBQXZCO0FBRUEsVUFBTUksTUFBTSxHQUFHLE1BQU0sSUFBSUYsTUFBTSxDQUFDUixnQkFBWCxDQUE0QjtBQUFFSCxNQUFBQSxJQUFJLEVBQUVQLE1BQVI7QUFBZ0JRLE1BQUFBLElBQUksRUFBRVA7QUFBdEIsS0FBNUIsQ0FBckIsQ0FIdUYsQ0FJdkY7O0FBQ0EsVUFBTUksSUFBSSxDQUFDSyxnQkFBTCxDQUFzQjtBQUFFQyxNQUFBQSxJQUFJLEVBQUU7QUFBQ0MsUUFBQUEsS0FBSyxFQUFFO0FBQVI7QUFBUixLQUF0QixDQUFOLENBTHVGLENBT3ZGOztBQUNBLFVBQU1SLElBQUksQ0FBQ00sZ0JBQUwsQ0FBc0I7QUFBQ0csTUFBQUEsR0FBRyxFQUFFUSxpQkFBT2Q7QUFBYixLQUF0QixFQUEwQztBQUFDTyxNQUFBQSxLQUFLLEVBQUU7QUFBQ1EsUUFBQUEsT0FBTyxFQUFFRixNQUFNLENBQUNKO0FBQWpCO0FBQVIsS0FBMUMsQ0FBTixDQVJ1RixDQVV2Rjs7QUFDQSxVQUFNYixJQUFJLENBQUNPLGdCQUFMLENBQXNCO0FBQUNHLE1BQUFBLEdBQUcsRUFBRVEsaUJBQU9iO0FBQWIsS0FBdEIsRUFBMEM7QUFBQ00sTUFBQUEsS0FBSyxFQUFFO0FBQUNRLFFBQUFBLE9BQU8sRUFBRUYsTUFBTSxDQUFDSjtBQUFqQjtBQUFSLEtBQTFDLENBQU4sQ0FYdUYsQ0FhdkY7O0FBQ0EsVUFBTVosSUFBSSxDQUFDTSxnQkFBTCxDQUFzQjtBQUFFRyxNQUFBQSxHQUFHLEVBQUVVLFFBQVEsQ0FBQ2hCO0FBQWhCLEtBQXRCLEVBQThDO0FBQUVpQixNQUFBQSxLQUFLLEVBQUU7QUFBRVQsUUFBQUEsU0FBUyxFQUFFVCxRQUFRLENBQUNVO0FBQXRCO0FBQVQsS0FBOUMsQ0FBTixDQWR1RixDQWdCdkY7O0FBQ0EsVUFBTWIsSUFBSSxDQUFDTyxnQkFBTCxDQUFzQjtBQUFFRyxNQUFBQSxHQUFHLEVBQUVVLFFBQVEsQ0FBQ2Y7QUFBaEIsS0FBdEIsRUFBOEM7QUFBRWdCLE1BQUFBLEtBQUssRUFBRTtBQUFFVCxRQUFBQSxTQUFTLEVBQUVULFFBQVEsQ0FBQ1U7QUFBdEI7QUFBVCxLQUE5QyxDQUFOO0FBRUEsV0FBT1YsUUFBUSxFQUFDYyxNQUFoQjtBQUNEO0FBNUNZLENBQWpCO2tCQStDaUI7QUFBRXhCLEVBQUFBO0FBQUYsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1cHZvdGUgZnJvbSBcIi4vdXB2b3RlXCI7XHJcblxyXG5jb25zdCBNdXRhdGlvbiA9IHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIHZvdGUgZm9yIHBvc3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcG9zdElkXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZWRvd25Wb3RlOiBhc3luYyAocm9vdCwgeyBpbnB1dDogeyB1c2VySWQsIHBvc3RJZCB9IH0sIHsgRG93blZvdGUsIFBvc3QsIFVzZXIsVm90ZSB9KSA9PiB7XHJcbiAgICAgIGNvbnN0IGRvd25Wb3RlID0gYXdhaXQgbmV3IERvd25Wb3RlKHsgdXNlcjogdXNlcklkLCBwb3N0OiBwb3N0SWQgfSkuc2F2ZSgpO1xyXG4gICAgICBcclxuICAgICAgLy8gb24gZG93bnZvdGUgcmVkdWNlIG9uZSBmcm9tIHZvdGUgY291bnRcclxuICAgICAgYXdhaXQgVm90ZS5maW5kT25lQW5kVXBkYXRlKHsgJGluYzoge3ZvdGVzOiAtMX0gfSk7IFxyXG4gICAgICAvLyBQdXNoIHZvdGUgdG8gcG9zdCBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogcG9zdElkIH0sIHsgJHB1c2g6IHsgZG93bnZvdGVzOiBkb3duVm90ZS5pZCB9IH0pO1xyXG4gICAgICAvLyBQdXNoIHZvdGUgdG8gdXNlciBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogdXNlcklkIH0sIHsgJHB1c2g6IHsgZG93bnZvdGVzOiBkb3duVm90ZS5pZCB9IH0pO1xyXG4gIFxyXG4gICAgICByZXR1cm4gZG93blZvdGU7XHJcbiAgICB9LFxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGVzIGEgcG9zdCB2b3RlXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkXHJcbiAgICAgKi9cclxuICAgIGRlbGV0ZWRvd25Wb3RlOiBhc3luYyAocm9vdCwgeyBpbnB1dDogeyBpZCB9IH0sIHsgRG93blZvdGUsVXBWb3RlLCBVc2VyLCBQb3N0LFZvdGUgfSkgPT4ge1xyXG4gICAgICBjb25zdCBkb3duVm90ZSA9IGF3YWl0IERvd25Wb3RlLmZpbmRCeUlkQW5kUmVtb3ZlKGlkKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHVwVm90ZSA9IGF3YWl0IG5ldyBVcFZvdGUuZmluZE9uZUFuZFVwZGF0ZSh7IHVzZXI6IHVzZXJJZCwgcG9zdDogcG9zdElkIH0pXHJcbiAgICAgIC8vIG9uIHJlbW92aW5nIGRvd252b3RlIGluY3JlbWVudCBvbmUgXHJcbiAgICAgIGF3YWl0IFZvdGUuZmluZE9uZUFuZFVwZGF0ZSh7ICRpbmM6IHt2b3RlczogMX0gfSk7IFxyXG4gICAgICBcclxuICAgICAgLy8gYWRkIHZvdGUgdG8gdXNlcnMgY29sbGVjdGlvblxyXG4gICAgICBhd2FpdCBVc2VyLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogdXB2b3RlLnVzZXJ9LCB7JHB1c2g6IHt1cHZvdGVzOiB1cFZvdGUuaWR9fSk7XHJcblxyXG4gICAgICAvLyBhZGQgdm90ZSB0byBwb3N0cyBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiB1cHZvdGUucG9zdCB9LHskcHVzaDoge3Vwdm90ZXM6IHVwVm90ZS5pZH19KTsgXHJcblxyXG4gICAgICAvLyBEZWxldGUgdm90ZSBmcm9tIHVzZXJzIGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgVXNlci5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBkb3dudm90ZS51c2VyIH0sIHsgJHB1bGw6IHsgZG93bnZvdGVzOiBkb3duVm90ZS5pZCB9IH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gRGVsZXRlIHZvdGUgZnJvbSBwb3N0cyBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogZG93bnZvdGUucG9zdCB9LCB7ICRwdWxsOiB7IGRvd252b3RlczogZG93blZvdGUuaWQgfSB9KTtcclxuICBcclxuICAgICAgcmV0dXJuIGRvd25Wb3RlLHVwVm90ZTtcclxuICAgIH0sXHJcbiAgfTtcclxuICBcclxuICBleHBvcnQgZGVmYXVsdCB7IE11dGF0aW9uIH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "downvote.js"
      ],
      "names": [
        "Mutation",
        "createdownVote",
        "root",
        "input",
        "userId",
        "postId",
        "DownVote",
        "Post",
        "User",
        "Vote",
        "downVote",
        "user",
        "post",
        "save",
        "findOneAndUpdate",
        "$inc",
        "votes",
        "_id",
        "$push",
        "downvotes",
        "id",
        "deletedownVote",
        "UpVote",
        "findByIdAndRemove",
        "upVote",
        "upvote",
        "upvotes",
        "downvote",
        "$pull"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "import upvote from \"./upvote\";\r\n\r\nconst Mutation = {\r\n    /**\r\n     * Creates a vote for post\r\n     *\r\n     * @param {string} userId\r\n     * @param {string} postId\r\n     */\r\n    createdownVote: async (root, { input: { userId, postId } }, { DownVote, Post, User,Vote }) => {\r\n      const downVote = await new DownVote({ user: userId, post: postId }).save();\r\n      \r\n      // on downvote reduce one from vote count\r\n      await Vote.findOneAndUpdate({ $inc: {votes: -1} }); \r\n      // Push vote to post collection\r\n      await Post.findOneAndUpdate({ _id: postId }, { $push: { downvotes: downVote.id } });\r\n      // Push vote to user collection\r\n      await User.findOneAndUpdate({ _id: userId }, { $push: { downvotes: downVote.id } });\r\n  \r\n      return downVote;\r\n    },\r\n    /**\r\n     * Deletes a post vote\r\n     *\r\n     * @param {string} id\r\n     */\r\n    deletedownVote: async (root, { input: { id } }, { DownVote,UpVote, User, Post,Vote }) => {\r\n      const downVote = await DownVote.findByIdAndRemove(id);\r\n      \r\n      const upVote = await new UpVote.findOneAndUpdate({ user: userId, post: postId })\r\n      // on removing downvote increment one \r\n      await Vote.findOneAndUpdate({ $inc: {votes: 1} }); \r\n      \r\n      // add vote to users collection\r\n      await User.findOneAndUpdate({_id: upvote.user}, {$push: {upvotes: upVote.id}});\r\n\r\n      // add vote to posts collection\r\n      await Post.findOneAndUpdate({_id: upvote.post },{$push: {upvotes: upVote.id}}); \r\n\r\n      // Delete vote from users collection\r\n      await User.findOneAndUpdate({ _id: downvote.user }, { $pull: { downvotes: downVote.id } });\r\n      \r\n      // Delete vote from posts collection\r\n      await Post.findOneAndUpdate({ _id: downvote.post }, { $pull: { downvotes: downVote.id } });\r\n  \r\n      return downVote,upVote;\r\n    },\r\n  };\r\n  \r\n  export default { Mutation };"
      ]
    },
    "sourceType": "module",
    "mtime": 1625944353544
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Clap.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Clap.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Clap.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Clap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Clap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * Vote Schema refrences to DownVote and UpVote\r\n */\n\nconst clapSchema = Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  },\n  post: {\n    type: Schema.Types.ObjectId,\n    ref: 'Post'\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Clap', clapSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsYXAuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJjbGFwU2NoZW1hIiwidXNlciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicG9zdCIsInRpbWVzdGFtcHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLE1BQU1BLE1BQU0sR0FBR0MsbUJBQVNELE1BQXhCO0FBRUE7QUFDQTtBQUNBOztBQUNBLE1BQU1FLFVBQVUsR0FBR0YsTUFBTSxDQUNyQjtBQUNJRyxFQUFBQSxJQUFJLEVBQUc7QUFDSEMsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkYsR0FEWDtBQUtJQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEosSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkY7QUFMWCxDQURxQixFQVdyQjtBQUNJRSxFQUFBQSxVQUFVLEVBQUU7QUFEaEIsQ0FYcUIsQ0FBekI7a0JBZWVSLG1CQUFTUyxLQUFULENBQWUsTUFBZixFQUF1QlIsVUFBdkIsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XHJcblxyXG4vKipcclxuICogVm90ZSBTY2hlbWEgcmVmcmVuY2VzIHRvIERvd25Wb3RlIGFuZCBVcFZvdGVcclxuICovXHJcbmNvbnN0IGNsYXBTY2hlbWEgPSBTY2hlbWEoXHJcbiAgICB7ICAgXHJcbiAgICAgICAgdXNlciA6IHtcclxuICAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvc3QgOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOiAnUG9zdCcsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgdGltZXN0YW1wczogdHJ1ZVxyXG4gICAgfVxyXG4pO1xyXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnQ2xhcCcsIGNsYXBTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Clap.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "clapSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "post",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;;AACA,MAAME,UAAU,GAAGF,MAAM,CACrB;AACIG,EAAAA,IAAI,EAAG;AACHC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF,GADX;AAKIC,EAAAA,IAAI,EAAG;AACHJ,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAE;AAFF;AALX,CADqB,EAWrB;AACIE,EAAAA,UAAU,EAAE;AADhB,CAXqB,CAAzB;kBAeeR,mBAASS,KAAT,CAAe,MAAf,EAAuBR,UAAvB,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * Vote Schema refrences to DownVote and UpVote\r\n */\r\nconst clapSchema = Schema(\r\n    {   \r\n        user : {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User',\r\n        },\r\n        post : {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'Post',\r\n        },\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n);\r\nexport default mongoose.model('Clap', clapSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1626088023808
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Clap.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Clap.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Clap.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Clap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Clap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * Vote Schema\r\n */\nconst ClapSchema = _apolloServerExpress.gql`\n    #---------------------------\n    # Model Objects\n    #--------------------------\n    type Clap {\n        id:  ID!\n        post: ID\n        user: ID\n    }\n   \n    #-------------------------------\n    # input Object\n    #-------------------------------\n    input CreateClapInput {\n        userId: ID!\n        postId: ID!\n    }\n    input DeleteClapInput {\n        id: ID!\n    }\n\n    #---------------------------------\n    # Return Payloads\n    #---------------------------------\n    type ClapPayload {\n        id: ID!\n        user: UserPayload\n        post: PostPayload\n    }\n\n    #----------------------------\n    # Mutations\n    # ---------------------------\n    extend type Mutation{\n        # Creates a clap for post\n        createClap(input: CreateClapInput!): Clap\n\n        # Deletes a clap \n        removeClap(input: DeleteClapInput!): Clap   \n    }\n\n`;\nexports.default = ClapSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsYXAuanMiXSwibmFtZXMiOlsiQ2xhcFNjaGVtYSIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBRUEsTUFBTUEsVUFBVSxHQUFHQyx3QkFBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBekNBO2tCQTJDZUQsVSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxzY2hlbWFcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z3FsfSBmcm9tIFwiYXBvbGxvLXNlcnZlci1leHByZXNzXCI7XHJcblxyXG4vKipcclxuICogVm90ZSBTY2hlbWFcclxuICovXHJcblxyXG5jb25zdCBDbGFwU2NoZW1hID0gZ3FsYFxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBNb2RlbCBPYmplY3RzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHR5cGUgQ2xhcCB7XHJcbiAgICAgICAgaWQ6ICBJRCFcclxuICAgICAgICBwb3N0OiBJRFxyXG4gICAgICAgIHVzZXI6IElEXHJcbiAgICB9XHJcbiAgIFxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICMgaW5wdXQgT2JqZWN0XHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgaW5wdXQgQ3JlYXRlQ2xhcElucHV0IHtcclxuICAgICAgICB1c2VySWQ6IElEIVxyXG4gICAgICAgIHBvc3RJZDogSUQhXHJcbiAgICB9XHJcbiAgICBpbnB1dCBEZWxldGVDbGFwSW5wdXQge1xyXG4gICAgICAgIGlkOiBJRCFcclxuICAgIH1cclxuXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIFJldHVybiBQYXlsb2Fkc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBDbGFwUGF5bG9hZCB7XHJcbiAgICAgICAgaWQ6IElEIVxyXG4gICAgICAgIHVzZXI6IFVzZXJQYXlsb2FkXHJcbiAgICAgICAgcG9zdDogUG9zdFBheWxvYWRcclxuICAgIH1cclxuXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgIyBNdXRhdGlvbnNcclxuICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBleHRlbmQgdHlwZSBNdXRhdGlvbntcclxuICAgICAgICAjIENyZWF0ZXMgYSBjbGFwIGZvciBwb3N0XHJcbiAgICAgICAgY3JlYXRlQ2xhcChpbnB1dDogQ3JlYXRlQ2xhcElucHV0ISk6IENsYXBcclxuXHJcbiAgICAgICAgIyBEZWxldGVzIGEgY2xhcCBcclxuICAgICAgICByZW1vdmVDbGFwKGlucHV0OiBEZWxldGVDbGFwSW5wdXQhKTogQ2xhcCAgIFxyXG4gICAgfVxyXG5cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENsYXBTY2hlbWE7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Clap.js"
      ],
      "names": [
        "ClapSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,wBAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCA;kBA2CeD,U",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * Vote Schema\r\n */\r\n\r\nconst ClapSchema = gql`\r\n    #---------------------------\r\n    # Model Objects\r\n    #--------------------------\r\n    type Clap {\r\n        id:  ID!\r\n        post: ID\r\n        user: ID\r\n    }\r\n   \r\n    #-------------------------------\r\n    # input Object\r\n    #-------------------------------\r\n    input CreateClapInput {\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n    input DeleteClapInput {\r\n        id: ID!\r\n    }\r\n\r\n    #---------------------------------\r\n    # Return Payloads\r\n    #---------------------------------\r\n    type ClapPayload {\r\n        id: ID!\r\n        user: UserPayload\r\n        post: PostPayload\r\n    }\r\n\r\n    #----------------------------\r\n    # Mutations\r\n    # ---------------------------\r\n    extend type Mutation{\r\n        # Creates a clap for post\r\n        createClap(input: CreateClapInput!): Clap\r\n\r\n        # Deletes a clap \r\n        removeClap(input: DeleteClapInput!): Clap   \r\n    }\r\n\r\n`;\r\n\r\nexport default ClapSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626080082914
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\clap.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\clap.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\clap.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\clap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "clap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Mutation = {\n  /**\r\n   * Create a upvote for post\r\n   *\r\n   * @param {string} userId\r\n   * @param {string} postId\r\n   */\n  createClap: async (root, {\n    input: {\n      userId,\n      postId\n    }\n  }, {\n    Clap,\n    Post,\n    User\n  }) => {\n    if (!userId && userId === \"\") {\n      throw new Error(\"Can't find User! \");\n    }\n\n    if (!postId && postId === \"\") {\n      throw new Error(\"Can't find Post! \");\n    }\n\n    const clap = await new Clap({\n      user: userId,\n      post: postId\n    }).save(); // Push vote to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        claps: clap.id\n      }\n    }); // Push vote to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        claps: clap.id\n      }\n    });\n    return clap;\n  },\n\n  /**\r\n   * Deletes a uppost vote\r\n   *\r\n   * @param {string} id\r\n   */\n  removeClap: async (root, {\n    input: {\n      id\n    }\n  }, {\n    Clap,\n    User,\n    Post\n  }) => {\n    const clap = await Clap.findByIdAndRemove(id); // delete upvote from users collection\n\n    await User.findOneAndUpdate({\n      _id: clap.user\n    }, {\n      $pull: {\n        claps: clap.id\n      }\n    }); // delete upvote from posts collection\n\n    await Post.findOneAndUpdate({\n      _id: clap.post\n    }, {\n      $pull: {\n        claps: clap.id\n      }\n    });\n    return clap;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXAuanMiXSwibmFtZXMiOlsiTXV0YXRpb24iLCJjcmVhdGVDbGFwIiwicm9vdCIsImlucHV0IiwidXNlcklkIiwicG9zdElkIiwiQ2xhcCIsIlBvc3QiLCJVc2VyIiwiRXJyb3IiLCJjbGFwIiwidXNlciIsInBvc3QiLCJzYXZlIiwiZmluZE9uZUFuZFVwZGF0ZSIsIl9pZCIsIiRwdXNoIiwiY2xhcHMiLCJpZCIsInJlbW92ZUNsYXAiLCJmaW5kQnlJZEFuZFJlbW92ZSIsIiRwdWxsIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFFBQVEsR0FBRztBQUNiO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNJQyxFQUFBQSxVQUFVLEVBQUUsT0FBT0MsSUFBUCxFQUFhO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFQyxNQUFBQSxNQUFGO0FBQVVDLE1BQUFBO0FBQVY7QUFBVCxHQUFiLEVBQTRDO0FBQUVDLElBQUFBLElBQUY7QUFBUUMsSUFBQUEsSUFBUjtBQUFjQyxJQUFBQTtBQUFkLEdBQTVDLEtBQXFFO0FBQy9FLFFBQUksQ0FBQ0osTUFBRCxJQUFXQSxNQUFNLEtBQUcsRUFBeEIsRUFBMkI7QUFDekIsWUFBTSxJQUFJSyxLQUFKLENBQVUsbUJBQVYsQ0FBTjtBQUNEOztBQUNELFFBQUksQ0FBQ0osTUFBRCxJQUFXQSxNQUFNLEtBQUcsRUFBeEIsRUFBMkI7QUFDekIsWUFBTSxJQUFJSSxLQUFKLENBQVUsbUJBQVYsQ0FBTjtBQUNEOztBQUNELFVBQU1DLElBQUksR0FBRyxNQUFNLElBQUlKLElBQUosQ0FBUztBQUFFSyxNQUFBQSxJQUFJLEVBQUVQLE1BQVI7QUFBZ0JRLE1BQUFBLElBQUksRUFBRVA7QUFBdEIsS0FBVCxFQUF5Q1EsSUFBekMsRUFBbkIsQ0FQK0UsQ0FTL0U7O0FBQ0EsVUFBTU4sSUFBSSxDQUFDTyxnQkFBTCxDQUFzQjtBQUFFQyxNQUFBQSxHQUFHLEVBQUVWO0FBQVAsS0FBdEIsRUFBdUM7QUFBRVcsTUFBQUEsS0FBSyxFQUFFO0FBQUVDLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDUTtBQUFkO0FBQVQsS0FBdkMsQ0FBTixDQVYrRSxDQVcvRTs7QUFDQSxVQUFNVixJQUFJLENBQUNNLGdCQUFMLENBQXNCO0FBQUVDLE1BQUFBLEdBQUcsRUFBRVg7QUFBUCxLQUF0QixFQUF1QztBQUFFWSxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsS0FBSyxFQUFHUCxJQUFJLENBQUNRO0FBQWY7QUFBVCxLQUF2QyxDQUFOO0FBRUEsV0FBT1IsSUFBUDtBQUNELEdBdEJZOztBQXVCYjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0lTLEVBQUFBLFVBQVUsRUFBRSxPQUFPakIsSUFBUCxFQUFhO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFZSxNQUFBQTtBQUFGO0FBQVQsR0FBYixFQUFnQztBQUFHWixJQUFBQSxJQUFIO0FBQVFFLElBQUFBLElBQVI7QUFBY0QsSUFBQUE7QUFBZCxHQUFoQyxLQUF5RDtBQUVuRSxVQUFNRyxJQUFJLEdBQUcsTUFBTUosSUFBSSxDQUFDYyxpQkFBTCxDQUF1QkYsRUFBdkIsQ0FBbkIsQ0FGbUUsQ0FHbkU7O0FBQ0EsVUFBTVYsSUFBSSxDQUFDTSxnQkFBTCxDQUFzQjtBQUFDQyxNQUFBQSxHQUFHLEVBQUVMLElBQUksQ0FBQ0M7QUFBWCxLQUF0QixFQUF3QztBQUFDVSxNQUFBQSxLQUFLLEVBQUU7QUFBRUosUUFBQUEsS0FBSyxFQUFFUCxJQUFJLENBQUNRO0FBQWQ7QUFBUixLQUF4QyxDQUFOLENBSm1FLENBS25FOztBQUNBLFVBQU1YLElBQUksQ0FBQ08sZ0JBQUwsQ0FBc0I7QUFBQ0MsTUFBQUEsR0FBRyxFQUFFTCxJQUFJLENBQUNFO0FBQVgsS0FBdEIsRUFBd0M7QUFBQ1MsTUFBQUEsS0FBSyxFQUFFO0FBQUVKLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDUTtBQUFkO0FBQVIsS0FBeEMsQ0FBTjtBQUVBLFdBQU9SLElBQVA7QUFDRDtBQXJDWSxDQUFqQjtrQkF3Q2lCO0FBQUVWLEVBQUFBO0FBQUYsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE11dGF0aW9uID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSB1cHZvdGUgZm9yIHBvc3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcG9zdElkXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZUNsYXA6IGFzeW5jIChyb290LCB7IGlucHV0OiB7IHVzZXJJZCwgcG9zdElkIH0gfSwgeyBDbGFwICxQb3N0LCBVc2VyIH0pID0+IHtcclxuICAgICAgaWYgKCF1c2VySWQgJiYgdXNlcklkPT09XCJcIil7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgZmluZCBVc2VyISBcIik7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKCFwb3N0SWQgJiYgcG9zdElkPT09XCJcIil7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgZmluZCBQb3N0ISBcIik7XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgY2xhcCA9IGF3YWl0IG5ldyBDbGFwKHsgdXNlcjogdXNlcklkLCBwb3N0OiBwb3N0SWQgfSkuc2F2ZSgpO1xyXG4gICAgXHJcbiAgICAgIC8vIFB1c2ggdm90ZSB0byBwb3N0IGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgUG9zdC5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBwb3N0SWQgfSwgeyAkcHVzaDogeyBjbGFwczogY2xhcC5pZCB9IH0pO1xyXG4gICAgICAvLyBQdXNoIHZvdGUgdG8gdXNlciBjb2xsZWN0aW9uXHJcbiAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7IF9pZDogdXNlcklkIH0sIHsgJHB1c2g6IHsgY2xhcHMgOiBjbGFwLmlkIH0gfSk7XHJcbiAgXHJcbiAgICAgIHJldHVybiBjbGFwO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogRGVsZXRlcyBhIHVwcG9zdCB2b3RlXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZUNsYXA6IGFzeW5jIChyb290LCB7IGlucHV0OiB7IGlkIH0gfSwgeyAgQ2xhcCxVc2VyLCBQb3N0IH0pID0+IHtcclxuXHJcbiAgICAgIGNvbnN0IGNsYXAgPSBhd2FpdCBDbGFwLmZpbmRCeUlkQW5kUmVtb3ZlKGlkKVxyXG4gICAgICAvLyBkZWxldGUgdXB2b3RlIGZyb20gdXNlcnMgY29sbGVjdGlvblxyXG4gICAgICBhd2FpdCBVc2VyLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogY2xhcC51c2VyfSwgeyRwdWxsOiB7IGNsYXBzOiBjbGFwLmlkIH19KTtcclxuICAgICAgLy8gZGVsZXRlIHVwdm90ZSBmcm9tIHBvc3RzIGNvbGxlY3Rpb25cclxuICAgICAgYXdhaXQgUG9zdC5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IGNsYXAucG9zdH0sIHskcHVsbDogeyBjbGFwczogY2xhcC5pZCB9fSk7XHJcbiAgXHJcbiAgICAgIHJldHVybiBjbGFwO1xyXG4gICAgfSxcclxuICB9O1xyXG4gIFxyXG4gIGV4cG9ydCBkZWZhdWx0IHsgTXV0YXRpb24gfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "clap.js"
      ],
      "names": [
        "Mutation",
        "createClap",
        "root",
        "input",
        "userId",
        "postId",
        "Clap",
        "Post",
        "User",
        "Error",
        "clap",
        "user",
        "post",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "claps",
        "id",
        "removeClap",
        "findByIdAndRemove",
        "$pull"
      ],
      "mappings": ";;;;;AAAA,MAAMA,QAAQ,GAAG;AACb;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,UAAU,EAAE,OAAOC,IAAP,EAAa;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAT,GAAb,EAA4C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAA5C,KAAqE;AAC/E,QAAI,CAACJ,MAAD,IAAWA,MAAM,KAAG,EAAxB,EAA2B;AACzB,YAAM,IAAIK,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,QAAI,CAACJ,MAAD,IAAWA,MAAM,KAAG,EAAxB,EAA2B;AACzB,YAAM,IAAII,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,UAAMC,IAAI,GAAG,MAAM,IAAIJ,IAAJ,CAAS;AAAEK,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,IAAI,EAAEP;AAAtB,KAAT,EAAyCQ,IAAzC,EAAnB,CAP+E,CAS/E;;AACA,UAAMN,IAAI,CAACO,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEV;AAAP,KAAtB,EAAuC;AAAEW,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEP,IAAI,CAACQ;AAAd;AAAT,KAAvC,CAAN,CAV+E,CAW/E;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAAEC,MAAAA,GAAG,EAAEX;AAAP,KAAtB,EAAuC;AAAEY,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAGP,IAAI,CAACQ;AAAf;AAAT,KAAvC,CAAN;AAEA,WAAOR,IAAP;AACD,GAtBY;;AAuBb;AACJ;AACA;AACA;AACA;AACIS,EAAAA,UAAU,EAAE,OAAOjB,IAAP,EAAa;AAAEC,IAAAA,KAAK,EAAE;AAAEe,MAAAA;AAAF;AAAT,GAAb,EAAgC;AAAGZ,IAAAA,IAAH;AAAQE,IAAAA,IAAR;AAAcD,IAAAA;AAAd,GAAhC,KAAyD;AAEnE,UAAMG,IAAI,GAAG,MAAMJ,IAAI,CAACc,iBAAL,CAAuBF,EAAvB,CAAnB,CAFmE,CAGnE;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEL,IAAI,CAACC;AAAX,KAAtB,EAAwC;AAACU,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAEP,IAAI,CAACQ;AAAd;AAAR,KAAxC,CAAN,CAJmE,CAKnE;;AACA,UAAMX,IAAI,CAACO,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEL,IAAI,CAACE;AAAX,KAAtB,EAAwC;AAACS,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAEP,IAAI,CAACQ;AAAd;AAAR,KAAxC,CAAN;AAEA,WAAOR,IAAP;AACD;AArCY,CAAjB;kBAwCiB;AAAEV,EAAAA;AAAF,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Mutation = {\r\n    /**\r\n     * Create a upvote for post\r\n     *\r\n     * @param {string} userId\r\n     * @param {string} postId\r\n     */\r\n    createClap: async (root, { input: { userId, postId } }, { Clap ,Post, User }) => {\r\n      if (!userId && userId===\"\"){\r\n        throw new Error(\"Can't find User! \");\r\n      }\r\n      if (!postId && postId===\"\"){\r\n        throw new Error(\"Can't find Post! \");\r\n      }\r\n      const clap = await new Clap({ user: userId, post: postId }).save();\r\n    \r\n      // Push vote to post collection\r\n      await Post.findOneAndUpdate({ _id: postId }, { $push: { claps: clap.id } });\r\n      // Push vote to user collection\r\n      await User.findOneAndUpdate({ _id: userId }, { $push: { claps : clap.id } });\r\n  \r\n      return clap;\r\n    },\r\n    /**\r\n     * Deletes a uppost vote\r\n     *\r\n     * @param {string} id\r\n     */\r\n    removeClap: async (root, { input: { id } }, {  Clap,User, Post }) => {\r\n\r\n      const clap = await Clap.findByIdAndRemove(id)\r\n      // delete upvote from users collection\r\n      await User.findOneAndUpdate({_id: clap.user}, {$pull: { claps: clap.id }});\r\n      // delete upvote from posts collection\r\n      await Post.findOneAndUpdate({_id: clap.post}, {$pull: { claps: clap.id }});\r\n  \r\n      return clap;\r\n    },\r\n  };\r\n  \r\n  export default { Mutation };"
      ]
    },
    "sourceType": "module",
    "mtime": 1626087635741
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\schema\\\\Bookmark.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Bookmark.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Bookmark.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\Bookmark.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
        "sourceFileName": "Bookmark.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\n/**\r\n * BookMark Schema\r\n * \r\n */\nconst BookmarkSchema = _apolloServerExpress.gql`\n    \n    #----------------------------------------------\n    #  Model Objects\n    #----------------------------------------------\n    type Bookmark {\n        id: ID!\n        post: ID\n        user: ID\n    } \n\n    #----------------------------------------------\n    #   Input Object\n    #---------------------------------------------\n    input CreateBookmarkInput{\n        userId: ID!\n        postId: ID!\n    }\n    input DeleteBookmarkInput {\n        id: ID!\n    }\n\n    #-------------------------------------------\n    # Return Payloads\n    #-------------------------------------------\n    type BookmarkPayload {\n        id: ID!\n        user: UserPayload\n        post: PostPayload\n    }\n\n    #----------------------------------------\n    # Mutations\n    #-------------------------------------------\n    extend type Mutation{\n        # creates bookmark for post\n        createBookmark(input: CreateBookmarkInput!): Bookmark\n\n        # delete bookmark\n        deleteBookmark(input: DeleteBookmarkInput!): Bookmark    \n        \n    }\n\n`;\nexports.default = BookmarkSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvb2ttYXJrLmpzIl0sIm5hbWVzIjpbIkJvb2ttYXJrU2NoZW1hIiwiZ3FsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLGNBQWMsR0FBR0Msd0JBQUs7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0EzQ0E7a0JBNENlRCxjIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXHNjaGVtYVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtncWx9IGZyb20gXCJhcG9sbG8tc2VydmVyLWV4cHJlc3NcIjtcclxuXHJcbi8qKlxyXG4gKiBCb29rTWFyayBTY2hlbWFcclxuICogXHJcbiAqL1xyXG5jb25zdCBCb29rbWFya1NjaGVtYSA9IGdxbCBgXHJcbiAgICBcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjICBNb2RlbCBPYmplY3RzXHJcbiAgICAjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgdHlwZSBCb29rbWFyayB7XHJcbiAgICAgICAgaWQ6IElEIVxyXG4gICAgICAgIHBvc3Q6IElEXHJcbiAgICAgICAgdXNlcjogSURcclxuICAgIH0gXHJcblxyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICMgICBJbnB1dCBPYmplY3RcclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGlucHV0IENyZWF0ZUJvb2ttYXJrSW5wdXR7XHJcbiAgICAgICAgdXNlcklkOiBJRCFcclxuICAgICAgICBwb3N0SWQ6IElEIVxyXG4gICAgfVxyXG4gICAgaW5wdXQgRGVsZXRlQm9va21hcmtJbnB1dCB7XHJcbiAgICAgICAgaWQ6IElEIVxyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIFJldHVybiBQYXlsb2Fkc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHR5cGUgQm9va21hcmtQYXlsb2FkIHtcclxuICAgICAgICBpZDogSUQhXHJcbiAgICAgICAgdXNlcjogVXNlclBheWxvYWRcclxuICAgICAgICBwb3N0OiBQb3N0UGF5bG9hZFxyXG4gICAgfVxyXG5cclxuICAgICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjIE11dGF0aW9uc1xyXG4gICAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGV4dGVuZCB0eXBlIE11dGF0aW9ue1xyXG4gICAgICAgICMgY3JlYXRlcyBib29rbWFyayBmb3IgcG9zdFxyXG4gICAgICAgIGNyZWF0ZUJvb2ttYXJrKGlucHV0OiBDcmVhdGVCb29rbWFya0lucHV0ISk6IEJvb2ttYXJrXHJcblxyXG4gICAgICAgICMgZGVsZXRlIGJvb2ttYXJrXHJcbiAgICAgICAgZGVsZXRlQm9va21hcmsoaW5wdXQ6IERlbGV0ZUJvb2ttYXJrSW5wdXQhKTogQm9va21hcmsgICAgXHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG5gO1xyXG5leHBvcnQgZGVmYXVsdCBCb29rbWFya1NjaGVtYTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Bookmark.js"
      ],
      "names": [
        "BookmarkSchema",
        "gql"
      ],
      "mappings": ";;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAGC,wBAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CA;kBA4CeD,c",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\schema\\",
      "sourcesContent": [
        "import {gql} from \"apollo-server-express\";\r\n\r\n/**\r\n * BookMark Schema\r\n * \r\n */\r\nconst BookmarkSchema = gql `\r\n    \r\n    #----------------------------------------------\r\n    #  Model Objects\r\n    #----------------------------------------------\r\n    type Bookmark {\r\n        id: ID!\r\n        post: ID\r\n        user: ID\r\n    } \r\n\r\n    #----------------------------------------------\r\n    #   Input Object\r\n    #---------------------------------------------\r\n    input CreateBookmarkInput{\r\n        userId: ID!\r\n        postId: ID!\r\n    }\r\n    input DeleteBookmarkInput {\r\n        id: ID!\r\n    }\r\n\r\n    #-------------------------------------------\r\n    # Return Payloads\r\n    #-------------------------------------------\r\n    type BookmarkPayload {\r\n        id: ID!\r\n        user: UserPayload\r\n        post: PostPayload\r\n    }\r\n\r\n    #----------------------------------------\r\n    # Mutations\r\n    #-------------------------------------------\r\n    extend type Mutation{\r\n        # creates bookmark for post\r\n        createBookmark(input: CreateBookmarkInput!): Bookmark\r\n\r\n        # delete bookmark\r\n        deleteBookmark(input: DeleteBookmarkInput!): Bookmark    \r\n        \r\n    }\r\n\r\n`;\r\nexport default BookmarkSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1626082607425
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\resolvers\\\\bookmark.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6:development": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\bookmark.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\bookmark.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\bookmark.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
        "sourceFileName": "bookmark.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Mutation = {\n  /**\r\n   * Creates a bookmark \r\n   * @param {string} userId  \r\n   * @param {string} postId  \r\n   * \r\n   */\n  createBookmark: async (root, {\n    input: {\n      postId,\n      userId\n    }\n  }, {\n    Bookmark,\n    Post,\n    User\n  }) => {\n    if (!postId || postId === \"\") {\n      throw new Error(\"Post Not Found!\");\n    }\n\n    if (!userId) {\n      throw new Error(\"BookMarker User not found!\");\n    }\n\n    const bookmark = await new Bookmark({\n      user: userId,\n      post: postId\n    }).save(); // Push bookmark to post collection\n\n    await Post.findOneAndUpdate({\n      _id: postId\n    }, {\n      $push: {\n        bookmarks: bookmark.id\n      }\n    }); // Push bookmark to user collection\n\n    await User.findOneAndUpdate({\n      _id: userId\n    }, {\n      $push: {\n        bookmarks: bookmark.id\n      }\n    });\n    return bookmark;\n  },\n\n  /**\r\n   * Deletes a bookmark from  corresponding users collection \r\n   *\r\n   *  @param {string} id \r\n   */\n  deleteBookmark: async (root, {\n    input: {\n      id\n    }\n  }, {\n    Bookmark,\n    User,\n    Post\n  }) => {\n    const bookmark = await Bookmark.findByIdAndRemove(id); // remove bookmark from User collection\n\n    await User.findOneAndUpdate({\n      _id: bookmark.user\n    }, {\n      $pull: {\n        bookmarks: bookmark.id\n      }\n    });\n    await Post.findOneAndUpdate({\n      _id: bookmark.post\n    }, {\n      $pull: {\n        bookmarks: bookmark.id\n      }\n    });\n    return bookmark;\n  }\n};\nexports.default = {\n  Mutation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2ttYXJrLmpzIl0sIm5hbWVzIjpbIk11dGF0aW9uIiwiY3JlYXRlQm9va21hcmsiLCJyb290IiwiaW5wdXQiLCJwb3N0SWQiLCJ1c2VySWQiLCJCb29rbWFyayIsIlBvc3QiLCJVc2VyIiwiRXJyb3IiLCJib29rbWFyayIsInVzZXIiLCJwb3N0Iiwic2F2ZSIsImZpbmRPbmVBbmRVcGRhdGUiLCJfaWQiLCIkcHVzaCIsImJvb2ttYXJrcyIsImlkIiwiZGVsZXRlQm9va21hcmsiLCJmaW5kQnlJZEFuZFJlbW92ZSIsIiRwdWxsIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFFBQVEsR0FBRztBQUNiO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNJQyxFQUFBQSxjQUFjLEVBQUUsT0FBT0MsSUFBUCxFQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxNQUFEO0FBQVNDLE1BQUFBO0FBQVQ7QUFBUixHQUFiLEVBQXdDO0FBQUVDLElBQUFBLFFBQUY7QUFBWUMsSUFBQUEsSUFBWjtBQUFrQkMsSUFBQUE7QUFBbEIsR0FBeEMsS0FBb0U7QUFDaEYsUUFBSSxDQUFDSixNQUFELElBQVdBLE1BQU0sS0FBRyxFQUF4QixFQUEyQjtBQUN2QixZQUFNLElBQUlLLEtBQUosQ0FBVSxpQkFBVixDQUFOO0FBQ0g7O0FBQ0QsUUFBSSxDQUFDSixNQUFMLEVBQVk7QUFDVCxZQUFNLElBQUlJLEtBQUosQ0FBVSw0QkFBVixDQUFOO0FBQ0Y7O0FBQ0QsVUFBTUMsUUFBUSxHQUFHLE1BQU0sSUFBSUosUUFBSixDQUFhO0FBQUNLLE1BQUFBLElBQUksRUFBRU4sTUFBUDtBQUFnQk8sTUFBQUEsSUFBSSxFQUFFUjtBQUF0QixLQUFiLEVBQTRDUyxJQUE1QyxFQUF2QixDQVBnRixDQVNoRjs7QUFDQSxVQUFNTixJQUFJLENBQUNPLGdCQUFMLENBQXNCO0FBQUNDLE1BQUFBLEdBQUcsRUFBRVg7QUFBTixLQUF0QixFQUFxQztBQUFDWSxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsU0FBUyxFQUFFUCxRQUFRLENBQUNRO0FBQXJCO0FBQVIsS0FBckMsQ0FBTixDQVZnRixDQVdoRjs7QUFDQSxVQUFNVixJQUFJLENBQUNNLGdCQUFMLENBQXNCO0FBQUNDLE1BQUFBLEdBQUcsRUFBRVY7QUFBTixLQUF0QixFQUFzQztBQUFFVyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsU0FBUyxFQUFFUCxRQUFRLENBQUNRO0FBQXRCO0FBQVQsS0FBdEMsQ0FBTjtBQUNBLFdBQU9SLFFBQVA7QUFDSCxHQXJCWTs7QUF1QmI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUVJUyxFQUFBQSxjQUFjLEVBQUUsT0FBT2pCLElBQVAsRUFBYTtBQUFDQyxJQUFBQSxLQUFLLEVBQUU7QUFBRWUsTUFBQUE7QUFBRjtBQUFSLEdBQWIsRUFBOEI7QUFBRVosSUFBQUEsUUFBRjtBQUFZRSxJQUFBQSxJQUFaO0FBQWlCRCxJQUFBQTtBQUFqQixHQUE5QixLQUEwRDtBQUN0RSxVQUFNRyxRQUFRLEdBQUcsTUFBTUosUUFBUSxDQUFDYyxpQkFBVCxDQUEyQkYsRUFBM0IsQ0FBdkIsQ0FEc0UsQ0FHdEU7O0FBQ0EsVUFBTVYsSUFBSSxDQUFDTSxnQkFBTCxDQUFzQjtBQUFDQyxNQUFBQSxHQUFHLEVBQUVMLFFBQVEsQ0FBQ0M7QUFBZixLQUF0QixFQUE0QztBQUFDVSxNQUFBQSxLQUFLLEVBQUU7QUFBRUosUUFBQUEsU0FBUyxFQUFHUCxRQUFRLENBQUNRO0FBQXZCO0FBQVIsS0FBNUMsQ0FBTjtBQUNBLFVBQU1YLElBQUksQ0FBQ08sZ0JBQUwsQ0FBc0I7QUFBQ0MsTUFBQUEsR0FBRyxFQUFFTCxRQUFRLENBQUNFO0FBQWYsS0FBdEIsRUFBNEM7QUFBQ1MsTUFBQUEsS0FBSyxFQUFFO0FBQUNKLFFBQUFBLFNBQVMsRUFBRVAsUUFBUSxDQUFDUTtBQUFyQjtBQUFSLEtBQTVDLENBQU47QUFDQSxXQUFPUixRQUFQO0FBQ0g7QUFwQ1ksQ0FBakI7a0JBc0NlO0FBQUNWLEVBQUFBO0FBQUQsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFkaHJpXFxPbmVEcml2ZVxcRGVza3RvcFxcc2FwcFxcc3BhbmNlclxcc3JjXFxyZXNvbHZlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE11dGF0aW9uID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgYm9va21hcmsgXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkICBcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwb3N0SWQgIFxyXG4gICAgICogXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZUJvb2ttYXJrOiBhc3luYyAocm9vdCwge2lucHV0OiB7cG9zdElkLCB1c2VySWR9fSwgeyBCb29rbWFyayAsUG9zdCwgVXNlcn0pID0+IHtcclxuICAgICAgICBpZiAoIXBvc3RJZCB8fCBwb3N0SWQ9PT1cIlwiKXtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUG9zdCBOb3QgRm91bmQhXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdXNlcklkKXtcclxuICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCb29rTWFya2VyIFVzZXIgbm90IGZvdW5kIVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgYm9va21hcmsgPSBhd2FpdCBuZXcgQm9va21hcmsoe3VzZXI6IHVzZXJJZCwgIHBvc3Q6IHBvc3RJZH0pLnNhdmUoKTtcclxuXHJcbiAgICAgICAgLy8gUHVzaCBib29rbWFyayB0byBwb3N0IGNvbGxlY3Rpb25cclxuICAgICAgICBhd2FpdCBQb3N0LmZpbmRPbmVBbmRVcGRhdGUoe19pZDogcG9zdElkfSwgeyRwdXNoOiB7Ym9va21hcmtzOiBib29rbWFyay5pZH19KSBcclxuICAgICAgICAvLyBQdXNoIGJvb2ttYXJrIHRvIHVzZXIgY29sbGVjdGlvblxyXG4gICAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiB1c2VySWQgfSwgeyAkcHVzaDogeyBib29rbWFya3M6IGJvb2ttYXJrLmlkICB9IH0pXHJcbiAgICAgICAgcmV0dXJuIGJvb2ttYXJrO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZXMgYSBib29rbWFyayBmcm9tICBjb3JyZXNwb25kaW5nIHVzZXJzIGNvbGxlY3Rpb24gXHJcbiAgICAgKlxyXG4gICAgICogIEBwYXJhbSB7c3RyaW5nfSBpZCBcclxuICAgICAqL1xyXG5cclxuICAgIGRlbGV0ZUJvb2ttYXJrOiBhc3luYyAocm9vdCwge2lucHV0OiB7IGlkIH19LCB7IEJvb2ttYXJrLCBVc2VyLFBvc3QgfSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGJvb2ttYXJrID0gYXdhaXQgQm9va21hcmsuZmluZEJ5SWRBbmRSZW1vdmUoaWQpXHJcblxyXG4gICAgICAgIC8vIHJlbW92ZSBib29rbWFyayBmcm9tIFVzZXIgY29sbGVjdGlvblxyXG4gICAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiBib29rbWFyay51c2VyfSwgeyRwdWxsOiB7IGJvb2ttYXJrcyA6IGJvb2ttYXJrLmlkIH19KVxyXG4gICAgICAgIGF3YWl0IFBvc3QuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiBib29rbWFyay5wb3N0fSwgeyRwdWxsOiB7Ym9va21hcmtzOiBib29rbWFyay5pZH19KVxyXG4gICAgICAgIHJldHVybiBib29rbWFyaztcclxuICAgIH0sXHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IHtNdXRhdGlvbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "bookmark.js"
      ],
      "names": [
        "Mutation",
        "createBookmark",
        "root",
        "input",
        "postId",
        "userId",
        "Bookmark",
        "Post",
        "User",
        "Error",
        "bookmark",
        "user",
        "post",
        "save",
        "findOneAndUpdate",
        "_id",
        "$push",
        "bookmarks",
        "id",
        "deleteBookmark",
        "findByIdAndRemove",
        "$pull"
      ],
      "mappings": ";;;;;AAAA,MAAMA,QAAQ,GAAG;AACb;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,cAAc,EAAE,OAAOC,IAAP,EAAa;AAACC,IAAAA,KAAK,EAAE;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT;AAAR,GAAb,EAAwC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAxC,KAAoE;AAChF,QAAI,CAACJ,MAAD,IAAWA,MAAM,KAAG,EAAxB,EAA2B;AACvB,YAAM,IAAIK,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACD,QAAI,CAACJ,MAAL,EAAY;AACT,YAAM,IAAII,KAAJ,CAAU,4BAAV,CAAN;AACF;;AACD,UAAMC,QAAQ,GAAG,MAAM,IAAIJ,QAAJ,CAAa;AAACK,MAAAA,IAAI,EAAEN,MAAP;AAAgBO,MAAAA,IAAI,EAAER;AAAtB,KAAb,EAA4CS,IAA5C,EAAvB,CAPgF,CAShF;;AACA,UAAMN,IAAI,CAACO,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEX;AAAN,KAAtB,EAAqC;AAACY,MAAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAArB;AAAR,KAArC,CAAN,CAVgF,CAWhF;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEV;AAAN,KAAtB,EAAsC;AAAEW,MAAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAAtB;AAAT,KAAtC,CAAN;AACA,WAAOR,QAAP;AACH,GArBY;;AAuBb;AACJ;AACA;AACA;AACA;AAEIS,EAAAA,cAAc,EAAE,OAAOjB,IAAP,EAAa;AAACC,IAAAA,KAAK,EAAE;AAAEe,MAAAA;AAAF;AAAR,GAAb,EAA8B;AAAEZ,IAAAA,QAAF;AAAYE,IAAAA,IAAZ;AAAiBD,IAAAA;AAAjB,GAA9B,KAA0D;AACtE,UAAMG,QAAQ,GAAG,MAAMJ,QAAQ,CAACc,iBAAT,CAA2BF,EAA3B,CAAvB,CADsE,CAGtE;;AACA,UAAMV,IAAI,CAACM,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEL,QAAQ,CAACC;AAAf,KAAtB,EAA4C;AAACU,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAGP,QAAQ,CAACQ;AAAvB;AAAR,KAA5C,CAAN;AACA,UAAMX,IAAI,CAACO,gBAAL,CAAsB;AAACC,MAAAA,GAAG,EAAEL,QAAQ,CAACE;AAAf,KAAtB,EAA4C;AAACS,MAAAA,KAAK,EAAE;AAACJ,QAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAArB;AAAR,KAA5C,CAAN;AACA,WAAOR,QAAP;AACH;AApCY,CAAjB;kBAsCe;AAACV,EAAAA;AAAD,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\resolvers\\",
      "sourcesContent": [
        "const Mutation = {\r\n    /**\r\n     * Creates a bookmark \r\n     * @param {string} userId  \r\n     * @param {string} postId  \r\n     * \r\n     */\r\n    createBookmark: async (root, {input: {postId, userId}}, { Bookmark ,Post, User}) => {\r\n        if (!postId || postId===\"\"){\r\n            throw new Error(\"Post Not Found!\")\r\n        }\r\n        if (!userId){\r\n           throw new Error(\"BookMarker User not found!\");\r\n        }\r\n        const bookmark = await new Bookmark({user: userId,  post: postId}).save();\r\n\r\n        // Push bookmark to post collection\r\n        await Post.findOneAndUpdate({_id: postId}, {$push: {bookmarks: bookmark.id}}) \r\n        // Push bookmark to user collection\r\n        await User.findOneAndUpdate({_id: userId }, { $push: { bookmarks: bookmark.id  } })\r\n        return bookmark;\r\n    },\r\n\r\n    /**\r\n     * Deletes a bookmark from  corresponding users collection \r\n     *\r\n     *  @param {string} id \r\n     */\r\n\r\n    deleteBookmark: async (root, {input: { id }}, { Bookmark, User,Post }) => {\r\n        const bookmark = await Bookmark.findByIdAndRemove(id)\r\n\r\n        // remove bookmark from User collection\r\n        await User.findOneAndUpdate({_id: bookmark.user}, {$pull: { bookmarks : bookmark.id }})\r\n        await Post.findOneAndUpdate({_id: bookmark.post}, {$pull: {bookmarks: bookmark.id}})\r\n        return bookmark;\r\n    },\r\n};\r\nexport default {Mutation};"
      ]
    },
    "sourceType": "module",
    "mtime": 1626089083253
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"filename\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\src\\\\models\\\\Bookmark.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"C:\\\\Users\\\\adhri\\\\OneDrive\\\\Desktop\\\\sapp\\\\spancer\\\\node_modules\\\\babel-preset-env\\\\lib\\\\index.js$0\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":{},\"_verified\":{},\"ThisExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Bookmark.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\node_modules\\babel-preset-env\\lib\\index.js$0",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "ThisExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Bookmark.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\Bookmark.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
        "sourceFileName": "Bookmark.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require(\"mongoose\");\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Schema = _mongoose2.default.Schema;\n/**\r\n * BookMark Schema that has link to User and Post \r\n*/\n\nconst bookmarkSchema = Schema({\n  post: {\n    type: Schema.Types.ObjectId,\n    ref: 'Post'\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User'\n  }\n}, {\n  timestamps: true\n});\nexports.default = _mongoose2.default.model('Bookmark', bookmarkSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvb2ttYXJrLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwiYm9va21hcmtTY2hlbWEiLCJwb3N0IiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ1c2VyIiwidGltZXN0YW1wcyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHQyxtQkFBU0QsTUFBeEI7QUFFQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUUsY0FBYyxHQUFHRixNQUFNLENBQ3pCO0FBQ0lHLEVBQUFBLElBQUksRUFBRTtBQUNIQyxJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURoQjtBQUVIQyxJQUFBQSxHQUFHLEVBQUc7QUFGSCxHQURWO0FBS0lDLEVBQUFBLElBQUksRUFBRTtBQUNGSixJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURqQjtBQUVGQyxJQUFBQSxHQUFHLEVBQUU7QUFGSDtBQUxWLENBRHlCLEVBV3pCO0FBQ0lFLEVBQUFBLFVBQVUsRUFBRTtBQURoQixDQVh5QixDQUE3QjtrQkFlZVIsbUJBQVNTLEtBQVQsQ0FBZSxVQUFmLEVBQTBCUixjQUExQixDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYWRocmlcXE9uZURyaXZlXFxEZXNrdG9wXFxzYXBwXFxzcGFuY2VyXFxzcmNcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuXHJcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcclxuXHJcbi8qKlxyXG4gKiBCb29rTWFyayBTY2hlbWEgdGhhdCBoYXMgbGluayB0byBVc2VyIGFuZCBQb3N0IFxyXG4qL1xyXG5jb25zdCBib29rbWFya1NjaGVtYSA9IFNjaGVtYShcclxuICAgIHsgICBcclxuICAgICAgICBwb3N0OiB7XHJcbiAgICAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgIHJlZiA6ICdQb3N0J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXNlcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgIHJlZjogJ1VzZXInXHJcbiAgICAgICAgfSwgICAgXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHRpbWVzdGFtcHM6IHRydWUgXHJcbiAgICB9XHJcbik7XHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdCb29rbWFyaycsYm9va21hcmtTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Bookmark.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "bookmarkSchema",
        "post",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "user",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAMA,MAAM,GAAGC,mBAASD,MAAxB;AAEA;AACA;AACA;;AACA,MAAME,cAAc,GAAGF,MAAM,CACzB;AACIG,EAAAA,IAAI,EAAE;AACHC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADhB;AAEHC,IAAAA,GAAG,EAAG;AAFH,GADV;AAKIC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADjB;AAEFC,IAAAA,GAAG,EAAE;AAFH;AALV,CADyB,EAWzB;AACIE,EAAAA,UAAU,EAAE;AADhB,CAXyB,CAA7B;kBAeeR,mBAASS,KAAT,CAAe,UAAf,EAA0BR,cAA1B,C",
      "sourceRoot": "C:\\Users\\adhri\\OneDrive\\Desktop\\sapp\\spancer\\src\\models\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * BookMark Schema that has link to User and Post \r\n*/\r\nconst bookmarkSchema = Schema(\r\n    {   \r\n        post: {\r\n           type: Schema.Types.ObjectId,\r\n           ref : 'Post'\r\n        },\r\n        user: {\r\n            type: Schema.Types.ObjectId,\r\n            ref: 'User'\r\n        },    \r\n    },\r\n    {\r\n        timestamps: true \r\n    }\r\n);\r\nexport default mongoose.model('Bookmark',bookmarkSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1626088420328
  }
}